<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>blog.davep.org - misc</title><link href="https://blog.davep.org/" rel="alternate"></link><link href="https://blog.davep.org/feeds/misc.atom.xml" rel="self"></link><id>https://blog.davep.org/</id><updated>2023-07-04T08:32:00+01:00</updated><entry><title>Considering Pelican</title><link href="https://blog.davep.org/2023/07/04/considering-pelican.html" rel="alternate"></link><published>2023-07-04T08:32:00+01:00</published><updated>2023-07-04T08:32:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2023-07-04:/2023/07/04/considering-pelican.html</id><summary type="html">&lt;p&gt;Since getting my blog editing environment set up on the "new" machine &lt;a href="/2023/07/02/catching-up.html"&gt;a
couple of days back&lt;/a&gt; I've been thinking some
more about moving away from Jekyll. Jekyll itself has served me well since I
started this blog &lt;a href="/2015/06/18/hello-world.html"&gt;back in 2015&lt;/a&gt;, but I was
reminded again when installing it on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Since getting my blog editing environment set up on the "new" machine &lt;a href="/2023/07/02/catching-up.html"&gt;a
couple of days back&lt;/a&gt; I've been thinking some
more about moving away from Jekyll. Jekyll itself has served me well since I
started this blog &lt;a href="/2015/06/18/hello-world.html"&gt;back in 2015&lt;/a&gt;, but I was
reminded again when installing it on the Mac Mini that it's Ruby-based and I
have very little understanding of how to get a good Ruby experience on
macOS&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Having &lt;a href="https://fosstodon.org/@davep/110643256889173912"&gt;mentioned on Mastodon that I was thinking about finally looking at
moving my blog management/generation to something
new&lt;/a&gt;, and specifically
something Python-based and ideally some sort of site generator, I got a few
suggestions.&lt;/p&gt;
&lt;p&gt;One that looks promising so far is &lt;a href="https://getpelican.com/"&gt;Pelican&lt;/a&gt;. At
first glance it seems to tick a few boxes for me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python-based (so easy for me to grok in terms of installing, and also more
  chance of being hackable).&lt;/li&gt;
&lt;li&gt;Uses Markdown (curiously as an alternative, to reStructuredText, which
  looks to be the default).&lt;/li&gt;
&lt;li&gt;Does article-based stuff as well as page-based stuff.&lt;/li&gt;
&lt;li&gt;Lots of themes, and themes are Jinja2-based (I'm pretty familiar with
  Jinja thanks to my Django days and also &lt;a href="https://github.com/davep/ng2web"&gt;using the library when kicking
  off &lt;code&gt;ng2web&lt;/code&gt;&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;RSS feed generation.&lt;/li&gt;
&lt;li&gt;Syntax-highlighted code blocks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While I'm not quite ready to dive in and make the move just yet (I am on a
"muck about at home" holiday this week, but I've got enough planned without
losing a day to rebooting my blog), I did do a quick experiment to see if
Pelican would work for me.&lt;/p&gt;
&lt;p&gt;Key to this is can I keep the URLs for all the posts the same? If I can't
that's a non-starter.&lt;/p&gt;
&lt;p&gt;Things got off to a good start with an easy install:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pipx&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pelican[markdown]&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I then used the &lt;code&gt;pelican-quickstart&lt;/code&gt; to kick off a test site, copied in my
existing Markdown files, dived into the docs and found how to configure the
generated URLs and... yeah, within like 10 minutes I had a &lt;em&gt;very&lt;/em&gt; rough
version of my blog up and going.&lt;/p&gt;
&lt;p&gt;It looked like garbage, the theme really wasn't to my taste at all, but the
core of the blog was working.&lt;/p&gt;
&lt;p&gt;I've nuked it all for now but a more considered evaluation is now on my TODO
list. Things I'll need to drive into properly are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Find a base theme that's to my taste.&lt;/li&gt;
&lt;li&gt;Get Disqus working it so that any old comments remain in place.&lt;/li&gt;
&lt;li&gt;Get my image/attachment layout back in place.&lt;/li&gt;
&lt;li&gt;Go through and tidy up all the tagging (which has been a mess with this
  blog because I never did get round to getting Jekyll to actually use
  tags).&lt;/li&gt;
&lt;li&gt;Figure out the best way to do the publishing to GitHub pages.&lt;/li&gt;
&lt;li&gt;Likely a bunch of other stuff I've not thought about yet.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But, yeah, for a brief "over first coffee of the day" tinker to see if I
like it... I like!&lt;/p&gt;
&lt;p&gt;Let's see how long it takes me to actually get around to making the switch.
;-)&lt;/p&gt;
&lt;hr&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;When setting this up a couple of days back, I had to pin some packages
for the blog to older versions because of Ruby version issues; I'm sure
that Ruby has virtual environment solutions akin to Python, but diving
into that just for one tool... nah.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="misc"></category><category term="Python"></category><category term="Blogging"></category></entry><entry><title>A new GitHub profile README</title><link href="https://blog.davep.org/2023/07/03/a-new-github-profile-readme.html" rel="alternate"></link><published>2023-07-03T08:15:00+01:00</published><updated>2023-07-03T08:15:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2023-07-03:/2023/07/03/a-new-github-profile-readme.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/davep/davep/main/davep.svg"&gt;&lt;/p&gt;
&lt;p&gt;Ever since GitHub introduced the &lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme"&gt;profile
README&lt;/a&gt;&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;
I've had a massively low-effort one in place. I made the repo, quickly wrote
the file, and then sort of forgot about it. Well, I didn't so much forget as
just keep looking at it and thinking "I should do something better …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/davep/davep/main/davep.svg"&gt;&lt;/p&gt;
&lt;p&gt;Ever since GitHub introduced the &lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme"&gt;profile
README&lt;/a&gt;&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;
I've had a massively low-effort one in place. I made the repo, quickly wrote
the file, and then sort of forgot about it. Well, I didn't so much forget as
just keep looking at it and thinking "I should do something better with that
one day".&lt;/p&gt;
&lt;p&gt;Thing is, while there are lots of fancy approaches out there, and lots of
neat generator tools and the like... they just weren't for me.&lt;/p&gt;
&lt;p&gt;Then yesterday, over my second morning coffee, after &lt;a href="/2023/07/02/catching-up.html"&gt;getting my blog
environment up and going again&lt;/a&gt;, I had an
idea. It could be cool to use &lt;a href="https://textual.textualize.io/api/app/#textual.app.App.save_screenshot"&gt;Textual's screenshot
facility&lt;/a&gt;
to make something terminal-themed! I mean, while it's not &lt;em&gt;all&lt;/em&gt; I am these
days, so much of what I'm doing right now is aimed at the terminal.&lt;/p&gt;
&lt;p&gt;So... what to do? Then I thought it could be cool to knock up some sort of
login screen type thing; with a banner. One visit to an online large
terminal text generator site later, I had some banner text. All that was
left was to write &lt;a href="https://github.com/davep/davep/blob/main/make_banner.py"&gt;a simple Textual application to create the
"screen"&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The main layout is simple enough:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;compose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ComposeResult&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;banner&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PRATTLE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;github.com/davep login: [reverse] [/]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;where &lt;code&gt;NAME&lt;/code&gt; contains the banner and &lt;code&gt;PRATTLE&lt;/code&gt; contains the "login message".
With some &lt;a href="https://textual.textualize.io/guide/CSS/"&gt;Textual CSS&lt;/a&gt; sprinkled
over it to give the exact layout and colour I wanted, all that was left was
to make the snapshot. This was easy enough too.&lt;/p&gt;
&lt;p&gt;While the whole thing isn't fully documented just yet, Textual does have &lt;a href="https://textual.textualize.io/api/app/#textual.app.App.run_test"&gt;a
great tool for automatically running an application and interacting with
it&lt;/a&gt;; that
meant I could easily write a function to load up my app and save the
screenshot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;make_banner&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;GitHubBannerApp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_test&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pilot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;pilot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save_screenshot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;davep.svg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Of course, that needs running async, but that's simple enough:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;make_banner&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Throw in a &lt;code&gt;Makefile&lt;/code&gt; so I don't forget what I'm supposed to run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;.PHONY:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
&lt;span class="nl"&gt;all:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nf"&gt;pipenv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;make_banner.py&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and that's it! Job done!&lt;/p&gt;
&lt;p&gt;From here onward I guess I could have some real fun with this. It would be
simple enough I guess to modify the code so that it changes what's displayed
over time; perhaps show a "last login" value that relates to recently
activity or something; any number of things; and then run it in a cron job
and update the repository.&lt;/p&gt;
&lt;p&gt;For now though... I'll stick with keeping things nice and simple.&lt;/p&gt;
&lt;hr&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;It was actually kind of annoying when they introduced it because the
repo it uses is named after your user name. I already had a &lt;code&gt;davep&lt;/code&gt;
repo: it was a private repo where I was slowly working on a (now
abandoned, I'll start it again some day I'm sure) ground-up rewrite of
my &lt;code&gt;davep.org&lt;/code&gt; website.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="misc"></category><category term="GitHub"></category><category term="Python"></category><category term="Textualie"></category></entry><entry><title>Catching up</title><link href="https://blog.davep.org/2023/07/02/catching-up.html" rel="alternate"></link><published>2023-07-02T08:00:00+01:00</published><updated>2023-07-02T08:00:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2023-07-02:/2023/07/02/catching-up.html</id><summary type="html">&lt;p&gt;So... erm... yeah... I did it again. I looked away for a moment and somehow
&lt;a href="/2022/12/16/oidia.html"&gt;almost 7 months passed without a post&lt;/a&gt;! It's so
easily done too isn't it? While, &lt;a href="/2022/05/20/im-back.html"&gt;when I revived this blog last
year&lt;/a&gt;, I didn't make a point of intending to write
lots and often, I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;So... erm... yeah... I did it again. I looked away for a moment and somehow
&lt;a href="/2022/12/16/oidia.html"&gt;almost 7 months passed without a post&lt;/a&gt;! It's so
easily done too isn't it? While, &lt;a href="/2022/05/20/im-back.html"&gt;when I revived this blog last
year&lt;/a&gt;, I didn't make a point of intending to write
lots and often, I had hope that I'd manage something at least once a week;
perhaps at least once a month.&lt;/p&gt;
&lt;p&gt;Ahh well.&lt;/p&gt;
&lt;p&gt;There's been two main reasons why it's been quiet around here. The first is
that &lt;a href="/2022/10/05/on-to-something-new-redux.html"&gt;my (now not so) new job&lt;/a&gt;
keeps me busy (in a good way). It involves a reasonable amount of trekking
into town and back (which I don't mind on the whole), and once I'm home in
the evening I'm generally (but not always) done with the keyboard and desk.&lt;/p&gt;
&lt;p&gt;The second reason, which is probably the dafter one, is that a bit earlier
this year I finally upgraded my desktop setup from the 2019 Intel MacBook
Pro I was using to a recently-released M2Pro Mac Mini (and &lt;em&gt;what&lt;/em&gt; an
upgrade!). How this plays into blogging being even more quiet is... I needed
to set up jekyll again, and I'd forgotten how I got it running in the first
place, so I kept putting off getting it going, and...&lt;/p&gt;
&lt;p&gt;Well, this morning, I sat down with coffee, grepped the &lt;code&gt;history&lt;/code&gt; on my
previous machine, and got it running in like 5 minutes (of course).&lt;/p&gt;
&lt;p&gt;So, here I am, back adding another blog post. I'm writing this as much to
test that the setup works as anything else.&lt;/p&gt;
&lt;p&gt;But also, this time, I'm going to try and make a promise to myself: I'm
going to try and write more. I can and should write about anything. I can
and should write short things as well as long things. I can and should
remember that it's not about writing things that are going to be super
important or anything like that, it's about just getting stuff down and
creating and recording.&lt;/p&gt;
&lt;p&gt;Note of course I said "try" and make a promise.&lt;/p&gt;
&lt;p&gt;We'll see. ;-)&lt;/p&gt;</content><category term="misc"></category><category term="Mac"></category><category term="Apple"></category></entry><entry><title>OIDIA</title><link href="https://blog.davep.org/2022/12/16/oidia.html" rel="alternate"></link><published>2022-12-16T09:30:00+00:00</published><updated>2022-12-16T09:30:00+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2022-12-16:/2022/12/16/oidia.html</id><summary type="html">&lt;p&gt;Another little thing that's up on PyPi now, which is the final bit of
fallout from &lt;a href="/2022/12/01/new-things-on-pypi.html"&gt;the Textual dogfooding
sessions&lt;/a&gt;, is a little project I'm
calling OIDIA.&lt;/p&gt;
&lt;p&gt;The application is a streak tracker. I'm quite the fan of streak trackers.
I've used a few over the years, both to help …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Another little thing that's up on PyPi now, which is the final bit of
fallout from &lt;a href="/2022/12/01/new-things-on-pypi.html"&gt;the Textual dogfooding
sessions&lt;/a&gt;, is a little project I'm
calling OIDIA.&lt;/p&gt;
&lt;p&gt;The application is a streak tracker. I'm quite the fan of streak trackers.
I've used a few over the years, both to help keep me motivated and honest,
and also to help me track that I've avoided unhelpful things too. Now, most
of the apps I've used, and use now, tend to have reminders and counts and
stats and are all about "DO NOT BREAK THE STREAK OR ELSE" and that's mostly
fine, but...&lt;/p&gt;
&lt;p&gt;To keep things simple and to purely concentrate on how to build Textual
apps, I made this a "non-judgement" streak tracker. It's designed to be
really simple: you add a streak, you bump up/down the number of times you
did (or didn't do) the thing related to that streak, for each day, and
that's it.&lt;/p&gt;
&lt;p&gt;No totals. No stats. No reminders and bugging. No judgement.&lt;/p&gt;
&lt;p&gt;Here it is in action:&lt;/p&gt;
&lt;div style="text-align: center;"&gt;
    &lt;iframe
        width="560" height="315"
        src="https://www.youtube.com/embed/3Kz8eUzO9-8"
        title="YouTube video player"
        frameborder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
        allowfullscreen&gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;When I started it, I wasn't quite sure how I wanted to store the data.
Throwing it in a SQLite database held some appeal, but that also felt like a
lot of faff for something so simple. Also, I wanted to make the data as easy
to get at, to use elsewhere, and to hack on, as possible. So in the end I
went with a simple JSON file.&lt;/p&gt;
&lt;p&gt;On macOS and GNU/Linux &lt;code&gt;streaks.json&lt;/code&gt; lives in &lt;code&gt;~/.local/share/oidia&lt;/code&gt;, on
Windows it'll be in... I'm not sure off the top of my head actually; it'll
be in whatever directory &lt;a href="https://pypi.org/project/xdg/"&gt;the handy &lt;code&gt;xdg&lt;/code&gt;
library&lt;/a&gt; has chosen. and because it's JSON
that means that something like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="OIDIA in action" src="/attachments/2022/12/16/oidia.png"&gt;&lt;/p&gt;
&lt;p&gt;ends up looking like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hack some Python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;days&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-02&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-03&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-04&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-05&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-06&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-07&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-08&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-11-30&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-11-29&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-11-28&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Brush my teeth&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;days&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-02&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-03&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-04&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-05&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-06&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-07&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-08&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-11-30&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-11-29&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-11-28&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Walk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;days&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-02&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-03&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-04&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-05&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-06&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-07&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-08&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-11-30&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-11-29&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-11-28&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Run 5k&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;days&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-03&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-05&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-11-30&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-11-28&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Run 10k&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;days&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-12-03&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;2022-11-28&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Of course, it remains to be seen how well that actually scales; possibly not
so well over a long period of time, but this was written more as another way
to explore Textual than anything else. Even then, it would be pretty trivial
to update to something better for holding the data.&lt;/p&gt;
&lt;p&gt;If this seems like your thing (and I will be supporting it and onward
developing it) you &lt;a href="https://pypi.org/project/oidia/"&gt;can find it over on
PyPi&lt;/a&gt;, which means it can be installed with
&lt;code&gt;pip&lt;/code&gt; or the ever-handy &lt;code&gt;pipx&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pipx&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;oidia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category><category term="Python"></category><category term="programming"></category></entry><entry><title>New Things On PyPi</title><link href="https://blog.davep.org/2022/12/01/new-things-on-pypi.html" rel="alternate"></link><published>2022-12-01T22:13:00+00:00</published><updated>2022-12-01T22:13:00+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2022-12-01:/2022/12/01/new-things-on-pypi.html</id><summary type="html">&lt;h1&gt;An update&lt;/h1&gt;
&lt;p&gt;So, it's fast approaching 2 months now &lt;a href="/2022/10/05/on-to-something-new-redux.html"&gt;since I started the new
thing&lt;/a&gt; and it's been a busy
time. I've had to adjust to a quite a few new things, not least of which has
been a longer and more involved commute. I'm actually mostly enjoying it
too …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;An update&lt;/h1&gt;
&lt;p&gt;So, it's fast approaching 2 months now &lt;a href="/2022/10/05/on-to-something-new-redux.html"&gt;since I started the new
thing&lt;/a&gt; and it's been a busy
time. I've had to adjust to a quite a few new things, not least of which has
been a longer and more involved commute. I'm actually mostly enjoying it
too. While having to contend with busses isn't the &lt;em&gt;best&lt;/em&gt; thing to be doing
with my day, I do have a very fond spot for Edinburgh and it's nice to be in
there most days of the week.&lt;/p&gt;
&lt;p&gt;Part of the fallout from the new job has been that, in the last couple of
weeks, I've thrown some more stuff up on PyPi. This comes about as part of a
bit of a dog-fooding campaign we're on at the moment (you can read some
background to this &lt;a href="https://textual.textualize.io/blog/2022/11/26/on-dog-food-the-original-metaverse-and-not-being-bored/"&gt;over on the company
blog&lt;/a&gt;).
While they have been, and will continue to be, mentioned on the Textualize
blog, I thought I'd give a brief mention of them here on my own blog too
given they are, essentially, personal projects.&lt;/p&gt;
&lt;h1&gt;gridinfo&lt;/h1&gt;
&lt;p&gt;This is one I'd like to tweak some more and improve on if possible. It is,
in essence, a Python-coded terminal tool that does more or less the same as
&lt;a href="https://github.com/davep/slstats.el"&gt;&lt;code&gt;slstats.el&lt;/code&gt;&lt;/a&gt;. It started out as &lt;a href="https://twitter.com/davepdotorg/status/1590476280457490434"&gt;a
rather silly quick
hack&lt;/a&gt;, designed
to do something different with
&lt;a href="https://github.com/darrenburns/rich-pixels"&gt;&lt;code&gt;rich-pixels&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's the finished version (as of the time of writing) being put through
its paces:&lt;/p&gt;
&lt;div style="text-align: center;"&gt;
&lt;iframe width="560" height="315"
src="https://www.youtube.com/embed/dzpGgVPD2aM" title="YouTube video player"
frameborder="0" allow="accelerometer; autoplay; clipboard-write;
encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Download &lt;a href="https://pypi.org/project/gridinfo/"&gt;from here&lt;/a&gt;, or install and
play with it with a quick &lt;code&gt;pipx install gridinfo&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;unbored&lt;/h1&gt;
&lt;p&gt;The next experiment with Textual was to write a terminal-based client for
the &lt;a href="https://www.boredapi.com/"&gt;Bored-API&lt;/a&gt;. My initial plan for this was to
just have a button or two that the user could mash on and they'd get an
activity suggestion dropped into the middle of the terminal; but really that
seemed a bit boring. Then I realised that it'd be a bit more silly and a bit
more fun if I did it as a sort of TODO app. Bored? Run it up and use one of
the activities you'd generated before. Don't like any of them? Ignore them
and generate some more! Feeling bad that you've got such a backlog of
reasons to not be bored? Delete a bunch!&lt;/p&gt;
&lt;p&gt;And so on.&lt;/p&gt;
&lt;p&gt;Here's a short video of it in action:&lt;/p&gt;
&lt;div style="text-align: center;"&gt;
&lt;iframe width="560" height="315"
src="https://www.youtube.com/embed/Zl3dIzYfIWI" title="YouTube video player"
frameborder="0" allow="accelerometer; autoplay; clipboard-write;
encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Download &lt;a href="https://pypi.org/project/unbored/"&gt;from here&lt;/a&gt;, or install and play
with it with a quick &lt;code&gt;pipx install unbored&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;textual-qrcode&lt;/h1&gt;
&lt;p&gt;This one... this one I'm going to blame on the brain fog that followed flu
&lt;em&gt;and&lt;/em&gt; Covid jabs that happened the day before (and which are still kicking
my arse 4 days later). Monday morning, at my desk, and I'm wondering what to
next write to experiment with Textual, and I realised it would be
interesting to write something that would show off that it's easy to make a
third party widget library.&lt;/p&gt;
&lt;p&gt;And... yeah, I don't know why, but I remembered
&lt;a href="https://github.com/davep/qrencode.el"&gt;&lt;code&gt;qrencode.el&lt;/code&gt;&lt;/a&gt; and so
&lt;code&gt;textual-qrcode&lt;/code&gt; was born!&lt;/p&gt;
&lt;p&gt;&lt;img alt="The most useless Textal widget yet" src="/attachments/2022/12/01/textual-qrcode.png"&gt;&lt;/p&gt;
&lt;p&gt;I think the most amusing part about this is that I did it in full knowledge
that it would be useless; the idea being it would be a daft way of showing
off how you could build a widget library as an add-on for Textual. But...
more than one person actually ended up saying "yeah hold up there this could
actually be handy!"&lt;/p&gt;
&lt;p&gt;If you're one of those people... &lt;a href="https://pypi.org/project/textual-qrcode/"&gt;you'll find it
here&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;FivePyFive&lt;/h1&gt;
&lt;p&gt;While I was on a roll putting stuff up on PyPi, I also decided to tweak up
my Textual-based 5x5 and throw that up too. This was &lt;a href="https://twitter.com/davepdotorg/status/1554207518615814148"&gt;my first app built
with Textual&lt;/a&gt;,
initially written before I'd even spoken to Will about the position here. At
one point I even did &lt;a href="https://github.com/davep/textual/blob/c4f60548922609133763c0e49f7b23aea5d44c2b/sandbox/davep/five_by_five.hy"&gt;a version in
Lisp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It's since gone on to become &lt;a href="https://github.com/Textualize/textual/tree/d2ba22b86f48f4ce5b0f55767efdcf1a5478b180/examples"&gt;one of the example apps in Textual
itself&lt;/a&gt;
but I felt it deserved being made available to the world via an easy(ish)
install. So, if you fancy trying to crack the puzzle in your terminal, just
do a quick:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pipx&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;fivepyfive
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and click away.&lt;/p&gt;
&lt;div style="text-align: center;"&gt;
&lt;iframe width="343" height="610"
src="https://www.youtube.com/embed/Rf34Z5r7Q60" title="FivePyFive -- A
little annoying puzzle for the terminal" frameborder="0"
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope;
picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;You can find it &lt;a href="https://pypi.org/project/fivepyfive/"&gt;over here&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;PISpy&lt;/h1&gt;
&lt;p&gt;Finally... for this week anyway, is a tool I've called PISpy. It's designed
as a simple terminal client for looking up package information on PyPi. As
of right now it's pretty straightforward, but I'd like to add more to it
over time. Here's an example of it in action:&lt;/p&gt;
&lt;div style="text-align: center;"&gt;
&lt;iframe width="560" height="315"
src="https://www.youtube.com/embed/yMGD6bXqIEo" title="YouTube video player"
frameborder="0" allow="accelerometer; autoplay; clipboard-write;
encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;One small wrinkle with publishing it to PyPi was the fact that, once I'd
chosen the name, I checked that it hadn't been used on PyPi (it hadn't) but
when it came to publishing the package it got rejected because the name was
too similar to another package! I don't know which, it wouldn't say, but
that was a problem. So in the end the published name ended up having to be
slightly different from the actual tool's name.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://pypi.org/project/pispy-client/"&gt;over here&lt;/a&gt; for the package, and
you can install it with a:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pipx&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;pispy-client
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then just run &lt;code&gt;pispy&lt;/code&gt; in the terminal.&lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;It's been a fun couple of weeks coming up with stuff to help exercise
Textual, and there's more to come. Personally I've found the process really
helpful in that it's help me learn more about the framework and also figure
out my own approach to working with it. Each thing I've built so far has
been a small step in evolution on from what I did in the previous thing. I
doubt I've arrived at a plateau of understanding just yet.&lt;/p&gt;</content><category term="misc"></category><category term="Python"></category><category term="programming"></category></entry><entry><title>Python and macOS</title><link href="https://blog.davep.org/2022/11/05/python-and-macos.html" rel="alternate"></link><published>2022-11-05T08:49:00+00:00</published><updated>2022-11-05T08:49:00+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2022-11-05:/2022/11/05/python-and-macos.html</id><summary type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;On Twitter, a few weeks back, &lt;a href="https://twitter.com/itsBexli/status/1577332548933500928"&gt;@itsBexli asked me how I go about setting up
Python for development on
macOS&lt;/a&gt;. It's a
great question and one that seems to crop up in various places, and since &lt;a href="/2015/06/27/my-first-couple-of-weeks-with-an-imac.html"&gt;I
first got into using
macOS&lt;/a&gt; and then
&lt;a href="/2017/12/12/on_to_something_new.html"&gt;subsequently got back into coding …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;On Twitter, a few weeks back, &lt;a href="https://twitter.com/itsBexli/status/1577332548933500928"&gt;@itsBexli asked me how I go about setting up
Python for development on
macOS&lt;/a&gt;. It's a
great question and one that seems to crop up in various places, and since &lt;a href="/2015/06/27/my-first-couple-of-weeks-with-an-imac.html"&gt;I
first got into using
macOS&lt;/a&gt; and then
&lt;a href="/2017/12/12/on_to_something_new.html"&gt;subsequently got back into coding lots in
Python&lt;/a&gt; it's absolutely an issue I ran
into.&lt;/p&gt;
&lt;p&gt;With my previous employer, while I was the only developer, I wasn't the only
person writing code and more than one other person had this issue so I
eventually wrote up my approach to solving this problem. That document is on
their internal GitLab, but I thought it worth me writing my personal
macOS/Python "rules" up again, just in case they're useful to anyone else.&lt;/p&gt;
&lt;p&gt;I am, of course, not the first person to tackle this, to document this, to
write down a good approach to this. Before and after I settled on my
approach I'd seen other people write about this. So... this post isn't here
to try and replace those, it's simply to write down my own approach, so if
anyone asks again I can point them here. I feel it's important to stress:
this isn't the only way or thoughts on this issue, there are lots of others.
Do go read them too and then settle on an approach that works for you.&lt;/p&gt;
&lt;p&gt;One other point to note, which may or may not make a difference (and may or
may not affect how this changes with time): for the past few years I've been
a heavy user of &lt;a href="https://pipenv.pypa.io/en/latest/"&gt;&lt;code&gt;pipenv&lt;/code&gt;&lt;/a&gt; to manage my
virtual environments. This is very likely to change from now on, but keep in
mind that what follows was arrived at from the perspective of a &lt;code&gt;pipenv&lt;/code&gt;
user.&lt;/p&gt;
&lt;p&gt;So... with that admin aside...&lt;/p&gt;
&lt;h1&gt;The Problem&lt;/h1&gt;
&lt;p&gt;When I first got back into writing Python it was on macOS and, really early
on, I ran into all the usual issues: virtual environments breaking because
they were based on the system Python and it got updated, virtual
environments based on the Homebrew-installed Python and it got updated,
etc... Simply put, an occasional, annoying, non-show-stopping breaking of my
development environment which would distract me when I'd sat down to just
hack on some code, not do system admin!&lt;/p&gt;
&lt;h1&gt;My Solution&lt;/h1&gt;
&lt;p&gt;For me, what's worked for me without a problem over the past few years, in
short, is this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;NEVER&lt;/strong&gt; use the system version of Python. Just don't.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NEVER&lt;/strong&gt; use the Homebrew's own version of Python (I'm not even sure
   this is an issue any more; but it used to be).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NEVER&lt;/strong&gt; use a version of Python installed with Homebrew (or, more to
   the point, never install Python with Homebrew).&lt;/li&gt;
&lt;li&gt;Manage everything with &lt;a href="https://github.com/pyenv/"&gt;&lt;code&gt;pyenv&lt;/code&gt;&lt;/a&gt;; which I do
   install from Homebrew.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;The Detail&lt;/h1&gt;
&lt;p&gt;As mentioned earlier, what I'm writing here assumes that virtual
environments are being managed with &lt;code&gt;pipenv&lt;/code&gt; (something I still do for
personal projects, for now, but this may change soon). Your choices and
mileage may vary, etc... This is what works well for me.&lt;/p&gt;
&lt;h2&gt;The "one time" items&lt;/h2&gt;
&lt;p&gt;These are the items that need initially installing into a new macOS machine:&lt;/p&gt;
&lt;h3&gt;Homebrew&lt;/h3&gt;
&lt;p&gt;Unless it comes from the Mac App Store, I try and install everything via
&lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;. It's really handy for keeping track of what
I've got installed, for recreating a development environment in general, and
for keeping things up to date.&lt;/p&gt;
&lt;h3&gt;pyenv&lt;/h3&gt;
&lt;p&gt;With Homebrew installed the next step for me is to install &lt;code&gt;pyenv&lt;/code&gt;. Doing so
is as easy as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;pyenv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once installed, if it's not done it for you, you may need to make some
changes to your login profile. I'm a user of &lt;a href="https://fishshell.com"&gt;fish&lt;/a&gt;
so I have &lt;a href="https://github.com/davep/fish/blob/efc77fd20c4bd2f36eb628730787924b6a56fcfd/conf.d/python.fish#L21-L25"&gt;these lines in my
setup&lt;/a&gt;.
Simply put: it asks pyenv to set up my environment so my calls to Python go
via its setup.&lt;/p&gt;
&lt;p&gt;Plenty of help on how to set up &lt;code&gt;pyenv&lt;/code&gt; can be found &lt;a href="https://github.com/pyenv/pyenv#installation"&gt;in its
README&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once I've done this I tend to go on and install the Python versions I'm
likely to need. For me this tends to be the most recent "active" stable
versions (as of the time of writing, 3.7 through 3.10; although I need to
now start throwing 3.11 into the mix too).&lt;/p&gt;
&lt;p&gt;I use this command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pyenv&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to see the available versions. If I want to see what's available for a
specific version I'll pipe through grep:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pyenv&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--list&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;fgrep&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;  3.9&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is handy if I want to check what the very latest release of a specific
version of Python is.&lt;/p&gt;
&lt;h3&gt;The "Global" Python&lt;/h3&gt;
&lt;p&gt;When I'm done with the above I then tend to use &lt;code&gt;pyenv&lt;/code&gt; to set my "global"
Python. This is the version I want to get when I run &lt;code&gt;python&lt;/code&gt; and I'm not
inside a virtual environment. Doing that is as simple as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pyenv&lt;span class="w"&gt; &lt;/span&gt;global&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.10.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Of course, you'd swap the version for whatever works for you.&lt;/p&gt;
&lt;h3&gt;When Stuff Breaks&lt;/h3&gt;
&lt;p&gt;It seems more rare these days, but on occasion I've had it such that some
update somewhere still causes my environment to break. Now though I find
that all it takes is a quick:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pyenv&lt;span class="w"&gt; &lt;/span&gt;rehash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and everything is good again.&lt;/p&gt;
&lt;h2&gt;Setting Up A Repo&lt;/h2&gt;
&lt;p&gt;With all of the stuff above being mostly a one-off (or at least something I
do once when I set up a new machine -- which isn't often), the real "work"
here is when I set up a fresh repository when I start a new project. Really
it's no work at all. Again, as I've said before, I've tended to use &lt;code&gt;pipenv&lt;/code&gt;
for my own work, and still do for personal stuff (but do want to change
that), mileage may vary here depending on tool.&lt;/p&gt;
&lt;p&gt;When I start a new project I think about which Python version I want to be
working with, I ensure I have the latest version of it installed with
&lt;code&gt;pyenv&lt;/code&gt;, and then ask &lt;code&gt;pipenv&lt;/code&gt; to create a new virtual environment with
that:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pipenv&lt;span class="w"&gt; &lt;/span&gt;--python&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.10.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When you do this, you should see &lt;code&gt;pipenv&lt;/code&gt; pulling the version of Python from
the &lt;code&gt;pyenv&lt;/code&gt; directories:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pipenv&lt;span class="w"&gt; &lt;/span&gt;--python&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.10.7
Creating&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;virtualenv&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;project...
Pipfile:&lt;span class="w"&gt; &lt;/span&gt;/Users/davep/temp/cool-project/Pipfile
Using&lt;span class="w"&gt; &lt;/span&gt;/Users/davep/.pyenv/versions/3.10.7/bin/python3&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.10.7&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;virtualenv...
⠙&lt;span class="w"&gt; &lt;/span&gt;Creating&lt;span class="w"&gt; &lt;/span&gt;virtual&lt;span class="w"&gt; &lt;/span&gt;environment...created&lt;span class="w"&gt; &lt;/span&gt;virtual&lt;span class="w"&gt; &lt;/span&gt;environment&lt;span class="w"&gt; &lt;/span&gt;CPython3.10.7.final.0-64&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;795ms
&lt;span class="w"&gt;  &lt;/span&gt;creator&lt;span class="w"&gt; &lt;/span&gt;CPython3Posix&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/Users/davep/temp/cool-project/.venv,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;clear&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;False,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;no_vcs_ignore&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;False,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;global&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;False&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;seeder&lt;span class="w"&gt; &lt;/span&gt;FromAppData&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;download&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;False,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;bundle,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;setuptools&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;bundle,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;wheel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;bundle,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;via&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;copy,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;app_data_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/Users/davep/Library/Application&lt;span class="w"&gt; &lt;/span&gt;Support/virtualenv&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;added&lt;span class="w"&gt; &lt;/span&gt;seed&lt;span class="w"&gt; &lt;/span&gt;packages:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;22&lt;/span&gt;.2.2,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;setuptools&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;65&lt;/span&gt;.3.0,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;wheel&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.37.1
&lt;span class="w"&gt;  &lt;/span&gt;activators&lt;span class="w"&gt; &lt;/span&gt;BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator
✔&lt;span class="w"&gt; &lt;/span&gt;Successfully&lt;span class="w"&gt; &lt;/span&gt;created&lt;span class="w"&gt; &lt;/span&gt;virtual&lt;span class="w"&gt; &lt;/span&gt;environment!
Virtualenv&lt;span class="w"&gt; &lt;/span&gt;location:&lt;span class="w"&gt; &lt;/span&gt;/Users/davep/temp/cool-project/.venv
Creating&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;Pipfile&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;project...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The key thing here is seeing that &lt;code&gt;pipenv&lt;/code&gt; is pulling Python from
&lt;code&gt;~/.pyenv/versions/&lt;/code&gt;. If it isn't there's a good chance you have a Python
earlier in your &lt;code&gt;PATH&lt;/code&gt; than the &lt;code&gt;pyenv&lt;/code&gt; one -- something you generally don't
want. It will work, but it's more likely to break at some point in the
future. That's the key thing I look for; if I see that I know things are
going to be okay.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Since I adopted these personal rules and approaches (and really, calling
them "rules" is kind of grand -- there's almost nothing to this) I've found
I've had near-zero issues with the stability of my Python virtual
environments (and what issues I have run into tend to be trivial and of my
own doing).&lt;/p&gt;
&lt;p&gt;As I said at the start: there are, of course, other approaches to this, but
this is mine and works well for me. Do feel free to comment with your own,
I'm always happy to learn about new ways!&lt;/p&gt;</content><category term="misc"></category><category term="Python"></category><category term="macOS"></category><category term="programming"></category></entry><entry><title>Build in public, even in private</title><link href="https://blog.davep.org/2022/10/06/build-in-public-even-in-private.html" rel="alternate"></link><published>2022-10-06T10:44:00+01:00</published><updated>2022-10-06T10:44:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2022-10-06:/2022/10/06/build-in-public-even-in-private.html</id><summary type="html">&lt;p&gt;As mentioned &lt;a href="/2022/10/05/on-to-something-new-redux.html"&gt;yesterday&lt;/a&gt;, I'm
about to start working at &lt;a href="https://www.textualize.io"&gt;Textualize&lt;/a&gt;, and
building Open-source software is important to the company.
&lt;a href="https://twitter.com/willmcgugan"&gt;Will&lt;/a&gt; -- the CEO -- is all about building
in public. If you follow him on Twitter you'll notice that his Python coding
adventure tweets actually outnumber is cooking tweets!&lt;/p&gt;
&lt;p&gt;As someone who …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As mentioned &lt;a href="/2022/10/05/on-to-something-new-redux.html"&gt;yesterday&lt;/a&gt;, I'm
about to start working at &lt;a href="https://www.textualize.io"&gt;Textualize&lt;/a&gt;, and
building Open-source software is important to the company.
&lt;a href="https://twitter.com/willmcgugan"&gt;Will&lt;/a&gt; -- the CEO -- is all about building
in public. If you follow him on Twitter you'll notice that his Python coding
adventure tweets actually outnumber is cooking tweets!&lt;/p&gt;
&lt;p&gt;As someone who has long been a supporter of and fan of &lt;a href="https://www.gnu.org/philosophy/free-sw.en.html"&gt;Free
Software&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Open-source_software"&gt;Open-source
software&lt;/a&gt;, and has made
some small contributions along the way, I've also always made a point of
&lt;a href="https://github.com/davep/"&gt;building my own tools in public&lt;/a&gt;. In most cases
they're things that are likely only helpful to me, but some are more
generally useful. The point being though: it's all there in case it's
helpfull to someone else.&lt;/p&gt;
&lt;p&gt;Which means that, as much as possible, when I'm writing code, I write it as
if it's going to be visible in public and someone else is going to be
reading it. I try and make the code tidy. I try and comment it well. I try
(but don't always manage for personal projects) to fully document it. The
important thing here being that someone coming to the code fresh should be
able to follow what's going on.&lt;/p&gt;
&lt;p&gt;Against that background, and having just gone through the process of handing
off almost 5 years of work to someone else as a left an employer, I got to
thinking: we should always "build in public", even if it's in private.&lt;/p&gt;
&lt;p&gt;When I started with my previous employer, and even to the day I left, I was
the only software developer there. I worked with a team who wrote code, but
being software developers wasn't what they did. Bioinformaticians and
machine learning scientists have other things to be doing. But, as I wrote
my code, I wrote every line assuming they, or some other developer down the
line, would be reading it. Pretty much every line was written for an
audience I couldn't see and didn't fully know. This, as mentioned above,
meant trying to keep the code clean, ensuring it was commented in helpful
ways, ensuring the documentation was helpful, and so on.&lt;/p&gt;
&lt;p&gt;But it wasn't just about the code. Any non-trivial system will have more to
it than code. We had an internal instance of GitLab and I tracked all of my
work on there. So, as I planned and worked on new features, or went on bug
hunts, I'd document the process in the issue tracker. As much as possible
I'd be really verbose about the process. Often I wouldn't just open an
issue, go work on it, and then mark it closed; as I worked through the issue
I'd add comment after comment under it, documenting my thinking, problems,
solutions, cite sources when looking something up, that sort of thing.&lt;/p&gt;
&lt;p&gt;The whole process was an act in having a conversation with current or future
team members if they ever needed to look; with future me (really, that
helped more than once -- we all have those "that the &lt;em&gt;hell&lt;/em&gt; was I thinking?"
moments); with any developer(s) who took over from me in the future.&lt;/p&gt;
&lt;p&gt;I did all this as if I was broadcasting it in public &lt;a href="https://twitter.com/davepdotorg"&gt;on
Twitter&lt;/a&gt; or &lt;a href="https://github.com/davep"&gt;on
GitHub&lt;/a&gt;, etc. It was in private, of course, but I
approached it as if it was in public.&lt;/p&gt;
&lt;p&gt;There were always three main reasons for this, I felt:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Accountability. At any moment someone who I worked with could review what
   I was doing and why I was doing it; it was an invitation to anyone
   curious enough to talk with me about what I was building and how I was
   building it.&lt;/li&gt;
&lt;li&gt;Continuity of support for unplanned reasons. Life happens, sometimes you
   may, unplanned, never be available at work again. I never wanted to leave
   my employer in a position where picking up from such an event was a
   nightmare.&lt;/li&gt;
&lt;li&gt;Continuity of support for planned reasons. It was possible, and it became
   inevitable, that I'd move on to something else. If that was to happen I
   wanted to be sure that whoever picked up after me would be able to do so
   without too much effort.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In the end item 3 seemed to really pay off. When it came time for me to hand
over my work to someone else, as I left, the process was really smooth and
trouble-free. I was able to point the developer at all the documentation and
source code, at all the issues, and invite them to read through it all and
then come back to me with questions. In terms of time actually spent talking
about the main system I was handing over I'd say that 4 years of work was
handed over with just a few hours of actual talking about it.&lt;/p&gt;
&lt;p&gt;It remains to be seen if it really paid off, of course. If they get really
stuck they do have an open invitation to ping me a question or two; I care
enough about what I designed and built that I want it to carry on being
useful for some time to come. But... I like to think that all of that
building in public, in private, will ensure that this is an invitation that
never needs to be called on. I like to think that, if something isn't clear,
they'll be able to check the code, the documentation and the issue history
and get to where they need to go.&lt;/p&gt;</content><category term="misc"></category><category term="programming"></category></entry><entry><title>On to something new (redux)</title><link href="https://blog.davep.org/2022/10/05/on-to-something-new-redux.html" rel="alternate"></link><published>2022-10-05T09:24:00+01:00</published><updated>2022-10-05T09:24:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2022-10-05:/2022/10/05/on-to-something-new-redux.html</id><summary type="html">&lt;p&gt;Just over five years ago I got a message from my then employer to say I was
going to be made redundant after 21 years working for them. After the 3
month notice period the final day came. Meanwhile, I found something new
that &lt;a href="/2017/12/12/on_to_something_new.html"&gt;looked terrifying but
interesting&lt;/a&gt;. In the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Just over five years ago I got a message from my then employer to say I was
going to be made redundant after 21 years working for them. After the 3
month notice period the final day came. Meanwhile, I found something new
that &lt;a href="/2017/12/12/on_to_something_new.html"&gt;looked terrifying but
interesting&lt;/a&gt;. In the end it was less
terrifying and way more interesting than I imagined it would be. It was fun
too.&lt;/p&gt;
&lt;p&gt;But... (there's always a but isn't there?)&lt;/p&gt;
&lt;p&gt;In the four and change years I've been there the company got bought out, and
then the result of that got bought up. As I've mentioned before I'm
generally not a "big company" kind of person; in all my years I've found
that I'm happier working in a smaller place. After a couple of buyouts my
employer had gone from being 10s of people in size to 100s of people in size
(and technically 10s of 1,000s of people in size depending on how you look
at it).&lt;/p&gt;
&lt;p&gt;This change in ownership and size meant the culture became... well, let's
just say not as friendly as you tend to enjoy when it's a smaller group of
folk. On top of that I was starting to notice that my efforts were making
less of an impact as things got bigger, and I started to feel like my
contributions weren't really relevant any more. There were some problematic
things happening too: undermining of efforts, removal of responsibilities
without consultation or communication, that sort of thing. Plus worse.
There's little point in going into the detail, but it's fair to say that
work wasn't as fun as it used to be.&lt;/p&gt;
&lt;p&gt;That felt like a good time to start to look around. If work makes you feel
unhappy and you can look around... look around.&lt;/p&gt;
&lt;p&gt;Thing is, I wasn't sure what to look for. I was in the comfortable position
of, unlike last time, not &lt;em&gt;needing&lt;/em&gt; to find something, so I could take my
time at least. Over the course of the last year I've spoken to many
different companies and organisations, some big (yes, I know, I said I don't
like big places -- sometimes what's on offer deserves a fair hearing), some
small, but none of them quite said &lt;em&gt;"this feels like me"&lt;/em&gt;. In some cases the
whole thing didn't have the right vibe, in others the industry either didn't
interest me, or felt uncomfortable given my personal values. In one
particular case a place looked interesting until I checked the CTO's socials
and OMG NO NO NO AVOID AVOID (that was a fun one).&lt;/p&gt;
&lt;p&gt;Then I saw &lt;a href="https://twitter.com/willmcgugan"&gt;Will McGugan&lt;/a&gt; saying he was
hiring to expand &lt;a href="https://www.textualize.io/"&gt;Textualize&lt;/a&gt;. This caught my
interest right away for two good reasons.&lt;/p&gt;
&lt;p&gt;I can't remember how long I've been following Will on Twitter; I likely
stumbled on him as I got back into Python in 2018 and I also remember noting
that he was a Python hacker just up the road from me. We'd vaguely chatted
on Twitter, briefly, in that "Twitter acquaintance" way we all often do (I
remember &lt;a href="https://twitter.com/davepdotorg/status/1438887277623750661"&gt;one brief exchange about fungus on The
Meadows&lt;/a&gt;), and
he'd seemed like a good sort. A small company run by a "good sort" kinda
person felt like a damn good reason.&lt;/p&gt;
&lt;p&gt;The second reason was Textual itself. I'd been watching Will develop it, in
open, with great interest. I had (and still have) a plan to write a brand
new CHUI-based (okay fine TUI-based as the kids like to say these days!)
Norton Guide reader, all in Python, and Textual looked like the perfect
framework to do the UI in. The chance to be involved with it sounded
awesome.&lt;/p&gt;
&lt;p&gt;Now, I said two reasons, but there's also a third I guess: Will's pitch for
applying to Textualize felt so damn accessible! I'm on the older end of the
age range of this industry; for much of my working life as a developer I've
worked in isolation from other developers; while I first touched Python in
the 90s, I've only been using it in anger since 2018 and still feel like
I've got a lot to learn. Despite all these things, and more, saying &lt;em&gt;"aye
Dave this is beyond you"&lt;/em&gt; I felt comfortable dropping Will a line.&lt;/p&gt;
&lt;p&gt;Which resulted in a chat.&lt;/p&gt;
&lt;p&gt;Which resulted in some code tinkering and chatting.&lt;/p&gt;
&lt;p&gt;Which resulted in...&lt;/p&gt;
&lt;p&gt;Something new.&lt;/p&gt;
&lt;p&gt;So, yeah, as of 2022-10-10 I'm on yet another new adventure. Time for me to
&lt;em&gt;really&lt;/em&gt; work on my Python coding as I work with Will and the rest of the
team as part of Textualize.&lt;/p&gt;
&lt;p&gt;Or, as I put it on Twitter a few days ago: &lt;a href="https://twitter.com/davepdotorg/status/1574121611413921792"&gt;I'm going to be a Python
impostor syndrome
speedrunner&lt;/a&gt;!&lt;/p&gt;</content><category term="misc"></category><category term="Programming"></category><category term="work"></category><category term="life"></category><category term="Python"></category></entry><entry><title>I must be getting old</title><link href="https://blog.davep.org/2022/08/23/i-must-be-getting-old.html" rel="alternate"></link><published>2022-08-23T21:31:00+01:00</published><updated>2022-08-23T21:31:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2022-08-23:/2022/08/23/i-must-be-getting-old.html</id><summary type="html">&lt;p&gt;A little earlier this evening I got &lt;a href="https://github.com/davep/boxquote.el/issues/7"&gt;a new
issue&lt;/a&gt; raised against
&lt;a href="(https://github.com/davep/boxquote.el/issues/7)"&gt;&lt;code&gt;boxquote.el&lt;/code&gt;&lt;/a&gt;. Apparently
Emacs 29 (I'm running 28.1 as of the time of writing) is moaning about the
likes of:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;point&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;some-location-or-other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;buffer-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There's a whole background to why I've tended to code like …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A little earlier this evening I got &lt;a href="https://github.com/davep/boxquote.el/issues/7"&gt;a new
issue&lt;/a&gt; raised against
&lt;a href="(https://github.com/davep/boxquote.el/issues/7)"&gt;&lt;code&gt;boxquote.el&lt;/code&gt;&lt;/a&gt;. Apparently
Emacs 29 (I'm running 28.1 as of the time of writing) is moaning about the
likes of:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;point&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;some-location-or-other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;buffer-string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There's a whole background to why I've tended to code like that, that stems
from enjoying Common Lisp, my days reading (and sometimes posting to)
&lt;code&gt;comp.lang.lisp&lt;/code&gt;, and I &lt;em&gt;think&lt;/em&gt; some of the stuff &lt;a href="https://en.wikipedia.org/wiki/Erik_Naggum"&gt;Erik
Naggum&lt;/a&gt; wrote back in the day. I
won't get into it all now; I'm not sure I can even remember a lot of how I
got there given how far back it was.&lt;/p&gt;
&lt;p&gt;But...&lt;/p&gt;
&lt;p&gt;Wanting to quickly get to the bottom of why the above was suddenly an issue,
I dived into the &lt;code&gt;NEWS&lt;/code&gt; file and &lt;a href="https://github.com/emacs-mirror/emacs/blob/67a15ce1564ce35ece24a19f00e03a36e0575746/etc/NEWS#L2585"&gt;found the
following&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Many&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;seldom&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;used&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;generalized&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;variables&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;have&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;been&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;made&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;obsolete&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Emacs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;has&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rather&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;obscure&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;generalized&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;variables&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;that&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;allowed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;things&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;These&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;never&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;caught&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;have&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;been&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;made&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;obsolete&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;above&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;same&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;saying&lt;/span&gt;

&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;narrow&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;point&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;following&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;generalized&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;variables&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;have&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;been&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;made&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;obsolete&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;buffer-file-name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;buffer-local-value&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;buffer-modified-p&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;buffer-name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;buffer-string&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;buffer-substring&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current-buffer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;current-column&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current-global-map&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current-input-mode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;current-local-map&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;current-window-configuration&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;default-file-modes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;documentation-property&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;frame-height&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;frame-visible-p&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;global-key-binding&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;local-key-binding&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mark&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;mark-marker&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;marker-position&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mouse-position&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;point&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;point-marker&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;point-max&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;point-min&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;read-mouse-position&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;screen-height&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;screen-width&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;selected-frame&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;selected-screen&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;selected-window&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;standard-case-table&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;syntax-table&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;visited-file-modtime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;window-height&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;window-width&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;x-get-secondary-selection&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As suggested above... this is my thing, this is how I coded some Elisp
stuff. Look through much of my &lt;a href="https://elisp.dev/"&gt;Emacs Lisp code&lt;/a&gt; and
you'll find me &lt;code&gt;setf&lt;/code&gt;ing stuff all over the place.&lt;/p&gt;
&lt;p&gt;Apparently my style is "obscure". Actually, I'm kinda okay with that if I'm
honest.&lt;/p&gt;
&lt;p&gt;This is going to be a bit of a pain in the arse; I'm going to have to go
through a whole bunch of code and make it "less obscure", at some point.&lt;/p&gt;
&lt;p&gt;But...&lt;/p&gt;
&lt;p&gt;This isn't the part that had me thinking I must be getting old. Oh no. The
&lt;code&gt;NEWS&lt;/code&gt; file had another little surprise in store:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;quickurl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;obsolete&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;Use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;abbrev&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;skeleton&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;tempo&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;instead&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That.... that's me that is. Well, it's one of the me things. If you run
&lt;code&gt;about-emacs&lt;/code&gt;, dive into &lt;code&gt;Authors&lt;/code&gt;, and search for my name, in any copy of
GNU Emacs from the last decade or two, you'll find this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Dave Pearson: wrote 5x5.el quickurl.el
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://github.com/davep/quickurl.el/blob/master/quickurl.el"&gt;&lt;code&gt;quickurl.el&lt;/code&gt;&lt;/a&gt;
was a package I wrote back in the late 1990s, back when I was a very heavy
user of &lt;a href="https://en.wikipedia.org/wiki/Usenet"&gt;Usenet&lt;/a&gt;, and often found
myself posting the same URLs in posts again and again; especially in
&lt;code&gt;comp.lang.clipper&lt;/code&gt;. As a fairly quick hack I wrote the code so that I could
very quickly insert often-used URLs.&lt;/p&gt;
&lt;p&gt;Some time later, I got an email from the
&lt;a href="https://en.wikipedia.org/wiki/Free_Software_Foundation"&gt;FSF&lt;/a&gt; (I actually
think it was from &lt;a href="https://en.wikipedia.org/wiki/Richard_Stallman"&gt;RMS&lt;/a&gt; --
but that's an &lt;a href="https://en.wikipedia.org/wiki/Mbox"&gt;&lt;code&gt;mbox&lt;/code&gt;&lt;/a&gt; I've long ago
lost -- or a backup of it might be in storage back in England, on a DVD),
asking if I wanted to contribute it to Emacs proper. This seemed like an odd
thing to add to Emacs but, sure, why the hell not?&lt;/p&gt;
&lt;p&gt;And so I had my second contribution to a body of code I used a lot (the
first being &lt;a href="https://github.com/davep/5x5.el"&gt;&lt;code&gt;5x5.el&lt;/code&gt;&lt;/a&gt; -- which itself was
my first ever attempt at writing some non-trivial Elisp code).&lt;/p&gt;
&lt;p&gt;So... yeah... here we are. I'm now old enough to have written some Emacs
Lisp code, had it required by the FSF for inclusion in Emacs, had it live in
there for something like two decades, and then &lt;em&gt;become obselete&lt;/em&gt;!&lt;/p&gt;</content><category term="misc"></category><category term="Emacs"></category><category term="Lisp"></category><category term="Emacs Lisp"></category></entry><entry><title>Failed successfully</title><link href="https://blog.davep.org/2022/06/03/failed-successfully.html" rel="alternate"></link><published>2022-06-03T09:05:05+01:00</published><updated>2022-06-03T09:05:05+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2022-06-03:/2022/06/03/failed-successfully.html</id><summary type="html">&lt;p&gt;A couple of days back (for vague values of "couple", of course), first of
the month, having my morning coffee, I go and open my bank's mobile app to
move a bit of money about and pay a couple of things. This happens every
month. This is so routine I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A couple of days back (for vague values of "couple", of course), first of
the month, having my morning coffee, I go and open my bank's mobile app to
move a bit of money about and pay a couple of things. This happens every
month. This is so routine I do it almost on autopilot.&lt;/p&gt;
&lt;p&gt;Yeah, yeah, I know, it's banking, pay attention! But still... morning,
coffee, routine.&lt;/p&gt;
&lt;p&gt;I get to the final movement/payment and then notice something:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/attachments/2022/06/03/Unexpected-error.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;That.... that text! WTF? So then I look back at my payment history and
notice that all but one payment &lt;em&gt;hadn't&lt;/em&gt; gone through! O_o&lt;/p&gt;
&lt;p&gt;This alone is fine. Stuff happens. Things fail. I'm okay with that. It's an
inconvenience for sure but doubtless whatever the problem is will be fixed
and I can make the payments again later. But...&lt;/p&gt;
&lt;p&gt;That result. There's a tick. A &lt;strong&gt;GREEN&lt;/strong&gt; tick. And a "Thank you". It's
natural to see that image, know that it's always meant "shit worked" and
just carry on.&lt;/p&gt;
&lt;p&gt;In one of my systems at work there's a tool I wrote for checking a
repository of code to make sure it conforms to a certain standard. When folk
use it they get a night big, bold and bright green thumb-up above the text
that says everything is cool. If there's a problem, any sort of problem at
all, then the display is red and there's no jolly icon and it's obvious that
things are different and you likely want to pay attention to the explanation
of what isn't right.&lt;/p&gt;
&lt;p&gt;This isn't news, of course. This isn't some revelation about UI design or
anything. We know this stuff. I think what boggles my mind a little bit
about this is that something as important -- and hopefully by this point as
mature -- as a mobile banking app should get something as obvious as this
right.&lt;/p&gt;
&lt;p&gt;But here we are, with a nice friendly green icon showing a tick and a
friendly big "Thank you" followed by smaller text going "aye shit didn't
work pal".&lt;/p&gt;</content><category term="misc"></category><category term="UI"></category><category term="UX"></category></entry><entry><title>My VR recording setup</title><link href="https://blog.davep.org/2022/05/28/my-vr-recording-setup.html" rel="alternate"></link><published>2022-05-28T17:01:00+01:00</published><updated>2022-05-28T17:01:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2022-05-28:/2022/05/28/my-vr-recording-setup.html</id><summary type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;For well over a year now I've been recording my VR gameplay &lt;a href="https://www.youtube.com/user/daveporg"&gt;and uploading
it to YouTube&lt;/a&gt;. Less as a "content
creation" thing, more as a nice record of games I've played and, on
occasion, as a little bit of help to others; in the past I've watched other …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;For well over a year now I've been recording my VR gameplay &lt;a href="https://www.youtube.com/user/daveporg"&gt;and uploading
it to YouTube&lt;/a&gt;. Less as a "content
creation" thing, more as a nice record of games I've played and, on
occasion, as a little bit of help to others; in the past I've watched other
folk play games I like to get ideas for approaches to them, and I've also
received the odd comment now and again where my play-through has helped
someone else.&lt;/p&gt;
&lt;p&gt;A question I've had a couple of times is what I use to do the recording, so
I thought I'd make an effort to write it all down here.&lt;/p&gt;
&lt;p&gt;First up, a couple of things to note: I started recording PCVR around April
2021 and the initial setup was a bit trial-and-error and Google searching
and blog reading. As such, not all of the details of &lt;em&gt;how&lt;/em&gt; to set up will be
here, and I may even miss off some stuff I changed and is worthy of note; at
the same time I might mention stuff that's just an obvious default.&lt;/p&gt;
&lt;p&gt;Consider this blog post as being a written version of one of my videos: it's
for my own fun and benefit and might also help me in the future should I
want to apply some of this again, and if it helps someone else that's a
lovely bonus.&lt;/p&gt;
&lt;h1&gt;The Hardware&lt;/h1&gt;
&lt;p&gt;While it's not exactly the point of this post, I guess it's worth mentioning
the hardware I use as of the time of writing. Given this is about PCVR, I of
course have a PC which is running Windows. The machine information within
Windows says it's a:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Intel(R) Core(TM) i5-10400F CPU @ 2.90GHz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Warning: I don't do hardware. I buy it from time to time, but hardware
leaves me bored. It runs VR on a PC. This is fine.&lt;/p&gt;
&lt;p&gt;The machine itself has 16 GB of memory, is running Windows 10 Home and has a
GeForce RTX 3060 for handling the graphics.&lt;/p&gt;
&lt;p&gt;The headset I'm using is a~~n Oculus~~ Meta Quest 2. I've had this
since around November 2020, playing Quest-native games for the first few
months, until I cracked and got the PC mentioned here to get into PCVR.&lt;/p&gt;
&lt;p&gt;The headset is connected to the PC with &lt;a href="https://www.amazon.co.uk/gp/product/B08MJDNV4F/"&gt;a USB
cable&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, for recording voice, I use a &lt;a href="https://www.amazon.co.uk/gp/product/B08T1S7NRP/?th=1"&gt;USB lapel microphone with a really
long cable&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It should be said that, yes, sometimes, I do get a little caught up in
things with two cables hanging off me. If I could give one tip here it would
be that running the microphone cable up your trousers and shirt makes life a
ton easier. As a bonus I have the USB cable for the headset running around
the headset's strap and connected to it at the back and then running down my
back.&lt;/p&gt;
&lt;h1&gt;OBS Studio&lt;/h1&gt;
&lt;p&gt;The core software used is &lt;a href="https://obsproject.com/"&gt;OBS Studio&lt;/a&gt;. This has
got to be one of the best bits of free software I've ever used, in terms of
interface and what it delivers.&lt;/p&gt;
&lt;p&gt;Years back my son used to record and upload gameplay to YouTube and I can
remember him having no end of issues using different recording software;
some working with one game but not another, some other working with a
different set of games, video and sync issues, etc... Lots of pain quite
often. With OBS Studio the only issues I've ever had have been my own
mistakes.&lt;/p&gt;
&lt;p&gt;At this point I have to confess that when I set it up I didn't make a point
of keeping a recording of what I changed -- I was experimenting and not
expecting much to come of it. So what I note here are the things that feel
like they're important, and only the things that relate to recording PCVR,
not streaming it (that might end up being a different blog post).&lt;/p&gt;
&lt;p&gt;That said, here are things I seem to remember as being key:&lt;/p&gt;
&lt;h2&gt;Output Settings&lt;/h2&gt;
&lt;p&gt;The items in the output pane in settings that I have and which might be
important are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Output Mode:&lt;/code&gt; Simple&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Recording Quality&lt;/code&gt;: High Quality, Medium File Size&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Recording format&lt;/code&gt;: mkv&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Encoder&lt;/code&gt;: Hardware (NVENC)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I do remember the recording format being set to &lt;code&gt;mkv&lt;/code&gt; as something that's
really important. I think it's &lt;code&gt;mp4&lt;/code&gt; by default, or was when I first
installed, and if your machine crashes or OBS were to crash or something,
you could end up with footage that can't be used. Using &lt;code&gt;mkv&lt;/code&gt; means you can
still use the footage (as I understand it). It does mean that once you're
finished you have to use the "remux" option under the &lt;code&gt;File&lt;/code&gt; menu, but
that's a small price to pay.&lt;/p&gt;
&lt;p&gt;I can say that at least once I've had to hard-reboot my machine when a game
and SteamVR and the like all got upset. I likely saved 45 minutes or more of
footage thanks to &lt;code&gt;mkv&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;Video Settings&lt;/h1&gt;
&lt;p&gt;Nothing really special in here, I simply have both the base and output
resolutions set to the desktop resolution. This &lt;em&gt;might&lt;/em&gt; be something for me
to tinker with in the future, but so far I've not run into any problems.&lt;/p&gt;
&lt;h1&gt;VR Capture&lt;/h1&gt;
&lt;p&gt;Now, of course, all of the above is great and fine and all but there's the
issue of how you capture the VR gameplay. I approach this a couple of
different ways. The first is I use the &lt;a href="https://github.com/baffler/OBS-OpenVR-Input-Plugin"&gt;OpenVR Capture plugin for
OBS&lt;/a&gt;. This makes
capturing footage from SteamVR really easy. The only downside I found is
that out of the box there's no default crop setting for using a Quest 2 (or
I guess the Rift, as the Quest 2 sort of appears as a Rift to SteamVR
games). As such I remember playing trial and error with that until I was
happy I was getting as much footage as possible without having black bars
and the like.&lt;/p&gt;
&lt;p&gt;Something I also like about the OpenVR Capture plugin is you can say if you
want to capture the left or right eye. Normally not that big a deal for some
things, but if you're playing a shooter and want people to see exactly what
your dominant eye is seeing, that matters.&lt;/p&gt;
&lt;p&gt;Sadly, of course, not every game can be captured with that plugin. So far
I've found that any game that can't be has its own mirror window on the
desktop. In that case I use a &lt;code&gt;Game Capture&lt;/code&gt; source and set it to capture
that specific window. I could of course just get it to capture the focused
window or something like that but I prefer to know that it's only grabbing
what I want it to grab.&lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;That's pretty much it I think. There's not a lot to it, although on occasion
a lot can go wrong. Mostly it's a wonder any of it works. I mean, think
about it, I have a computer with two screens strapped to my face, with two
controllers in my hands talking to it; it's then connected via the Oculus
Link to the Oculus Home; from which I start up SteamVR; and from the SteamVR
home I start up the game and then "live" inside the game. It's a virtual
world inside a virtual world inside a virtual world inside a real world;
with lots of software along the way, all talking at once.&lt;/p&gt;
&lt;p&gt;That is then being recorded.&lt;/p&gt;
&lt;p&gt;Sometimes, on occasion, it takes a reboot or five to make it all work
together.&lt;/p&gt;
&lt;p&gt;Really, it's a wonder it ever works. ;-)&lt;/p&gt;</content><category term="misc"></category><category term="VR"></category><category term="YouTube"></category><category term="PCVR"></category></entry><entry><title>I'm back!</title><link href="https://blog.davep.org/2022/05/20/im-back.html" rel="alternate"></link><published>2022-05-20T12:44:00+01:00</published><updated>2022-05-20T12:44:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2022-05-20:/2022/05/20/im-back.html</id><summary type="html">&lt;p&gt;I'm back! Almost. More or less. In more ways than one. First off, as often
happens with blogs (we've all been there right?), I've been away from
blogging for a while. I've still been online, still been waffling away &lt;a href="https://twitter.com/davepdotorg"&gt;on
twitter&lt;/a&gt;, and have also stumbled into
&lt;a href="https://fosstodon.org/@davep"&gt;fosstodon as well&lt;/a&gt;. Doubtless …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm back! Almost. More or less. In more ways than one. First off, as often
happens with blogs (we've all been there right?), I've been away from
blogging for a while. I've still been online, still been waffling away &lt;a href="https://twitter.com/davepdotorg"&gt;on
twitter&lt;/a&gt;, and have also stumbled into
&lt;a href="https://fosstodon.org/@davep"&gt;fosstodon as well&lt;/a&gt;. Doubtless plenty of other
things.&lt;/p&gt;
&lt;p&gt;A big distraction for me, and one that is ongoing, is &lt;a href="https://www.youtube.com/user/daveporg"&gt;mucking about on
YouTube&lt;/a&gt;. Since the last time I wrote
anything on the blog I got myself a VR setup, and then a PCVR setup, and
then finally fibre came to the village and I could stream, and... well, you
can see how that would go.&lt;/p&gt;
&lt;p&gt;So, in short, that's where I've been and that's what's been keeping me busy.
Now that I'm paying some attention to blogging again (hopefully!) I imagine
some of that will end up on here -- I'd quite like to write about VR and
gaming amongst other things.&lt;/p&gt;
&lt;p&gt;Now, I said I'd been away in more ways than one. Another way is explained by
&lt;a href="/2019/10/18/time-to-move-on.html"&gt;this post from back in 2019&lt;/a&gt;, where I
said I was going to head &lt;a href="https://blog.davep.dev/"&gt;over to Hashnode&lt;/a&gt; and
carry on blogging there, obviously with an emphasis on development and just
development.&lt;/p&gt;
&lt;p&gt;That kept me busy for a while and worked out well, mostly. But... well, see
above in part; I sort of ran out of steam when it came to purely-development
topics. But I still wanted to write, a bit, and wanted to write about more
than just development.&lt;/p&gt;
&lt;p&gt;Also, something else was bothering me about being over on Hashnode. In the
past year, in terms of what they promote themselves, especially blogs and
posts they promote on their Twitter feed, they seem to have started to lean
really hard into &lt;a href="https://www.youtube.com/watch?v=YQ_xWvX1n9g"&gt;crypto and web3 and
NFTs&lt;/a&gt; and all that stuff. This
left me feeling like that was all a bit icky and it was time to put some
distance between that platform and myself.&lt;/p&gt;
&lt;p&gt;So over the past couple of weeks, low-level and as a background task, I've
been back-porting posts from over there back into this blog. Starting with
this post all new blog content, be it about software development or anything
else, will be on here. If I'm really sensible and don't get distracted by
new shiny... this should be how it remains now.&lt;/p&gt;
&lt;p&gt;Expect some changes over the next few weeks. While I'm aiming to stick with
the core tech (Github pages, Markdown and Jekyll, Emacs to edit, etc), I'd
like to tinker with the look and layout of the blog. The content will remain
the same though.&lt;/p&gt;
&lt;p&gt;So, yeah, anyway, if you're reading this... hey, it's good to be back. :-)&lt;/p&gt;</content><category term="misc"></category><category term="news"></category><category term="blogging"></category></entry><entry><title>Reading 2bit files (for fun) - the sequence</title><link href="https://blog.davep.org/2020/09/26/reading-2bit-files-for-fun-the-sequence.html" rel="alternate"></link><published>2020-09-26T15:57:00+01:00</published><updated>2020-09-26T15:57:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2020-09-26:/2020/09/26/reading-2bit-files-for-fun-the-sequence.html</id><summary type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This post will cover the most important content of a 2bit file: the actual
sequence data itself. In &lt;a href="/2020/08/30/reading-2bit-files-for-fun.html"&gt;the first
post&lt;/a&gt; I wrote about the format
of the file's header, and in &lt;a href="/2020/09/05/reading-2bit-files-for-fun-the-index.html"&gt;the second
post&lt;/a&gt; I wrote about
the content of the file's index.&lt;/p&gt;
&lt;p&gt;At this point that's enough …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This post will cover the most important content of a 2bit file: the actual
sequence data itself. In &lt;a href="/2020/08/30/reading-2bit-files-for-fun.html"&gt;the first
post&lt;/a&gt; I wrote about the format
of the file's header, and in &lt;a href="/2020/09/05/reading-2bit-files-for-fun-the-index.html"&gt;the second
post&lt;/a&gt; I wrote about
the content of the file's index.&lt;/p&gt;
&lt;p&gt;At this point that's enough information to know what's in the file and where
to find it. In other words we know the list of sequences that live in the
file, and we know where each one is positioned within the file. So, assuming
we have our index in memory (ideally some sort of key/value store of
sequences names and their offsets in the file), given the name of a sequence
we can know where to go in the file to load up the data.&lt;/p&gt;
&lt;p&gt;So the next obvious question is, what will we find when we get there? Actual
sequence data is stored like this:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Content&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Size&lt;/th&gt;
&lt;th&gt;Comments&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;DNA size&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;Count of bases in the sequence&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N block count&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;Count of N blocks in the sequence&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N block starts&lt;/td&gt;
&lt;td&gt;Integer Array&lt;/td&gt;
&lt;td&gt;4*count bytes&lt;/td&gt;
&lt;td&gt;Positions are zero-based&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N block sizes&lt;/td&gt;
&lt;td&gt;Integer Array&lt;/td&gt;
&lt;td&gt;4*count bytes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mask block count&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;Count of mask blocks in the sequence&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mask block starts&lt;/td&gt;
&lt;td&gt;Integer Array&lt;/td&gt;
&lt;td&gt;4*count bytes&lt;/td&gt;
&lt;td&gt;Positions are zero-based&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mask block sizes&lt;/td&gt;
&lt;td&gt;Integer Array&lt;/td&gt;
&lt;td&gt;4*count bytes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Reserved&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;Should always be 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DNA data&lt;/td&gt;
&lt;td&gt;Byte Array&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;See below&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Breaking the above down:&lt;/p&gt;
&lt;h1&gt;N blocks&lt;/h1&gt;
&lt;p&gt;As mentioned in passing in the first post: technically it's necessary to
encode 5 different characters for the bases in the sequences. As well as the
usual T, C, A and G, there also needs to be an N, which means the base is
unknown. Now, of course, you can't pack 5 states into two bits, so the 2bit
file format solves this by having an array of block positions and sizes
where any data in the actual DNA itself should be ignored and an &lt;code&gt;N&lt;/code&gt; used in
its place.&lt;/p&gt;
&lt;h1&gt;Mask blocks&lt;/h1&gt;
&lt;p&gt;This is where my ignorance of bioinformatics shows, and where it's made very
obvious that I'm a software developer who likes to muck about with data and
data structures, but who doesn't always understand why they're used. I'm
actually not sure what purpose mask blocks serve in a 2bit file, but they
&lt;em&gt;do&lt;/em&gt; affect the output. If a base falls within a mask block the value that
is output should be a lower-case letter, rather then upper-case.&lt;/p&gt;
&lt;h1&gt;The DNA data&lt;/h1&gt;
&lt;p&gt;So this is the fun bit, where the real data is stored. This should be viewed
as a sequence of bytes, each of which contains 4 bases (except for the last
byte, of course, which might contain 1, 2 or 3 depending on the size of the
sequence).&lt;/p&gt;
&lt;p&gt;Each byte should be viewed as an array of 2 bit values, with the values
mapping like this:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Binary&lt;/th&gt;
&lt;th&gt;Decimal&lt;/th&gt;
&lt;th&gt;Base&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;00&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;01&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;G&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;So, given a byte whose value is &lt;code&gt;27&lt;/code&gt;, you're looking at the sequence &lt;code&gt;TCAG&lt;/code&gt;.
This is because &lt;code&gt;27&lt;/code&gt; in binary is &lt;code&gt;00011011&lt;/code&gt;, which breaks down as:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;00&lt;/th&gt;
&lt;th&gt;01&lt;/th&gt;
&lt;th&gt;10&lt;/th&gt;
&lt;th&gt;11&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;G&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;How you pull that data out of the byte will depend on the language and what
it makes available for bit-twiddling; those that don't have some form of
&lt;a href="https://en.wikipedia.org/wiki/Bit_field"&gt;bit field&lt;/a&gt; will probably provide
the ability to bit shift and do a bitwise &lt;code&gt;and&lt;/code&gt; (it's also likely that doing
bitwise operations is better than using bit fields anyway). In the version I
wrote in Emacs Lisp, it's simply a case of shifting the two bits I am
interested in over to the right of the byte and then performing a bitwise
and to get just its value. So, given an array called &lt;code&gt;2bit-bases&lt;/code&gt; whose
content is this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;defconst&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;2bit-bases&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;G&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Vector of the bases.&lt;/span&gt;

&lt;span class="s"&gt;Note that the positions of each base in the vector map to the 2bit decoding&lt;/span&gt;
&lt;span class="s"&gt;for them.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I use this bit of code to pull out the individual bases:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;aref&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;2bit-bases&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;logand&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;ash&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;byte&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mb"&gt;#b11&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Given code to unpack an individual byte, extracting all of the bases in a
sequence then becomes the act of having two loops, the outer loop being over
each byte in the file, the inner loop being over the positions within each
individual byte.&lt;/p&gt;
&lt;p&gt;In pseudo-code, assuming that &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; hold the base locations
we're interested in and &lt;code&gt;dna_pos&lt;/code&gt; is the location in the file where the DNA
starts, the main loop for unpacking the data looks something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bases&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;bases&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt; &amp;quot;T&amp;quot;, &amp;quot;C&amp;quot;, &amp;quot;A&amp;quot;, &amp;quot;G&amp;quot; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Calculate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;last&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pull&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;start_byte&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dna_pos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;end_byte&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dna_pos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Work&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;starting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;start_byte&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dna_pos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Load&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;that&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;contain&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DNA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;read_n_bytes_from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;start_byte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;end_byte&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;start_byte&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;all&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;blocks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;that&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;intersect&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;sequence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;n_blocks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;relevant_n_blocks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;all&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;blocks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;that&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;interest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;sequence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;mask_blocks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;relevant_mask_blocks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Start&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;an&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sequence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;sequence&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;over&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;every&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Stepping&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;down&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;each&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;shift&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;downto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;we&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;re interested in this location.&lt;/span&gt;
&lt;span class="s1"&gt;    if ( position &amp;gt;= start ) and ( position &amp;lt; end )&lt;/span&gt;

&lt;span class="s1"&gt;      # If this position is in an N block, just collect an N.&lt;/span&gt;
&lt;span class="s1"&gt;      if within( position, n_blocks )&lt;/span&gt;
&lt;span class="s1"&gt;        sequence = sequence + &amp;quot;N&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;      else&lt;/span&gt;

&lt;span class="s1"&gt;        # Not a N, so we should decode the base.&lt;/span&gt;
&lt;span class="s1"&gt;        base = bases[ ( byte &amp;gt;&amp;gt; shift ) &amp;amp; 0b11 ]&lt;/span&gt;

&lt;span class="s1"&gt;        # If we&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;go&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;lower&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;within&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mask_blocks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="k"&gt;sequence&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sequence&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="k"&gt;sequence&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sequence&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Move&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;along&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that some of the detail is left out in the above, especially the
business of loading up the relevant blocks; how that would be done will
depend on language and the approach to writing the code. The Emacs Lisp code
I've written has what I think is a fairly straightforward approach to it.
There's a similar approach in the &lt;a href="https://github.com/davep/org-davep-2bit"&gt;Common Lisp code I've
written&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And that's pretty much it. There are a few other details that differ
depending on how this is approached, the language used, and other
considerations; one body of 2bit reader code that I've written attempts to
optimise how it does things as much as possible because it's capable of
reading the data locally or via ranged HTTP GETs from a web server; the
Common Lisp version I wrote still needs some work because I was having fun
getting back into Common Lisp; the Emacs Lisp version needs to try and keep
data as small as possible because it's working with buffers, not direct file
access.&lt;/p&gt;
&lt;p&gt;Having got to know the format of 2bit files a fair bit, I'm adding this to
my list of "fun to do a version of" problems when getting to know a new
language, or even dabbling in a language I know.&lt;/p&gt;</content><category term="misc"></category><category term="Bioinformatics"></category></entry><entry><title>Reading 2bit files (for fun) - the index</title><link href="https://blog.davep.org/2020/09/05/reading-2bit-files-for-fun-the-index.html" rel="alternate"></link><published>2020-09-05T10:59:00+01:00</published><updated>2020-09-05T10:59:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2020-09-05:/2020/09/05/reading-2bit-files-for-fun-the-index.html</id><summary type="html">&lt;p&gt;As mentioned in &lt;a href="/2020/08/30/reading-2bit-files-for-fun.html"&gt;the first
post&lt;/a&gt;, once you've read in the
header data for a 2bit file, the next step is to read the index. This is an
index into all the different sequences held in the file. Reading the index
itself is fairly straightforward.&lt;/p&gt;
&lt;p&gt;The index comes right after …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As mentioned in &lt;a href="/2020/08/30/reading-2bit-files-for-fun.html"&gt;the first
post&lt;/a&gt;, once you've read in the
header data for a 2bit file, the next step is to read the index. This is an
index into all the different sequences held in the file. Reading the index
itself is fairly straightforward.&lt;/p&gt;
&lt;p&gt;The index comes right after the header -- so it starts on the 17th byte of
the file. Each entry in the index contains three items of information:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Content&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Size&lt;/th&gt;
&lt;th&gt;Comments&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Name length&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;1 byte&lt;/td&gt;
&lt;td&gt;How many bytes long the name is&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Name&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;Varies&lt;/td&gt;
&lt;td&gt;Length given by previous field&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Offset&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;Location in the file of the sequence&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;So, in some sort of pseudo-code, you'd read in the index as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;dict&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;seq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;seq_count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;seq_count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;comes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;header&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;name_len&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;read_bytes&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;read_bytes&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;name_len&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;offset&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;read_bytes&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;index&lt;/span&gt;[&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;]&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;offset&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note, as mentioned in the &lt;a href="/2020/08/30/reading-2bit-files-for-fun.html"&gt;first
post&lt;/a&gt;, the &lt;code&gt;index&lt;/code&gt; will need to
be byte-swapped if the file is in an endian form other than the machine
you're running your code on. How you'd go about this will, of course, vary
from language to language, but the main idea is always going to be the same.&lt;/p&gt;
&lt;p&gt;There's a fairly striking downside to this approach though: reading data can
often be an expensive (in terms of time) operation -- this is especially
true if the data is coming in from a remote machine, perhaps even one that's
being accessed over the Internet. As such, it's best if you can make as few
"trips" to the file as possible.&lt;/p&gt;
&lt;p&gt;With this in mind, the best thing to do is to read the whole index into
memory in one go and then process it from there -- the idea being that
that's just one trip to the data source. The problem here, however, is that
there's nothing in the header or the index that tells you how large the
index actually is. What you can do though is work on the worst case scenario
(assuming memory will allow). The worst case is fairly easy to handle: it's
going to be 1 byte for the name length, plus 255 bytes for the name (the
longest possible name), plus 4 bytes for the offset; multiply all that by
the number of sequences in the index and you have the worst-case buffer
size.&lt;/p&gt;
&lt;p&gt;When reading this data in you might also want to ensure you're not going to
run off the end of the file (perhaps the names are all quite small and so
are the sequences).&lt;/p&gt;
&lt;p&gt;Recently I've been working on &lt;a href="https://github.com/davep/2bit.el"&gt;a package for Emacs that can read data from
2bit files&lt;/a&gt;, so here's the core code for
reading in the index:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;2bit--read-index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Read the sequence index from SOURCE.&lt;/span&gt;

&lt;span class="s"&gt;As a side effect &lt;/span&gt;&lt;span class="ss"&gt;`2bit-data-pos&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; of SOURCE will move.&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cl-loop&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; The index will be a hash of sequence names, with the values being the&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; offsets within the file.&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nv"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;make-hash-table&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;:test&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;#&amp;#39;equal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; We could read each name/value pair one by one, but because we&amp;#39;re doing&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; this within Emacs, which means making a temp buffer for every read,&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; that could get pretty expensive pretty fast. So instead we&amp;#39;ll read the&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; index data in in one go. However, there is no easy-to-calculate size&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; for the index. The best we can do is calculate the worst case size. So&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; let&amp;#39;s do that. The worst case size is the maximum size of the name of&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; a sequence (255), plus the size of the byte that tells us the name&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; (1), plus the size of the word that is the offset in the file (4).&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nv"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;2bit--read&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;2bit-data-sequence-count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; For every sequence in the file...&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;2bit-data-sequence-count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; Calculate the position within the buffer for this loop around. Note&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; that the skip is the last position plus 1 for the size byte plus the&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; size plus the length of the offset word.&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;pos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;then&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;pos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; Get the length of the name of the sequence.&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;aref&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; Pull out the name itself.&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;substring&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;1+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;pos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; Pull out the offset.&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;offset&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;2bit--word-from-bytes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;substring&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;pos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;pos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; Collect the offset into the hash.&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;setf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;gethash&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="c1"&gt;;; Once we&amp;#39;re all done.... return the index.&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nv"&gt;finally&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This code does what I mention above: it grabs enough data into a buffer in
one go that I'll have the whole index in memory to pull apart, and then I
work with the in-memory copy. The index is added to a hashing dictionary.
Note that, in this case, I don't actually do the test for running off the
end of the file because at the heart of the file reading code is
&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Reading-from-Files.html"&gt;&lt;code&gt;insert-file-contents-literally&lt;/code&gt;&lt;/a&gt;
and it doesn't error if you request too much.&lt;/p&gt;
&lt;p&gt;With that done you'll have a list of all the sequences in the file. The next
part, which will come in &lt;a href="/2020/09/26/reading-2bit-files-for-fun-the-sequence.html"&gt;the next
post&lt;/a&gt;,
is the properly tricky part: the decoding of the sequence data itself.&lt;/p&gt;</content><category term="misc"></category><category term="Bioinformatics"></category></entry><entry><title>Reading 2bit files (for fun)</title><link href="https://blog.davep.org/2020/08/30/reading-2bit-files-for-fun.html" rel="alternate"></link><published>2020-08-30T15:20:00+01:00</published><updated>2020-08-30T15:20:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2020-08-30:/2020/08/30/reading-2bit-files-for-fun.html</id><summary type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;I've written a bit before about the value of having simple but interesting
"problems", that you know the solution to, as &lt;a href="/2019/11/10/going-on-a-journey.html"&gt;a way of exercising yourself
in a new environment&lt;/a&gt;. Recently I've
added another to the list I already have, and I used it as an excuse to get …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;I've written a bit before about the value of having simple but interesting
"problems", that you know the solution to, as &lt;a href="/2019/11/10/going-on-a-journey.html"&gt;a way of exercising yourself
in a new environment&lt;/a&gt;. Recently I've
added another to the list I already have, and I used it as an excuse to get
back into writing &lt;a href="https://github.com/davep/org-davep-2bit"&gt;some Common
Lisp&lt;/a&gt;; and then went on to use it
as a reason to write &lt;a href="(https://elisp.dev/)"&gt;yet another&lt;/a&gt; package &lt;a href="https://github.com/davep/2bit.el"&gt;for
Emacs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Having gone through the process of writing code to handle 2bit files twice
in about a month, and in two very similar but slightly different languages,
I thought it might be interesting for me to then use it to exercise my
ability to write blog posts (something I always struggle with -- I find
writing &lt;em&gt;very hard&lt;/em&gt; on a number of levels) and especially posts that explain
a particular problem and how I implemented code relating to that problem.&lt;/p&gt;
&lt;p&gt;Also, because the initial version of this post rambled on a bit too much and
I lost the ability to finish it, I'm starting again and will be breaking it
up a number of posts spanning a number of days -- perhaps even weeks -- so
that I don't feel too overwhelmed by the process of writing it. I will, of
course, make sure every post links to the other posts.&lt;/p&gt;
&lt;p&gt;Now, before I go on, I'll make the important point that everything here is
written from the perspective of a software developer who happens to work as
part of a bioinformatics team; I don't do bioinformatics, I don't claim to
understand it, I just happen to sit with (well, used to sit with them --
hopefully we'll all make it back to the office one day!) and work with them,
and develop software that supports their work. Anything you see in any of
the posts that's wrong about that subject: that's just my ignorance being
shown through the lens of a software developer (all corrections are
welcome).&lt;/p&gt;
&lt;p&gt;So, with all those disclaimers aside, I'm going to go on a slow wander
through what a 2bit file is, how you'd go about reading it, and related
issues. This isn't designed as a tutorial or anything like that, this is
simply me taking what I've learnt and writing it down. Perhaps someone else
will benefit one day, but the purpose is to simply enjoy cementing it in my
own mind and to enjoy the process of putting it all in writing.&lt;/p&gt;
&lt;h1&gt;What is a "2bit file"?&lt;/h1&gt;
&lt;p&gt;So what's this new "problem" I've added to my list? It's code to read
sequence data from &lt;a href="https://genome.ucsc.edu/FAQ/FAQformat.html#format7"&gt;2bit format
files&lt;/a&gt;. For anyone who
doesn't know (&lt;em&gt;bioinformatics people look away now; a software developer is
going to explain one of your file formats&lt;/em&gt;), this is a file format that is
intended to hold sequences in an efficient way. As I'm sure you know,
&lt;a href="https://en.wikipedia.org/wiki/DNA"&gt;DNA&lt;/a&gt; is made up of &lt;a href="https://en.wikipedia.org/wiki/Nucleobase"&gt;4
bases&lt;/a&gt;, represented by the letters
&lt;a href="https://en.wikipedia.org/wiki/Thymine"&gt;&lt;code&gt;T&lt;/code&gt;&lt;/a&gt;,
&lt;a href="https://en.wikipedia.org/wiki/Cytosine"&gt;&lt;code&gt;C&lt;/code&gt;&lt;/a&gt;,
&lt;a href="https://en.wikipedia.org/wiki/Adenine"&gt;&lt;code&gt;A&lt;/code&gt;&lt;/a&gt; and
&lt;a href="https://en.wikipedia.org/wiki/Guanine"&gt;&lt;code&gt;G&lt;/code&gt;&lt;/a&gt;. So, in the simplest case, we
could just represent a genome using those four letters. Simple enough,
right? Nice big text file with just those 4 letters in?&lt;/p&gt;
&lt;p&gt;The thing is, something like the human genome is around &lt;a href="https://en.wikipedia.org/wiki/Human_genome#Molecular_organization_and_gene_content"&gt;3 billion bases in
length&lt;/a&gt;.
That'd make for a petty big file to have to store and move around. So why
not compress it down a bit? That's where the 2bit format comes in.&lt;/p&gt;
&lt;p&gt;Given this problem I'm sure most developers would quickly notice that, given
4 different characters, you only need 2 bits to actually hold them all (two
bits gets us &lt;code&gt;00&lt;/code&gt;, &lt;code&gt;01&lt;/code&gt;, &lt;code&gt;10&lt;/code&gt; and &lt;code&gt;11&lt;/code&gt;, so four different states). This
means with a little bit of coding you can store 4 bases in a single byte.
Just like that you've pretty much squished the whole thing down to 1/4 of
the original size. And that's more or less what the 2bit format does. If you
take a look at &lt;a href="http://hgdownload.cse.ucsc.edu/goldenPath/hg38/bigZips/"&gt;the actual data for the human
genome&lt;/a&gt; you'll see
that &lt;code&gt;hg38.2bit&lt;/code&gt; is roughly 1/4 of 3 billion bytes, ish, give or take.&lt;/p&gt;
&lt;p&gt;There is a wrinkle, however. There are parts of a genome where you might not
know what base is there. Generally &lt;a href="https://www.bioinformatics.org/sms/iupac.html"&gt;an &lt;code&gt;N&lt;/code&gt; is used for
that&lt;/a&gt;. So, actually, we want
to be able to store 5 different characters. But 5 isn't going to go into 2
bits... Damn! Well, it's okay, 2bit has a solution to that too, and I'll
cover that later on.&lt;/p&gt;
&lt;h1&gt;How is a 2bit file formatted?&lt;/h1&gt;
&lt;p&gt;As you can see from &lt;a href="https://genome.ucsc.edu/FAQ/FAQformat.html#format7"&gt;the format information available
online&lt;/a&gt;, a 2bit file is
a binary file format that is split into 3 key parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A fixed size header with some key information&lt;/li&gt;
&lt;li&gt;An index into the rest of the file&lt;/li&gt;
&lt;li&gt;A series of records that contain actual sequence information&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this first post I'll cover the details of the header. Subsequent posts
will cover the index and the actual sequence data records.&lt;/p&gt;
&lt;h2&gt;The header&lt;/h2&gt;
&lt;p&gt;The header of a 2bit file is fixed in size and contains some key
information. It can be broken down as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Content&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Size&lt;/th&gt;
&lt;th&gt;Comments&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Signature&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;See below for endian issues.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Version&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;Always 0.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sequence count&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Reserved&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;Always ignored.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The signature value is used to test if what you're looking at is a 2bit
file, but also tells you some vital information about how to read the file
-- see below for more on that. The version value is always &lt;code&gt;0&lt;/code&gt; -- as such
another useful test would be to error out if you get a valid signature but
get a version other than &lt;code&gt;0&lt;/code&gt;. The sequence count is, as you'd guess, the
number of sequences that are held within the file -- this is important when
loading in the index of the file (more on that in the next post).&lt;/p&gt;
&lt;h2&gt;The signature, big and little endianness, and byte swapping&lt;/h2&gt;
&lt;p&gt;The header mentioned above comprises of 4 32-bit word values. The very first
word is important to how you read the rest of the file. This is the
&lt;code&gt;signature&lt;/code&gt; for the 2bit file and it should always be &lt;code&gt;0x1A412743&lt;/code&gt;. And this
is where it gets interesting and fun right away. The 2bit file format allows
for the fact that the file can be built in either &lt;a href="https://en.wikipedia.org/wiki/Endianness"&gt;a little-endian or a
big-endian machine&lt;/a&gt;, and the
32-bit word values can be binary-written to the file in the local
architecture's byte order. The effect of this is that, from reading the very
first value in the file, you need to decide if every other numeric value you
read needs to be byte-swapped in some way. The early logic being (in no
particular language) something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;signature&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;x1A412743&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;must_swap&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;False&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;byte_swap&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;signature&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;x1A412743&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;must_swap&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;True&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;raise&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;This isn&amp;#39;t a valid 2bit file&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Simply put, to read the rest of the file you will need a function that
byte-swaps a 32bit numeric value, and a flag of some sort to mark that you
need to do this every time you read such a value. Of course, depending on
your language of choice, you could do it in a number of different ways. In a
language like JavaScript or Scheme, where you can easily throw around
functions, I'd probably just assign the appropriate 32bit-word-reading
function to a global function name and call that regardless throughout the
rest of the code. In other languages I'd probably just check the flag each
time and call the swapping function if needed. In something like Python I'd
likely just use the signature to decide on which format to pass to
&lt;a href="https://docs.python.org/3.8/library/struct.html#struct.unpack"&gt;&lt;code&gt;struct.unpack&lt;/code&gt;&lt;/a&gt;.
For example, some variation on:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Assuming that &amp;#39;header&amp;#39; is the whole header of the file read as a binary buffer.&lt;/span&gt;

&lt;span class="n"&gt;word_fmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;test_fmt&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;I&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;I&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;struct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;test_fmt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)[&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x1A412743&lt;/span&gt;
        &lt;span class="n"&gt;word_fmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;test_fmt&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;word_fmt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;This isn&amp;#39;t a 2bit file&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, the Python approach sort of hides the important detail here. With it
we'd simply use &lt;code&gt;struct.unpack&lt;/code&gt;'s &lt;a href="https://docs.python.org/3.8/library/struct.html#byte-order-size-and-alignment"&gt;ability to handle different byte orders
&lt;/a&gt;
and not worry about the detail. Which isn't fun, right? So how might code to
byte-swap a 32bit value look?&lt;/p&gt;
&lt;p&gt;Assuming you've got the value as an actual numeric integer, it can be as
simple as using a bit of bitwise anding and shifting. Here's the basic code
I wrote in Common Lisp, for example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;swap-long&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Swap the endianness of a long integer VALUE.&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;logior&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;logand&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;ash&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;#xff&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;logand&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;ash&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;#xff00&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;logand&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;ash&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;#xff0000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;logand&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;ash&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;#xff000000&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;JavaScript might be something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;swapLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;24&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;8&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;0xff00&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;8&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;0xff0000&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;24&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;0xff000000&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and other variations on that theme in different languages.&lt;/p&gt;
&lt;h2&gt;Up next&lt;/h2&gt;
&lt;p&gt;In &lt;a href="/2020/09/05/reading-2bit-files-for-fun-the-index.html"&gt;the next post&lt;/a&gt;
I'll write about how the sequence index is stored and how to load it,
including some considerations about how to make the loading as efficient as
possible.&lt;/p&gt;</content><category term="misc"></category><category term="Bioinformatics"></category></entry><entry><title>The PEP 8 hill I will die on</title><link href="https://blog.davep.org/2020/08/23/the-pep-8-hill-i-will-die-on.html" rel="alternate"></link><published>2020-08-23T16:54:00+01:00</published><updated>2020-08-23T16:54:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2020-08-23:/2020/08/23/the-pep-8-hill-i-will-die-on.html</id><summary type="html">&lt;p&gt;I first learnt Python back in the mid-to-late 90s, used it in place of Perl
once I was comfortable with it, and then we sort of drifted apart when I
first met Ruby. It's only in the last couple of years that I've got back
into it, and in a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I first learnt Python back in the mid-to-late 90s, used it in place of Perl
once I was comfortable with it, and then we sort of drifted apart when I
first met Ruby. It's only in the last couple of years that I've got back
into it, and in a huge way, thanks to &lt;a href="/2017/12/12/on_to_something_new.html"&gt;my (not-quite-so-) new
job&lt;/a&gt;. Despite
the quirks and oddness (as I perceive them), I actually quite like Python
and it's one of those languages that just flows off my fingers. I'm sure you
know the same thing, perhaps not with Python, but there will be languages
that just flow for you, and those that take a bit more effort and
concentration. Python... feels okay to me.&lt;/p&gt;
&lt;p&gt;I also appreciate that there's been a long-standing style guide. I quite
like &lt;a href="python.org/dev/peps/pep-0008/"&gt;PEP 8&lt;/a&gt; as a read, and think there's a
lot of good ideas in there; much of the content sits with how I'd approach
things if I was tasked to come up with such a document. With this in mind,
I'm a fairly heavy user of &lt;code&gt;pylint&lt;/code&gt; and it in turn leans on PEP 8 (amongst
other things) and I'm happy to accept most of its judgements. Not all of its
judgements, &lt;a href="/2019/11/04/my-pylint-shame.html"&gt;but even when I disagree with it I try and keep track of how
far I'm
drifting&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But there is absolutely one hill I will happily die on when it comes to PEP
8: the concept of &lt;a href="https://www.python.org/dev/peps/pep-0008/#whitespace-in-expressions-and-statements"&gt;"extraneous whitespace" in lists and
expressions&lt;/a&gt;.
Just.... no! Oh gods no!&lt;/p&gt;
&lt;p&gt;To borrow a line of code from &lt;a href="/2019/11/10/going-on-a-journey.html"&gt;the journey problem I dabbled with a while
back&lt;/a&gt;,
PEP 8 would have me write something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;perform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;commands&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, I'm sure plenty of people won't see a problem with this at all; but all
I can see is an almost-claustrophobic parameter list. What's with the
parameters being jammed up against the opening and closing parens? Why have
the dinky little comma lost between two different things? Why have it look
like a long stream of letters and punctuation? Why....&lt;/p&gt;
&lt;p&gt;No.&lt;/p&gt;
&lt;p&gt;Just no.&lt;/p&gt;
&lt;p&gt;I can't.&lt;/p&gt;
&lt;p&gt;Rightly or wrongly, I just need for the code to breathe a bit. When I type
this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;perform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;commands&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;suddenly if feels like there's fresh air in the code, like it flows gently
out of my head, off my fingers, through the keyboard and into the buffer.&lt;/p&gt;
&lt;p&gt;In my head, and to my eyes, the code is.... relaxed.&lt;/p&gt;
&lt;p&gt;Do I have a rational reason for this? Nope. Then again I don't see one for
doing it the other way either; I can't think of one and I don't see one in
the source document. So, that's a warning I always turn off with &lt;code&gt;pylint&lt;/code&gt;
and it's a style I carry through all my Python code; and I think that's the
important point here: anyone reading and working with my code should see the
same style all the way through. It might differ from PEP 8 on this point,
but at least it's the same all the way.&lt;/p&gt;
&lt;p&gt;And, really, that's okay: &lt;a href="https://www.python.org/dev/peps/pep-0008/#a-foolish-consistency-is-the-hobgoblin-of-little-minds"&gt;PEP 8 is there to be
ignored&lt;/a&gt;.
;-)&lt;/p&gt;
&lt;p&gt;PS: This is a small part of another blog post I was meaning to write, and
might still do, about my (still ongoing) experience of getting
&lt;a href="https://github.com/emacs-lsp/lsp-mode"&gt;&lt;code&gt;lsp-mode&lt;/code&gt;&lt;/a&gt; up and running in Emacs
and having it play nice with Python projects. I have that working, but it
was a bit of a learning curve and epic battle over a couple of days, and one
that had me first encounter
&lt;a href="https://pypi.org/project/pycodestyle/"&gt;&lt;code&gt;pycodestyle&lt;/code&gt;&lt;/a&gt;. I may still tell the
tale...&lt;/p&gt;</content><category term="misc"></category><category term="Python"></category></entry><entry><title>When the man page fibs</title><link href="https://blog.davep.org/2020/07/10/when-the-man-page-fibs.html" rel="alternate"></link><published>2020-07-10T20:58:00+01:00</published><updated>2020-07-10T20:58:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2020-07-10:/2020/07/10/when-the-man-page-fibs.html</id><summary type="html">&lt;p&gt;Earlier this week something in my development environment, relating to
&lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;, Python,
&lt;a href="https://github.com/pyenv/pyenv"&gt;pyenv&lt;/a&gt; and
&lt;a href="https://pipenv.pypa.io/en/latest/"&gt;pipenv&lt;/a&gt;, got updated and broke a handful
of repositories. Not in a way that I couldn't recover from, just in a way
that was annoying, got in the way of my workflow, and needed attention.
&lt;em&gt;(note …&lt;/em&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Earlier this week something in my development environment, relating to
&lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;, Python,
&lt;a href="https://github.com/pyenv/pyenv"&gt;pyenv&lt;/a&gt; and
&lt;a href="https://pipenv.pypa.io/en/latest/"&gt;pipenv&lt;/a&gt;, got updated and broke a handful
of repositories. Not in a way that I couldn't recover from, just in a way
that was annoying, got in the way of my workflow, and needed attention.
&lt;em&gt;(note to self: how I set up for Python/Django development on a machine
might be a good post in the future)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Once I was sure what the fix was (pretty much: nuke the virtual environment
and recreate it with &lt;code&gt;pipenv&lt;/code&gt;, being very explicit about the version of
Python to use) the next step was to figure out how many repositories were
affected; not all were and there wasn't an obvious pattern to it. What was
obvious was that the problem came down to &lt;code&gt;python&lt;/code&gt; in the &lt;code&gt;.venv&lt;/code&gt; directory
pointing to a binary that didn't exist any more.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot 2020-07-10 at 20.21.15.png" src="/attachments/2020/07/10/Screenshot 2020-07-10 at 20.21.15.png"&gt;&lt;/p&gt;
&lt;p&gt;So... tracking down problematic repositories would be simple enough, just
look for every instance of &lt;code&gt;.venv/bin/python&lt;/code&gt; and be sure it points to
something rather than nothing; if it points to nothing I need to remake the
virtual environment.&lt;/p&gt;
&lt;p&gt;I quickly knocked up a script that was based around looking over the results
of a &lt;code&gt;find&lt;/code&gt;, and initially decided to use &lt;code&gt;file&lt;/code&gt; to perform the test on
&lt;code&gt;python&lt;/code&gt;. It seemed to make sense, as I wrote the script I checked the &lt;code&gt;man&lt;/code&gt;
page for &lt;code&gt;file(1)&lt;/code&gt; on macOS and sure enough, this exists:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-E On filesystem errors (file not found etc), instead of handling the error as regular output as POSIX mandates and keep going, issue an error message and exit.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Given that &lt;code&gt;file&lt;/code&gt; dereferences links by default, that should get me an error
for a broken link, right? Bit hacky I guess, but it was the first thing that
came to mind for a quick bit of scripting and would do the trick. Only...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;-E&lt;span class="w"&gt; &lt;/span&gt;does-not-exist
file:&lt;span class="w"&gt; &lt;/span&gt;invalid&lt;span class="w"&gt; &lt;/span&gt;option&lt;span class="w"&gt; &lt;/span&gt;--&lt;span class="w"&gt; &lt;/span&gt;E
Usage:&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;bcCdEhikLlNnprsvzZ0&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;test&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;namefile&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;-F&lt;span class="w"&gt; &lt;/span&gt;separator&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;magicfiles&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;-M&lt;span class="w"&gt; &lt;/span&gt;magicfiles&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;file...
&lt;span class="w"&gt;       &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;-C&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;magicfiles
Try&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;--help&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;more&lt;span class="w"&gt; &lt;/span&gt;information.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://www.destroyallsoftware.com/talks/wat"&gt;Wat&lt;/a&gt;?!? But it's right there! It says so in the manual! &lt;code&gt;-E&lt;/code&gt; is documented right in the manual page! And yet it's not in the valid switch list as put out by the command, &lt;em&gt;and&lt;/em&gt; it's an &lt;code&gt;invalid option&lt;/code&gt;. The hell?&lt;/p&gt;
&lt;p&gt;So I go back and look at the &lt;code&gt;man&lt;/code&gt; page again and then I notice it isn't in
the list of switches in the synopsis.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SYNOPSIS&lt;br&gt;
    file [-bcdDhiIkLnNprsvz] [--extension] [--mime-encoding] [--mime-type] [-f namefile] [-m magicfiles] [-P name=value] [-M magicfiles] file&lt;br&gt;
    file -C [-m magicfiles]&lt;br&gt;
    file [--help]  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I then did the obvious tests. Did I have &lt;code&gt;file&lt;/code&gt; aliased in some way? No. Was
some other thing that works and acts like &lt;code&gt;file&lt;/code&gt; in my path? No. Was I
absolutely 100% using &lt;code&gt;/usr/bin/file&lt;/code&gt;? Yes.&lt;/p&gt;
&lt;p&gt;Long story short: it seems the &lt;code&gt;man&lt;/code&gt; page for &lt;code&gt;file&lt;/code&gt;, on macOS, fibs about
what switches it supports; it says that &lt;code&gt;-E&lt;/code&gt; is a valid option, but it's not
there.&lt;/p&gt;
&lt;p&gt;What's even odder is the man page says it documents v5.04 of the command,
but &lt;code&gt;--version&lt;/code&gt; reports v5.37. Meanwhile, if I check on a GNU/Linux box I
have access to, it does support &lt;code&gt;-E&lt;/code&gt;, reports it in the switches, documents
it in the &lt;code&gt;man&lt;/code&gt; page (in both the synopsis and in the main body of the page)
and it is v5.25 (and so is its man page).&lt;/p&gt;
&lt;p&gt;So that was something like 20 minutes lost to a very small problem, for
which there was no real solution, but was time that had to be spent to get
to the bottom of it.&lt;/p&gt;
&lt;p&gt;In the end I went with what I probably should have gone with in the first
place: &lt;code&gt;stat -L&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;venv&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-name&lt;span class="w"&gt; &lt;/span&gt;.venv&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="w"&gt; &lt;/span&gt;stat&lt;span class="w"&gt; &lt;/span&gt;-L&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$venv&lt;/span&gt;&lt;span class="s2"&gt;/bin/python&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;/dev/null&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$venv&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And now I have that script in my &lt;code&gt;~/bin&lt;/code&gt; directory, ready for the next time
Homebrew and friends conspire to throw my day off for a while.&lt;/p&gt;</content><category term="misc"></category><category term="homebrew"></category><category term="macOS"></category><category term="Unix"></category><category term="Python"></category></entry><entry><title>Helping myself change the default git branch</title><link href="https://blog.davep.org/2020/07/09/helping-myself-change-the-default-git-branch.html" rel="alternate"></link><published>2020-07-09T20:17:00+01:00</published><updated>2020-07-09T20:17:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2020-07-09:/2020/07/09/helping-myself-change-the-default-git-branch.html</id><summary type="html">&lt;p&gt;This is something I've being meaning to do for a couple or so years now, and
unsurprisingly it's bubbled up again recently: the business of swapping the
name of the &lt;code&gt;master&lt;/code&gt; branch in &lt;code&gt;git&lt;/code&gt; out for something better.&lt;/p&gt;
&lt;p&gt;Because it's one of those jobs that's simultaneously simple and also
laborious …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is something I've being meaning to do for a couple or so years now, and
unsurprisingly it's bubbled up again recently: the business of swapping the
name of the &lt;code&gt;master&lt;/code&gt; branch in &lt;code&gt;git&lt;/code&gt; out for something better.&lt;/p&gt;
&lt;p&gt;Because it's one of those jobs that's simultaneously simple and also
laborious, I kept putting it off. Changing up the local configuration so
that &lt;code&gt;main&lt;/code&gt; (or whatever name you prefer) is used "out of the box" &lt;a href="https://leigh.net.au/writing/git-init-main/"&gt;is
simple enough&lt;/a&gt;; the laborious
part is updating all of the repositories that live in the "forge of choice".
In my case, &lt;a href="https://github.com/davep"&gt;over on GitHub&lt;/a&gt;, I have &lt;a href="https://github.com/davep?tab=repositories"&gt;getting on
for 200 repositories&lt;/a&gt; -- 142 of
which are public (as of the time of writing). At work we use
&lt;a href="https://gitlab.com/"&gt;GitLab&lt;/a&gt; as our internal forge and I've got a
non-trivial number of repositories on there too.&lt;/p&gt;
&lt;p&gt;The obvious first step to tackling this is to knock up a little tool to help
find the repos that still need swapping. That was &lt;a href="https://github.com/davep/git-archaic"&gt;simple
enough&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c1"&gt;# Quick and dirty tool to find repositories that still make use of a&lt;/span&gt;
&lt;span class="c1"&gt;# &amp;quot;master&amp;quot; branch. Helps with tracking down the ones that need&lt;/span&gt;
&lt;span class="c1"&gt;# updating/improving.&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;repo&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-name&lt;span class="w"&gt; &lt;/span&gt;.git&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$repo&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;branch&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;master&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;/dev/null&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$repo&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;

&lt;span class="c1"&gt;### git-archaic ends here&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It's not meant to be clever, just something I can run when I'm in a "default
branch swapping" mood so find a repository or two to tackle. The idea being
that it uses &lt;code&gt;find&lt;/code&gt; to pull out any instance of &lt;code&gt;.git&lt;/code&gt; in or below the
current directory, changes to it (inside a sub-process to ensure the &lt;code&gt;PWD&lt;/code&gt;
gets put back after the &lt;code&gt;cd&lt;/code&gt; that happens, before the next iteration of the
loop), gets a list of the branches and, if &lt;code&gt;master&lt;/code&gt; is one of them, prints
the directory name.&lt;/p&gt;
&lt;p&gt;Using this, I can now slowly work through my more active repositories and
make the swap -- the idea being that if I currently have them cloned down to
my machine, they're obviously some level of "active". At some point I
imagine I could get more clever and use the APIs of the forges to look at
all the repositories I own; that's another job for another day.&lt;/p&gt;
&lt;p&gt;This gives me enough to be going on with. :-)&lt;/p&gt;</content><category term="misc"></category><category term="git"></category></entry><entry><title>A second attempt to learn Swift</title><link href="https://blog.davep.org/2020/06/21/a-second-attempt-to-learn-swift.html" rel="alternate"></link><published>2020-06-21T14:48:00+01:00</published><updated>2020-06-21T14:48:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2020-06-21:/2020/06/21/a-second-attempt-to-learn-swift.html</id><summary type="html">&lt;p&gt;It's five years ago this month that I bought myself my first macOS (then OS
X) device. After many years of having a Windows machine as my daily driver,
which was also my work machine (I worked from home), I decided it was high
time that I returned to having …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's five years ago this month that I bought myself my first macOS (then OS
X) device. After many years of having a Windows machine as my daily driver,
which was also my work machine (I worked from home), I decided it was high
time that I returned to having a Unix-a-like system on my desk too. For a
decade or so, starting in the later-90s, I'd had a GNU/Linux desktop. I
still had a Windows desktop (until a couple of years ago most of my work was
on DOS and Windows), but thanks to the wonders of a KVM, and later an X
server that ran on Windows, my personal hacking was done on a GNU/Linux
desktop.&lt;/p&gt;
&lt;p&gt;But as things moved around, priorities changed, as life moved on, the
GNU/Linux boxes got retired and never quite replaced. Eventually, in 2015, I
found myself with the means and desire to recover that sort of setup. Long
story short, after a lot of reading up and weighing up options I decided
that the best option for a desktop Unix was... an iMac!&lt;/p&gt;
&lt;p&gt;I loved it. Sure, &lt;a href="/2015/06/27/my-first-couple-of-weeks-with-an-imac.html"&gt;there were lots of little things on the surface that were
different or annoying or just plain not as cool as the Mac fans would tell
you&lt;/a&gt;,
but under the hood I found what I needed: a Unix CLI with all the things I
knew well. And, of course, it ran GNU Emacs just fine; that was the really
important thing for me.&lt;/p&gt;
&lt;p&gt;Pretty much right away I decided that it might be fun to learn the tools
necessary to develop native Mac apps, and perhaps even iOS apps. I
downloaded XCode, bought a book, and started working through it. Having got
that book, I decided it might be interesting to own an iOS device too. So,
sort of needing an MP3 player, and having no wish to get an iPhone, &lt;a href="/2015/06/23/and-now-for-some-ios.html"&gt;I got
myself an iPod
Touch&lt;/a&gt;. So I
was all set to devour the Swift book, write some stuff for OS X, create an
iOS app or two, and... life happened. Stuff cropped up that distracted me
from taking that further and I never really returned to working through the
book.&lt;/p&gt;
&lt;p&gt;Fast forward to now and that initial iMac and iPod purchase spiralled a wee
bit. Next after the iPod was an iPad Mini, when my Nexus 7 was starting to
show its age and it was obvious that Google wasn't going to produce any more
good Android tablets. Then, when I needed a very portable Unix-a-like
machine for trips between where I was living and Edinburgh, &lt;a href="/2016/04/28/i-now-own-a-macbook.html"&gt;I got myself a
MacBook Air&lt;/a&gt;.
Since then the iPod Touch has been replaced once, as has the iPad Mini. I
now also own an iPad and a MacBook Pro. Unless Apple screw up and turn Macs
into something unusable for developers (there are rumours), I imagine I'll
be using Apple devices for some time to come now.&lt;/p&gt;
&lt;p&gt;And then, last month, having finally got frustrated with where Google were
going with Android and the Pixel series, I jumped ship to the iPhone 11.&lt;/p&gt;
&lt;p&gt;As of right now I'm in a situation where I'm all about the Apple ecosystem
regarding hardware and operating systems (including for my work machine),
all of which is there to support my heavy use of the Google ecosystem
(actually, the one bit of Google hardware I still lean on heavily is the
Google Home -- I have 3 around my home).&lt;/p&gt;
&lt;p&gt;So... given all of that, I thought it was time to look at returning to
learning Swift, with a view to writing some native macOS and i(Pad)OS stuff.
I soon realised that the book I'd bought back in 2015 was rather out of
date. It covers Swift 1.2 -- &lt;a href="https://en.wikipedia.org/wiki/Swift_(programming_language)#Version_history"&gt;we're now up to
5.2&lt;/a&gt;!
Given this, and given I've forgotten pretty much everything I'd read at the
time, I decided I should start again from scratch.&lt;/p&gt;
&lt;p&gt;This weekend I've started reading my way though &lt;a href="https://www.oreilly.com/library/view/ios-13-programming/9781492074526/"&gt;&lt;em&gt;iOS Programming
Fundamentals with
Swift&lt;/em&gt;&lt;/a&gt;.
While this obviously has an emphasis on iOS, I'm already finding that the
first part of the book is a really great introduction to the Swift language
in general. The pace seems just right, and the way topics are grouped makes
it easy enough for me to skip over what's obvious (I don't need to know what
objected-oriented programming is, and what the difference between a class
and an object is, etc) and read up on the detail of this particular language
when it comes to general concepts I know (knowing the differences between a
class, struct and enum in the language is important, for example).&lt;/p&gt;
&lt;p&gt;I've yet to write a line of code, but I'm fine with that. The book is
spending a lot of time introducing the language before encouraging you to
fire up XCode, and I'm okay with that. I'm never a fan of being asked to
write out code that I can't properly follow -- that just makes stuff look
like magic when it's far more educational to know what's going on. What I am
finding is I'm making lots of notes that are either &lt;em&gt;"oh, yeah, this is
cool, I like this idea!"&lt;/em&gt; or &lt;em&gt;"WTF are you kidding me?!?"&lt;/em&gt;. Which is really
nice -- it's always great to learn a new language that's a bit different
from what you normally use.&lt;/p&gt;
&lt;p&gt;My plan then, over the next few weeks, it to keep at this and hopefully
document my journey. I think I'd like to write a short series of TIL-type
posts; nothing too long, just some new thing I read or discovered and my
reaction to it. So, if you happen to follow this blog, I apologise in
advance for any Swift-spam.&lt;/p&gt;
&lt;p&gt;You have been warned. ;-)&lt;/p&gt;</content><category term="misc"></category><category term="Swift"></category><category term="Apple"></category><category term="programming"></category></entry><entry><title>My journey to the dark side is complete</title><link href="https://blog.davep.org/2020/06/14/my-journey-to-the-dark-side-is-complete.html" rel="alternate"></link><published>2020-06-14T20:00:00+01:00</published><updated>2020-06-14T20:00:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2020-06-14:/2020/06/14/my-journey-to-the-dark-side-is-complete.html</id><summary type="html">&lt;p&gt;Ever since the whole business of "light mode" and "dark mode" really kicked
off in the mobile OS world, I've been a fan of the dark modes. On both
Android and iOS/iPadOS, when apps became available with dark modes, I'd
switch to it. When the operating systems themselves adopted …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ever since the whole business of "light mode" and "dark mode" really kicked
off in the mobile OS world, I've been a fan of the dark modes. On both
Android and iOS/iPadOS, when apps became available with dark modes, I'd
switch to it. When the operating systems themselves adopted the switch,
that's what I went for. As well as having a love for all things black
(anyone who knows me personally will know that), I think it just looks
better on mobile devices. I can't quite say why, but it just works best for
me.&lt;/p&gt;
&lt;p&gt;So, when macOS got a supported dark mode, I instantly switched it on,
obviously. Then, within a day, I switched it back to light mode.
Surprisingly it just didn't work for me, and I wasn't sure why. Since then
I've tried living with it a few times and it's rarely lasted more than a few
hours. There was something, something I couldn't quite put my finger on,
that didn't sit right.&lt;/p&gt;
&lt;p&gt;Last Monday I decided to give it another go. This time, however, I thought
I'd figured it out. The "problem" was Emacs! As mentioned &lt;a href="/2020/01/11/where-i-live-and-work.html"&gt;back in
January&lt;/a&gt;,
for as long as I've used it (so since the mid-1990s), my Emacs has always
had a light background -- probably because that's how it came "out of the
box" (I'm talking Emacs in graphical mode here; I started with it on &lt;a href="https://en.wikipedia.org/wiki/OS/2#1994%E2%80%931996:_The_%22Warp%22_years"&gt;OS/2
Warp&lt;/a&gt;
and then moved to a GNU/Linux X-based desktop). I figured that the contrast
between the colour scheme of Emacs, and the rest of the machine, was the
issue here.&lt;/p&gt;
&lt;p&gt;I spend most of my working day either in Emacs, or in
&lt;a href="https://www.iterm2.com/"&gt;iTerm2&lt;/a&gt; -- often rapidly switching between the
two. I've always run iTerm2 in the usual dark background mode with light
text. So I figured the problem was having a dark OS desktop, dark terminal,
and then a light editing environment. Eventually that'd feel wrong.&lt;/p&gt;
&lt;p&gt;So I decided that, for the first time in about 25 years, I should give Emacs
a go with a dark mode. Taking a quick look at &lt;a href="https://pawelbx.github.io/emacs-theme-gallery/"&gt;popular dark
themes&lt;/a&gt; I noticed
&lt;a href="https://github.com/purcell/color-theme-sanityinc-tomorrow"&gt;&lt;code&gt;sanityinc-tomorrow-night&lt;/code&gt;&lt;/a&gt;
looked easy on the eye, so I gave that a go (actually, I gave each of the
themes in that set a go, &lt;a href="https://github.com/davep/.emacs.d/commit/07f1c4c4c8c0c476f1e5e34845a834956d2be0c4"&gt;initially starting with
&lt;code&gt;sanityinc-tomorrow-eighties&lt;/code&gt;&lt;/a&gt;,
but I finally settled on &lt;code&gt;sanityinc-tomorrow-night&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;To start with it didn't look too good; not because of a problem with the
theme itself, but because, over time, I'd made changes and tweaks to my
setup that assumed I'd be using my usual light theme. After some dabbling
and tinkering and trying things out, I got it looking "just so".&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot 2020-06-14 at 19.40.43.png" src="/attachments/2020/06/14/Screenshot 2020-06-14 at 19.40.43.png"&gt;&lt;/p&gt;
&lt;p&gt;Having got that working, I then thought it would be nice to be able to have
Emacs -- at least on restart -- adapt to me switching between dark and light
mode on macOS. It turns out that detecting if macOS is in dark mode is easy
enough, the command &lt;code&gt;defaults read -g AppleInterfaceStyle&lt;/code&gt; will emit &lt;code&gt;Dark&lt;/code&gt;
if in dark mode. So, knowing that, I updated &lt;a href="https://github.com/davep/is-a.el/blob/2b3eb99a213454536d789325f01477e3ce7eec87/is-a.el#L67-L70"&gt;my personal package for
checking things about the environment that Emacs is in to use that
information&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;defconst&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;is-a-macOS-dark-mode-window-p&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nv"&gt;is-a-macOS-window-p&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;string=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;shell-command-to-string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;defaults read -g AppleInterfaceStyle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Dark\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Are we running in a macOS window in dark mode?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So, as of now, my Emacs setup is such that, &lt;a href="https://github.com/davep/.emacs.d/blob/f8389ac8f93b66c614ef82705929b86f01efc130/init.d/init-style.el#L15-L24"&gt;if I'm in graphical mode on
macOS and I'm in dark mode, Emacs will use a dark theme, otherwise it'll do
what it did before -- with a light background in a graphical mode and a more
Borland-a-like blue background when in CHUI
mode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This seems to have made a difference. Almost one week on my work Macbook is
still in dark mode, and I've switched both of my personal Macbooks, and my
iMac, into dark mode too. I think it's sticking this time. Next up is to
give some serious consideration to darkening the web in general. Only now am
I noticing just how damn bright most of it is!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;As a slight aside to the above, I've also made one other change to Emacs:
I've finally dropped the display of scroll bars. In the themes I'm using
they didn't look so great, appearing to be distracting. For the past 25
years I've had the scrollbars there, but never actually &lt;em&gt;used&lt;/em&gt; them; all
they've ever done is serve as a visual aid to where I am in a file. Thing
is, I'm not sure I ever really pay that much attention to that either. So,
as a test, I've also been running with them turned off and, so far, I'm
really not noticing them been gone.&lt;/p&gt;
&lt;p&gt;The habits we form that we convince ourselves make sense...&lt;/p&gt;</content><category term="misc"></category><category term="Emacs"></category></entry><entry><title>Some more ~/.emacs.d evolution</title><link href="https://blog.davep.org/2020/06/07/some-more-emacsd-evolution.html" rel="alternate"></link><published>2020-06-07T16:48:00+01:00</published><updated>2020-06-07T16:48:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2020-06-07:/2020/06/07/some-more-emacsd-evolution.html</id><summary type="html">&lt;p&gt;When I started with this version of the blog on Hashnode&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;, my plan was to
try and write something at least once a week. I managed to do that as far as
January this year, give or take, but then things got a little busy, the
world got trickier …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When I started with this version of the blog on Hashnode&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;, my plan was to
try and write something at least once a week. I managed to do that as far as
January this year, give or take, but then things got a little busy, the
world got trickier, and... Well, &lt;a href="https://en.wikipedia.org/wiki/COVID-19_pandemic"&gt;you don't need me to tell you about
that&lt;/a&gt;. Anyway, I'm back to
write some more and, hopefully, try and keep up with writing. I feel it'll
do me good.&lt;/p&gt;
&lt;p&gt;I have been busy since January. Work has, as far as possible, carried on as
normal. The only big difference being I'm back working from home. It's an
odd turn of events personally given that I'd worked from home for 21 years,
then (with some trepidation) &lt;a href="/2017/12/12/on_to_something_new.html"&gt;went back to working in an
office&lt;/a&gt;. Having got used to being in
an office and being around people, it took some adjusting to working alone
again.&lt;/p&gt;
&lt;p&gt;So, on to the main point of this post... During that period I've spent a lot
more time at my machine than I would normally, and so it was inevitable that
I'd end up tinkering with &lt;a href="https://github.com/davep/.emacs.d"&gt;my Emacs
configuration&lt;/a&gt;. While it's true that
&lt;a href="/2019/11/23/visual-evolution-of-emacs-config.html"&gt;there's hardly a week goes by where I don't tinker with some small
thing&lt;/a&gt;, I try not to make
huge changes too often. Huge changes do happen though.&lt;/p&gt;
&lt;p&gt;A handful of weeks back was another one of those times where I made a big
change.&lt;/p&gt;
&lt;p&gt;After I &lt;a href="/2016/05/26/starting_fresh_with_gnu_emacs.html"&gt;burnt my original &lt;code&gt;~/.emacs&lt;/code&gt; file back in
2016&lt;/a&gt; I've had an approach
where I've tried to make things as modular as possible, and as easy to clone
down to a new machine as possible. The design I came up with, &lt;a href="/2017/07/13/more_revamping_of_my_emacs_config.html"&gt;especially
once I moved over to using
&lt;code&gt;use-package&lt;/code&gt;&lt;/a&gt;, has
served me well. But there was always one thing that bothered me: the files
that handled the loading and configuration of packages were, in effect,
&lt;a href="https://github.com/davep/.emacs.d/tree/728e74376bf5606d9ef2d297e36cc2d35e159d64/init.d/packages"&gt;still three large monolithic
files&lt;/a&gt;.
While this was better than a single monolithic &lt;code&gt;~/.emacs&lt;/code&gt;, it still didn't
feel quite right.&lt;/p&gt;
&lt;p&gt;Giving it a bit of thought, I decided that what I really wanted was a single
directory in which I could drop lots of small &lt;code&gt;.el&lt;/code&gt; files that would handle
the loading and configuration of all sorts of packages. While it didn't gain
anything concrete, the idea felt tidier. Tidy is good. Feeling like the code
smell is good, is good too.&lt;/p&gt;
&lt;p&gt;First though I needed a way to load multiple files, ideally within a whole
directory hierarchy, without needing to know in advance what files would be
there. After a little bit of tinkering I settled on &lt;a href="https://github.com/davep/.emacs.d/blob/c3d53152b1adc9ba5e43baddb986870b3244b113/init.d/init-packages.el#L42-L46"&gt;this bit of
code&lt;/a&gt;
that revolves around the use of
&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Contents-of-Directories.html"&gt;&lt;code&gt;directory-files-recursively&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;expand-file-name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;init.d/packages.d/&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;user-emacs-directory&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;when&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-exists-p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cl-loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;directory-files-recursively&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;rx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.el&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;eol&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="nb"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;load&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file-name-sans-extension&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;use&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Simply put, this code finds every file in and below
&lt;a href="https://github.com/davep/.emacs.d/tree/master/init.d/packages.d"&gt;&lt;code&gt;~/.emacs.d/init.d/packages.d/&lt;/code&gt;&lt;/a&gt;
whose name ends in &lt;code&gt;.el&lt;/code&gt; (note the use of a regular expression, using
&lt;a href="/2019/12/01/being-phony-and-lispy-regular-expressions.html"&gt;&lt;code&gt;rx&lt;/code&gt;&lt;/a&gt;
to create it), removes the extension from the name, and loads it with &lt;code&gt;load&lt;/code&gt;
(dropping the extension means &lt;code&gt;load&lt;/code&gt; can decide if it wants to load the
compiled version of the code, or the source, depending on what's available).&lt;/p&gt;
&lt;p&gt;After writing that I could then start to populate
&lt;code&gt;~/.emacs.d/init.d/packages.d/&lt;/code&gt; with lots of smaller files that handled the
loading of packages. In some cases there's a file just for one package, in
other cases there's a file that handles a logical grouping of packages
(where there are obvious direct dependencies, or where one package is
designed to extend the other, etc). For now I've decided to break things
down into three directories that map to the three monolithic files I had
before:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot 2020-06-07 at 16.36.28.png" src="/attachments/2020/06/07/Screenshot 2020-06-07 at 16.36.28.png"&gt;&lt;/p&gt;
&lt;p&gt;However, I'm not totally wedded to this design and I may change this as time
goes on.&lt;/p&gt;
&lt;p&gt;While I've not spent any time properly testing it out, I've also not really
noticed any obvious impact on startup speed. However, this tends not to be a
real concern for me. I seldom &lt;em&gt;start&lt;/em&gt; Emacs anyway. I always have it running
&lt;a href="https://github.com/davep/e"&gt;and use &lt;code&gt;emacsclient&lt;/code&gt; as my editor in most places so files open instantly
in the running version of Emacs&lt;/a&gt;.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Note from future me: we're now back over on &lt;code&gt;blog.davep.org&lt;/code&gt; of
course.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="misc"></category><category term="Emacs"></category><category term="Lisp"></category><category term="Emacs Lisp"></category></entry><entry><title>dnote.el - A wrapper for the dnote CLI</title><link href="https://blog.davep.org/2020/01/19/dnoteel-a-wrapper-for-the-dnote-cli.html" rel="alternate"></link><published>2020-01-19T16:35:00+00:00</published><updated>2020-01-19T16:35:00+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2020-01-19:/2020/01/19/dnoteel-a-wrapper-for-the-dnote-cli.html</id><summary type="html">&lt;p&gt;Late on last year I stumbled on an article about
&lt;a href="https://www.getdnote.com/"&gt;dnote&lt;/a&gt;. Annoyingly, I can't recall now where I
saw it, but I made a reminder to look at it over my Christmas break.&lt;/p&gt;
&lt;p&gt;Dnote looked like a tool that would fill a hole I had in how I work. When …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Late on last year I stumbled on an article about
&lt;a href="https://www.getdnote.com/"&gt;dnote&lt;/a&gt;. Annoyingly, I can't recall now where I
saw it, but I made a reminder to look at it over my Christmas break.&lt;/p&gt;
&lt;p&gt;Dnote looked like a tool that would fill a hole I had in how I work. When it
comes to making notes about things, and keeping things for future reference,
I use a few tools, each one being just right (for me) for the job in
question. I use &lt;a href="https://evernote.com/"&gt;Evernote&lt;/a&gt; to track documents and
other household type things. I use &lt;a href="https://www.google.com/keep/"&gt;Keep&lt;/a&gt; to
make notes about stuff I need to remember short-term (say, the size of a
space in my bedroom that I want furniture to go in) and also to record notes
while in meetings at work. I use &lt;a href="https://journey.cloud/"&gt;Journey&lt;/a&gt; to keep a
journal about... anything, really. Finally, &lt;a href="https://pinboard.in/u:davep"&gt;I use
Pinboard&lt;/a&gt; to keep hold of URLs I might want to
go back to (I also use it to create a to-read list).&lt;/p&gt;
&lt;p&gt;Amongst all of this, however, I felt I was missing something for keeping
track of things that don't really fall into any of the categories above.
Mostly this would be work-based or hacking-based things that are short and
sweet but I don't always use enough to easily remember. I wanted just the
right tool that would let me ferret away useful one-liners, remind myself of
obscure switches that get used once or twice a year, etc.&lt;/p&gt;
&lt;p&gt;After reading up on dnote it seemed pretty clear that this was just such a
tool.&lt;/p&gt;
&lt;p&gt;After getting back to the office at the start of this month I decided to
make use of it and see how it went. My idea was simple: I'd record any "TIL"
stuff that I might want to remember in the future, as well as recording
things I need now and again but can't always remember.&lt;/p&gt;
&lt;p&gt;So far it's working quite well. I like that it has a simple CLI. I like that
it's got a backend that you can use to sync between different machines. I
like that it's got a web interface that's mobile-friendly. I like that &lt;a href="https://github.com/dnote/dnote"&gt;it's
Free Software&lt;/a&gt; and so you can host your own
server if you wish.&lt;/p&gt;
&lt;p&gt;I found I liked it enough that, of course, I felt the need to start &lt;a href="https://github.com/davep/dnote.el"&gt;a
simple Emacs wrapper for the CLI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At the moment dnote.el is designed to be a simple capture system. There are
commands for capturing a one-liner (entered in the Emacs mini-buffer), for
capturing the content of the current buffer, and for capturing
freshly-entered multi-line text, entered in a buffer that uses
&lt;code&gt;markdown-mode&lt;/code&gt;. There's also a command for syncing notes if you have
configured dnote to talk to a backend.&lt;/p&gt;
&lt;p&gt;What I don't have right now is the ability to navigate and view notes. So
far I've not really felt the need for that because the CLI approach works so
well. Longer-term though I can see my tweaking this and adding in commands
for searching, viewing, editing and deleting notes.&lt;/p&gt;
&lt;p&gt;But, for now, if you've not had a look at dnote, I'd highly recommend having
a play and seeing if it makes sense for you. And, if it does, and you're an
Emacs user, perhaps dnote.el will be useful too?&lt;/p&gt;</content><category term="misc"></category><category term="Emacs"></category><category term="Lisp"></category><category term="Emacs Lisp"></category></entry><entry><title>Where I live and work</title><link href="https://blog.davep.org/2020/01/11/where-i-live-and-work.html" rel="alternate"></link><published>2020-01-11T14:17:00+00:00</published><updated>2020-01-11T14:17:00+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2020-01-11:/2020/01/11/where-i-live-and-work.html</id><summary type="html">&lt;p&gt;It's no surprise that I spend a lot of time in Emacs. Especially when I'm
developing software, either for work or for personal fun, most of my time is
time spent in Emacs. While I do obviously flit over to Chrome, and mostly do
my CLI stuff in &lt;a href="https://iterm2.com/"&gt;iTerm2&lt;/a&gt; (I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's no surprise that I spend a lot of time in Emacs. Especially when I'm
developing software, either for work or for personal fun, most of my time is
time spent in Emacs. While I do obviously flit over to Chrome, and mostly do
my CLI stuff in &lt;a href="https://iterm2.com/"&gt;iTerm2&lt;/a&gt; (I really like
&lt;a href="https://www.gnu.org/software/emacs/manual/html_mono/eshell.html"&gt;eshell&lt;/a&gt;
but it just can't replace a good terminal for me), I spend a lot of time
looking at Emacs.&lt;/p&gt;
&lt;p&gt;Here's what my Emacs looks like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot 2020-01-11 at 13.49.04.png" src="/attachments/2020/01/11/Screenshot 2020-01-11 at 13.49.04.png"&gt;&lt;/p&gt;
&lt;p&gt;Key elements for me are as follows:&lt;/p&gt;
&lt;h1&gt;Light background&lt;/h1&gt;
&lt;p&gt;Something I've never really got on with when it comes to code editing is
dark themes and dark backgrounds. I find it too much of an eye strain.
Oddly, I tend to prefer dark themes everywhere else, but not when it comes
to working in Emacs. The theme I use is &lt;a href="https://github.com/davep/.emacs.d/blob/b9a3df42f0708eabc31a6176d69a67bbdf31a087/init.d/init-style.el#L12-L13"&gt;the built-in adwaita
theme&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Less boring mode line&lt;/h1&gt;
&lt;p&gt;I make use of &lt;a href="https://github.com/milkypostman/powerline"&gt;powerline&lt;/a&gt; to
&lt;a href="https://github.com/davep/.emacs.d/blob/b9a3df42f0708eabc31a6176d69a67bbdf31a087/init.d/packages/init-packages-melpa.el#L386-L399"&gt;make the mode line a bit less
boring-looking&lt;/a&gt;.
While the colour scheme is such that it's kept in line with the light look,
the style is nice in that it sort of matches the style of prompt I use in my
shell.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot 2020-01-11 at 14.05.39.png" src="/attachments/2020/01/11/Screenshot 2020-01-11 at 14.05.39.png"&gt;&lt;/p&gt;
&lt;h1&gt;Full screen&lt;/h1&gt;
&lt;p&gt;I always run Emacs as a full-screen application, then splitting it into
different tiled windows using its own internal window handling. This is
something I've done from way back when I got started with my first GNU/Linux
desktop machine, and still like to do on macOS.&lt;/p&gt;
&lt;p&gt;I also &lt;a href="https://github.com/davep/longmacs.el"&gt;run Emacs as a server&lt;/a&gt; and
then use &lt;a href="https://github.com/davep/e"&gt;a little wrapper around &lt;code&gt;emacsclient&lt;/code&gt;&lt;/a&gt;
to open files (both locally and remotely) from the command line in that
Emacs session.&lt;/p&gt;
&lt;h1&gt;Comfortable eshell when I need it&lt;/h1&gt;
&lt;p&gt;Although I say above that I generally don't use &lt;code&gt;eshell&lt;/code&gt;, preferring to use
a full-featured terminal application, in combination with
&lt;a href="https://fishshell.com/"&gt;fish&lt;/a&gt;, I do sometimes dip into eshell for quick
things. So of course I have that configured to feel comfortable too.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot 2020-01-11 at 14.10.07.png" src="/attachments/2020/01/11/Screenshot 2020-01-11 at 14.10.07.png"&gt;&lt;/p&gt;
&lt;p&gt;I do this easily &lt;a href="https://github.com/davep/.emacs.d/blob/b9a3df42f0708eabc31a6176d69a67bbdf31a087/init.d/packages/init-packages-melpa.el#L181-L192"&gt;thanks to
&lt;code&gt;eshell-git-prompt&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</content><category term="misc"></category><category term="Emacs"></category><category term="shell"></category></entry><entry><title>nuke-buffers.el -- Tidy up open buffers in Emacs</title><link href="https://blog.davep.org/2019/12/14/nuke-buffersel-tidy-up-open-buffers-in-emacs.html" rel="alternate"></link><published>2019-12-14T13:17:00+00:00</published><updated>2019-12-14T13:17:00+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2019-12-14:/2019/12/14/nuke-buffersel-tidy-up-open-buffers-in-emacs.html</id><summary type="html">&lt;p&gt;Both at work and at home I use Emacs by &lt;a href="https://github.com/davep/longmacs.el"&gt;keeping a copy running all the
time&lt;/a&gt;, and use &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html#Emacs-Server"&gt;&lt;code&gt;emacsclient&lt;/code&gt; to open
files inside
it&lt;/a&gt;
(including on remote machines thanks to a bit of
&lt;a href="https://en.wikipedia.org/wiki/Secure_Shell"&gt;&lt;code&gt;ssh&lt;/code&gt;&lt;/a&gt; and heavy use of
&lt;a href="https://www.gnu.org/software/tramp/"&gt;&lt;code&gt;tramp&lt;/code&gt;&lt;/a&gt; -- I might write this up at
some point). This works …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Both at work and at home I use Emacs by &lt;a href="https://github.com/davep/longmacs.el"&gt;keeping a copy running all the
time&lt;/a&gt;, and use &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html#Emacs-Server"&gt;&lt;code&gt;emacsclient&lt;/code&gt; to open
files inside
it&lt;/a&gt;
(including on remote machines thanks to a bit of
&lt;a href="https://en.wikipedia.org/wiki/Secure_Shell"&gt;&lt;code&gt;ssh&lt;/code&gt;&lt;/a&gt; and heavy use of
&lt;a href="https://www.gnu.org/software/tramp/"&gt;&lt;code&gt;tramp&lt;/code&gt;&lt;/a&gt; -- I might write this up at
some point). This works really well, but does mean I tend to build up a lot
of buffers over time.&lt;/p&gt;
&lt;p&gt;Having lots of buffers open isn't generally an issue, and if I'm working on
lots of different files in a project during the course of a hacking session
it's actually a good thing. But, quite often, I want to tidy up the buffer
list, clearing it back to near-zero buffers open. Many years ago, when I had
a "proper" tower system running 24/7, with Emacs open all the time, I'd use
&lt;a href="https://www.emacswiki.org/emacs/MidnightMode"&gt;&lt;code&gt;clean-buffer-list&lt;/code&gt; as part of
&lt;code&gt;midnight&lt;/code&gt;&lt;/a&gt;. Along the way
that fell out of favour with me, likely because I drifted into using
machines that had Emacs open all the time but where the machine wasn't awake
all the time.&lt;/p&gt;
&lt;p&gt;Eventually I decided to have some fun rolling my own solution, and
&lt;a href="https://github.com/davep/nuke-buffers.el"&gt;&lt;code&gt;nuke-buffers&lt;/code&gt;&lt;/a&gt; was born.&lt;/p&gt;
&lt;p&gt;Rather than try and do things in an automated way, this was designed to be
&lt;a href="https://github.com/davep/.emacs.d/blob/ffc863ca0fb669d2f6639bda62e81764c35767ce/init.d/packages/init-packages-delpa.el#L98-L107"&gt;bound to a key (or
two)&lt;/a&gt;
and then be run when I wanted, being as harsh as possible about cleaning up
the buffer list. Since first writing it it's worked well for me.&lt;/p&gt;
&lt;p&gt;These days I tend to let the buffer list build up as I work on a new
feature, or chase down a bug, etc. Then, once I've made the final commit for
that period of focus, I'll hit the &lt;code&gt;nuke-buffer&lt;/code&gt; key combo as the final act
of confirming that I've done the job. So not only does this help tidy my
Emacs session a bit, it also feels like a physical form of punctuation --
back in less sensible days, when I had some terrible habits, it would have
been when I'd reach for the celebratory cigarette; buffer-tidying feels far
more wholesome. ;)&lt;/p&gt;
&lt;p&gt;The way the code works is, of course, mostly directed at how I work -- it's
highly likely it wouldn't make sense for many other people. The main aim is
to kill as many buffers as possible, but without disturbing anything else.
The list of buffers it gathers for nuking avoids buffers that are &lt;a href="https://github.com/davep/nuke-buffers.el/blob/d018499b78968f074565c076068f657a1631aa07/nuke-buffers.el#L60-L62"&gt;visiting
files but have unsaved
content&lt;/a&gt;,
avoids &lt;a href="https://github.com/davep/nuke-buffers.el/blob/d018499b78968f074565c076068f657a1631aa07/nuke-buffers.el#L54"&gt;the
minibuffer&lt;/a&gt;
(obviously), avoids &lt;a href="https://github.com/davep/nuke-buffers.el/blob/d018499b78968f074565c076068f657a1631aa07/nuke-buffers.el#L56"&gt;any "special"
buffer&lt;/a&gt;
(one that starts with a space then an asterisk), avoids &lt;a href="https://github.com/davep/nuke-buffers.el/blob/d018499b78968f074565c076068f657a1631aa07/nuke-buffers.el#L73"&gt;the current
buffer&lt;/a&gt;
and also avoids &lt;a href="https://github.com/davep/nuke-buffers.el/blob/d018499b78968f074565c076068f657a1631aa07/nuke-buffers.el#L58"&gt;any buffer in a list of names to
avoid&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've being using this on a daily basis for around 2.5 years now and it's
done the job without ever losing me any work.&lt;/p&gt;</content><category term="misc"></category><category term="Emacs"></category><category term="Lisp"></category><category term="Emacs Lisp"></category></entry><entry><title>git2gantt -- Simple tool to visualise coding runs</title><link href="https://blog.davep.org/2019/12/08/git2gantt-simple-tool-to-visualise-coding-runs.html" rel="alternate"></link><published>2019-12-08T13:44:00+00:00</published><updated>2019-12-08T13:44:00+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2019-12-08:/2019/12/08/git2gantt-simple-tool-to-visualise-coding-runs.html</id><summary type="html">&lt;p&gt;At the start of this year, as part of a much bigger process to review the
work that had taken place over the previous 12 months, I was asked (at work)
to provide some information about how much time I'd spent on various
projects. Now, for me, there's really only …&lt;/p&gt;</summary><content type="html">&lt;p&gt;At the start of this year, as part of a much bigger process to review the
work that had taken place over the previous 12 months, I was asked (at work)
to provide some information about how much time I'd spent on various
projects. Now, for me, there's really only one project, but there's lots of
different tools and libraries that I've written to support the main work I
do. All of these are split into different repositories in the
company-internal instance of &lt;a href="https://about.gitlab.com/"&gt;GitLab&lt;/a&gt;. This meant
that getting a rough idea of what I was working on and when would be easy
enough -- it's all there in the commit history.&lt;/p&gt;
&lt;p&gt;Given that this information would make up a couple of slides at most during
a far bigger presentation, I wanted something that would be snappy and easy
for non-developers to follow and understand. I spent a bit of time pondering
some options and decided that (ab)using a &lt;a href="https://en.wikipedia.org/wiki/Gantt_chart"&gt;gantt
chart&lt;/a&gt; layout would make sense.&lt;/p&gt;
&lt;p&gt;That choice was made all the more easier given that &lt;a href="https://docs.gitlab.com/ee/user/markdown.html#mermaid"&gt;GitLab
supports&lt;/a&gt; the use of
&lt;a href="https://mermaid-js.github.io/mermaid/#/"&gt;mermaid charts&lt;/a&gt; within its
Markdown. This meant I could quickly write some code that took the git log
of each repository, turned it into mermaid code, and then render it (by
hand, this was all about getting things done quickly) via GitLab.&lt;/p&gt;
&lt;p&gt;This sounded like it could be a fun personal project. The result was some
Python code called &lt;a href="https://github.com/davep/git2gantt"&gt;git2gantt&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As mentioned above, the output isn't anything too clever, it's just code
that can be used to create a plot via mermaid. For example, running
git2gannt over itself:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gantt
  title git2gantt output
  dateFormat YYYY-MM-DD

  section git2gantt
  Development: devgit2gantt20190208, 2019-02-08, 2019-02-13
  Development: devgit2gantt20190214, 2019-02-14, 2019-02-15
  Development: devgit2gantt20190303, 2019-03-03, 2019-03-04
  Development: devgit2gantt20191203, 2019-12-03, 2019-12-04
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Usage is pretty straightforward: &lt;img alt="Screenshot 2019-12-08 at
13.18.12.png" src="/attachments/2019/12/08/Screenshot 2019-12-08 at 13.18.12.png"&gt;
As you can see, it can be run over multiple repos at once, and there's also
an option to have it consider every branch within each repository. Another
handy option is the ability to limit the output to just one author --
perhaps you just want to document what you've done on a repo, not the
contributions of other people.&lt;/p&gt;
&lt;p&gt;Also especially handy, if you don't want to bore people with too much
detail, is the "fuzz" option. This lets you tell &lt;code&gt;git2gannt&lt;/code&gt; how relaxed you
want it to be when it tries to decide how long a run of work on a repo
lasted. So, perhaps, you're working on and off on a library that supports
some other system you're documenting, but you might only be making changes
every other day or so. With the correct fuzz value you can make it clear you
were working &lt;em&gt;on&lt;/em&gt; the library for a couple of weeks, despite there only
being a commit every other day.&lt;/p&gt;
&lt;p&gt;An example of running the output over a handful of projects would look
something like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot 2019-12-08 at 13.34.41.png" src="/attachments/2019/12/08/Screenshot 2019-12-08 at 13.34.41.png"&gt;&lt;/p&gt;
&lt;p&gt;This is one of those tools I knocked up quickly to get a job done, and
haven't quite got round to finishing off fully. One thing I'd really like to
do is add mermaid support directly within it, so that it actually has the
option to emit plots, not just mermaid code (or, perhaps, drop the mermaid
approach and use something else entirely).&lt;/p&gt;
&lt;p&gt;Meanwhile though, if you're looking for something quick and dirty that will
help you visualise what you've been working on and when for a good period of
time... perhaps this will help.&lt;/p&gt;</content><category term="misc"></category><category term="Python"></category><category term="documentation"></category></entry><entry><title>Being phony, and Lispy regular expressions</title><link href="https://blog.davep.org/2019/12/01/being-phony-and-lispy-regular-expressions.html" rel="alternate"></link><published>2019-12-01T16:42:00+00:00</published><updated>2019-12-01T16:42:00+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2019-12-01:/2019/12/01/being-phony-and-lispy-regular-expressions.html</id><summary type="html">&lt;p&gt;While it does seem that they're a little out of fashion these days, in some
circles anyway, I'm still an avid fan of &lt;code&gt;make&lt;/code&gt; and make files. Even in
environments where I don't need a &lt;code&gt;Makefile&lt;/code&gt; to actually build anything,
I'll use one (or more) to help create handy shortcuts …&lt;/p&gt;</summary><content type="html">&lt;p&gt;While it does seem that they're a little out of fashion these days, in some
circles anyway, I'm still an avid fan of &lt;code&gt;make&lt;/code&gt; and make files. Even in
environments where I don't need a &lt;code&gt;Makefile&lt;/code&gt; to actually build anything,
I'll use one (or more) to help create handy shortcuts for getting stuff
done.&lt;/p&gt;
&lt;p&gt;Looking at the main &lt;code&gt;Makefile&lt;/code&gt; for one of my major work projects, there's 45
targets that help fire off various jobs (all of them &lt;a href="https://marmelab.com/blog/2016/02/29/auto-documented-makefile.html"&gt;self-documenting using
a variation on an approach I read a while
back&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In most cases the targets aren't real targets. That's to say, they don't
build the thing they're called. They are &lt;a href="https://www.gnu.org/software/make/manual/html_node/Phony-Targets.html"&gt;phony
targets&lt;/a&gt;.
So, as makes sense, I make a point of marking them all as such. I follow the
convention that has the &lt;code&gt;.PHONY&lt;/code&gt; marker appear on the line before the
target; this feels cleaner to me and easier to follow and maintain.&lt;/p&gt;
&lt;p&gt;But.... I'm lazy. And I use Emacs. Typing out &lt;code&gt;.PHONY foo&lt;/code&gt; all the time
feels like far too much work. So, some time ago, I quickly threw together
&lt;a href="https://github.com/davep/make-phony.el"&gt;&lt;code&gt;make-phony.el&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With this I could be &lt;em&gt;really&lt;/em&gt; lazy. I could type out the &lt;code&gt;Makefile&lt;/code&gt; target
and then, with my cursor on it, press a key combination and have the
&lt;code&gt;.PHONY&lt;/code&gt; marker put in place.&lt;/p&gt;
&lt;p&gt;Does it save much time? Yeah, probably not really. But it was a fun little
exercise and an excuse to write a little bit of Emacs Lisp.&lt;/p&gt;
&lt;p&gt;There's one thing I made a point of doing in the heart of this too: using
&lt;code&gt;rx&lt;/code&gt;. For anyone who doesn't know of it, think of it as a very Lispy way of
writing regular expressions. I won't even try and explain it all here
&lt;a href="http://francismurillo.github.io/2017-03-30-Exploring-Emacs-rx-Macro/"&gt;because others have done an excellent job
already&lt;/a&gt;.
What I will do is say this: if you're in the habit of writing some Emacs
Lisp, or even tinkering with your configuration, and you find yourself
writing a regular expression, consider looking at &lt;code&gt;rx&lt;/code&gt; -- it's well worth
the time to get to know it.&lt;/p&gt;
&lt;p&gt;Slowly, as time goes on, I'm weeding out "vanilla" regular expressions from
my config and code and moving over to using &lt;code&gt;rx&lt;/code&gt;. I feel, quite rightly I
think, that &lt;a href="https://github.com/davep/.emacs.d/blob/b3185a1dbaa0a16f540465844b84c5e1c6a77180/init.d/packages/init-packages-melpa.el#L117-L126"&gt;something like
this&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;rx&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;;; Ignore hidden files.&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;group&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;;; I never want to edit the desktop.&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;group&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Desktop/&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;eol&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;;; Ignore compiled files.&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;group&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pyc&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;elc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;eol&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;group&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.egg-info/&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;eol&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;is much easier to write, read and maintain, than this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;\\(^\\.\\)\\|\\(Desktop/$\\)\\|\\(\\.\\(?:\\(?:\\(?:el\\|py\\)c\\)\\)$\\)\\|\\(\\.egg-info/$\\)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I mean, even &lt;em&gt;if&lt;/em&gt; the regular expression above can be written in a more
efficient way (and I imagine it can), as someone working in a Lisp
environment, I'd much sooner write and work with the &lt;code&gt;rx&lt;/code&gt; version.&lt;/p&gt;</content><category term="misc"></category><category term="Emacs"></category><category term="Lisp"></category><category term="Emacs Lisp"></category></entry><entry><title>EmacsConf 2019 videos are out</title><link href="https://blog.davep.org/2019/11/24/emacsconf-2019-videos-are-out.html" rel="alternate"></link><published>2019-11-24T17:17:00+00:00</published><updated>2019-11-24T17:17:00+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2019-11-24:/2019/11/24/emacsconf-2019-videos-are-out.html</id><summary type="html">&lt;p&gt;At the start of this month &lt;a href="/2019/11/02/emacsconf-2019.html"&gt;I spent a very enjoyable Saturday afternoon
watching EmacsConf 2019&lt;/a&gt;. If you missed it,
or even if you didn't, you might like to know that &lt;a href="https://lists.gnu.org/r/emacsconf-discuss/2019-11/msg00002.html"&gt;the announcement has
gone out&lt;/a&gt;
that almost all of the videos are &lt;a href="https://emacsconf.org/2019/videos"&gt;now available for
watching&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While I mean …&lt;/p&gt;</summary><content type="html">&lt;p&gt;At the start of this month &lt;a href="/2019/11/02/emacsconf-2019.html"&gt;I spent a very enjoyable Saturday afternoon
watching EmacsConf 2019&lt;/a&gt;. If you missed it,
or even if you didn't, you might like to know that &lt;a href="https://lists.gnu.org/r/emacsconf-discuss/2019-11/msg00002.html"&gt;the announcement has
gone out&lt;/a&gt;
that almost all of the videos are &lt;a href="https://emacsconf.org/2019/videos"&gt;now available for
watching&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While I mean nothing negative about any other video, I think the two that
stand out the most for me, in terms of things that grabbed my interest, were
&lt;a href="https://media.emacsconf.org/2019/08.html"&gt;&lt;em&gt;How a Completely Blind Manager/Dev Uses Emacs Every
Day&lt;/em&gt;&lt;/a&gt; and &lt;a href="https://media.emacsconf.org/2019/15.html"&gt;&lt;em&gt;Emacs as my Go To
Script Language&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I seem to recall that both those talks were hit with technical issues (many
talks on the day were -- part of the enjoyment for me was how the whole
conference was an experiment in using Free Software to host the whole
thing), but they're well worth a watch despite this.&lt;/p&gt;
&lt;p&gt;If you have any sort of interest in Emacs I'd highly recommend dipping into
the whole collection.&lt;/p&gt;
&lt;p&gt;I really hope there's going to be a 2020 EmacsConf.&lt;/p&gt;</content><category term="misc"></category><category term="Emacs"></category></entry><entry><title>Visual evolution of ~/.emacs.d</title><link href="https://blog.davep.org/2019/11/23/visual-evolution-of-emacsd.html" rel="alternate"></link><published>2019-11-23T14:42:00+00:00</published><updated>2019-11-23T14:42:00+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2019-11-23:/2019/11/23/visual-evolution-of-emacsd.html</id><summary type="html">&lt;p&gt;As detailed in a blog post I wrote &lt;a href="/2016/05/26/starting_fresh_with_gnu_emacs.html"&gt;back in
2016&lt;/a&gt;, I first got into
using Emacs in the mid 1990s, starting with it on OS/2 and then moving over
to GNU/Linux. It's been my often-used and much-loved development environment
for most of those years (I even have …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As detailed in a blog post I wrote &lt;a href="/2016/05/26/starting_fresh_with_gnu_emacs.html"&gt;back in
2016&lt;/a&gt;, I first got into
using Emacs in the mid 1990s, starting with it on OS/2 and then moving over
to GNU/Linux. It's been my often-used and much-loved development environment
for most of those years (I even have a couple of packages that are part of
Emacs itself).&lt;/p&gt;
&lt;p&gt;For most of that time my configuration was a single &lt;code&gt;~/.emacs&lt;/code&gt; file, which
was around 1,000 lines in length (including comments and whitespace). It'd
grown over the years, having special configuration sections for versions of
Emacs I didn't use any more, and operating systems I didn't work on any more
(yes, really, there were things in there specific to MS-DOS, for example).
On top of that I always hand-installed packages I used -- Emacs' package
management system having turned up long after I first got into using Emacs.&lt;/p&gt;
&lt;p&gt;Then, in early 2016, I decided to nuke the whole thing and start from
scratch. As mentioned above, the start of this &lt;a href="/2016/05/26/starting_fresh_with_gnu_emacs.html"&gt;is detailed in an older
post&lt;/a&gt;. Another big round of
changes &lt;a href="/2017/04/01/another_revamp_of_my_emacs_config.html"&gt;happened round a year
later&lt;/a&gt; -- which included
the birth of &lt;a href="http://blog.davep.org/delpa/"&gt;delpa&lt;/a&gt; to manage my personal
packages. A couple or so months later there was &lt;a href="/2017/07/13/more_revamping_of_my_emacs_config.html"&gt;one last big round of
changes&lt;/a&gt;, mostly killing
off my enthusiastic embracing of
&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Easy-Customization.html#Easy-Customization"&gt;&lt;code&gt;customize&lt;/code&gt;&lt;/a&gt;
and instead going back to hand-set settings, only this time done via
&lt;a href="https://github.com/jwiegley/use-package"&gt;&lt;code&gt;use-package&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The full history of this &lt;a href="https://github.com/davep/.emacs.d"&gt;can be found over on
GitHub&lt;/a&gt;, starting with the first "throw
everything away and start again" process and all the steps between then and
where my Emacs configuration is now.&lt;/p&gt;
&lt;p&gt;Which brings me to the fun part of this blog post. Earlier this week I
stumbled on &lt;a href="https://gource.io/"&gt;Gource&lt;/a&gt;. It's a tool that's primarily
designed to visualise changes in repositories, although it can be used to
visualise anything that has a tree structure and changes over time (this
week I produced a video of the growth of my employer's electronic lab
notebook by hooking up the &lt;a href="https://www.benchling.com/"&gt;Benchling&lt;/a&gt; API with
Gource, for example). So I got curious. What did it look like as I reworked
and tweaked and changed and tinkered with my Emacs configuration?&lt;/p&gt;
&lt;p&gt;This is what it looked like:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=bH4G80aZgsM"&gt;&lt;img alt="" src="https://img.youtube.com/vi/bH4G80aZgsM/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="misc"></category><category term="Emacs"></category><category term="Lisp"></category><category term="Emacs Lisp"></category></entry><entry><title>Getting started</title><link href="https://blog.davep.org/2019/11/17/getting-started.html" rel="alternate"></link><published>2019-11-17T11:36:00+00:00</published><updated>2019-11-17T11:36:00+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2019-11-17:/2019/11/17/getting-started.html</id><summary type="html">&lt;p&gt;By coincidence, in a couple of different places over the last couple of
weeks, the subject of &lt;em&gt;"how do I progress in leaning to program?"&lt;/em&gt; has
cropped up. For me, I think the approaches and solutions tend to be the same
for when I want to get my head around …&lt;/p&gt;</summary><content type="html">&lt;p&gt;By coincidence, in a couple of different places over the last couple of
weeks, the subject of &lt;em&gt;"how do I progress in leaning to program?"&lt;/em&gt; has
cropped up. For me, I think the approaches and solutions tend to be the same
for when I want to get my head around a new language: read good examples of
idiomatic code, read other related materials, find a problem you care about
and implement a solution (ideally something you'll directly benefit from, or
at least others may benefit from). Hence the &lt;a href="/2019/11/10/going-on-a-journey.html"&gt;5x5 puzzle and Norton Guide
reader projects I mentioned in my previous
post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Of course, not everyone has problems that they need solving in a way that
would work for this approach. So another approach I've recommended in the
past is to go looking on somewhere like GitHub and find projects that
promote "low-hanging fruit" issues in a way that's designed to be friendly
for those who are new to development, new to contributing or new to the
problem domain.&lt;/p&gt;
&lt;p&gt;While looking for examples of this yesterday I stumbled on &lt;a href="https://github.com/MunGell/awesome-for-beginners"&gt;&lt;em&gt;Awesome for
Beginners&lt;/em&gt;&lt;/a&gt;. This looks
like a great list and one I'm going to keep &lt;a href="https://pinboard.in/u:davep/"&gt;bookmarked for future
reference&lt;/a&gt;. Now, this particular list does
seem to have an emphasis on &lt;a href="https://github.com/MunGell/awesome-for-beginners/issues/215"&gt;pulling in people who are new to contributing
to a project&lt;/a&gt;
rather than new to development, but it does strike me as a good place to
start looking no matter where you're coming from.&lt;/p&gt;
&lt;p&gt;I know I'm going to start having a wander around that list. It's always nice
to contribute and I feel there's real personal benefit in actively solving a
problem that someone else has and welcomes help with.&lt;/p&gt;</content><category term="misc"></category><category term="Coding"></category><category term="learning"></category></entry><entry><title>Going on a journey</title><link href="https://blog.davep.org/2019/11/10/going-on-a-journey.html" rel="alternate"></link><published>2019-11-10T14:32:00+00:00</published><updated>2019-11-10T14:32:00+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2019-11-10:/2019/11/10/going-on-a-journey.html</id><summary type="html">&lt;p&gt;It's hardly a revelation to say that learning a new programming language, or
even learning software development at all, is even more difficult if you
don't have an actual problem to solve. I know I'm not alone in having pet
projects that, when faced with a new environment, I'll code …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's hardly a revelation to say that learning a new programming language, or
even learning software development at all, is even more difficult if you
don't have an actual problem to solve. I know I'm not alone in having pet
projects that, when faced with a new environment, I'll code up a version of
that project as a way to get familiar with and understand a language's
idioms while implementing something I know well.&lt;/p&gt;
&lt;p&gt;Personally, my two favourites are a puzzle called 5x5
(&lt;a href="https://github.com/davep/5x5.xml"&gt;here&lt;/a&gt;,
&lt;a href="https://github.com/davep/Chrome-5x5"&gt;here&lt;/a&gt;,
&lt;a href="https://github.com/davep/5x5-for-Chrome"&gt;here&lt;/a&gt;,
&lt;a href="https://github.com/davep/5x5-Palm"&gt;here&lt;/a&gt;,
&lt;a href="https://github.com/davep/5x5.el"&gt;here&lt;/a&gt;,
&lt;a href="https://github.com/davep/5x5-react"&gt;here&lt;/a&gt; and
&lt;a href="http://davep.org/misc/5x5/"&gt;here&lt;/a&gt;), and writing a library or even a full
application to read &lt;a href="https://en.wikipedia.org/wiki/Norton_Guides"&gt;Norton Guide database
files&lt;/a&gt;
(&lt;a href="https://github.com/davep/ng2html"&gt;here&lt;/a&gt;,
&lt;a href="https://github.com/davep/w3ng"&gt;here&lt;/a&gt;,
&lt;a href="https://github.com/davep/eg-OS2"&gt;here&lt;/a&gt;,
&lt;a href="https://github.com/davep/weg1013"&gt;here&lt;/a&gt;,
&lt;a href="https://github.com/davep/weg"&gt;here&lt;/a&gt;, &lt;a href="https://github.com/davep/eg"&gt;here&lt;/a&gt;,
&lt;a href="https://github.com/davep/eg.el"&gt;here&lt;/a&gt; and
&lt;a href="https://github.com/davep/jsNG"&gt;here&lt;/a&gt;). Both are fun to work on, have
practical uses, and both have the benefit of being solved problems (for me)
that let me concentrate on the "how do I do &lt;em&gt;X&lt;/em&gt; in this
language/toolkit/environment/framework/etc?".&lt;/p&gt;
&lt;p&gt;Even with those two as my goto projects, I'm always open to new small
problems that might be fun to apply to languages I do know, or languages I
want to get to know (internally at work &lt;a href="https://twitter.com/davepdotorg/status/1123952281156751361"&gt;we have a fun "league" of sorts,
writing a particular hamming distance calculation tool in different
languages&lt;/a&gt;, for
example).&lt;/p&gt;
&lt;p&gt;A few days ago, via &lt;a href="https://github.com/Lethrir/Journeys"&gt;this repo on
GitHub&lt;/a&gt;, I discovered &lt;a href="https://github.com/mikehadlow/Journeys"&gt;this fun little
problem&lt;/a&gt;. Right away I could see the
benefit in it. As a "go away and code up a solution" interview question it
strikes me as near-perfect. It's obviously not hard to solve, but it touches
on some basic but important aspects of software development and so will
allow the developer to show off how they approach things.&lt;/p&gt;
&lt;p&gt;There's so many different approaches to it too. Even in a single language, I
could imagine having some fun writing the smallest code to solve the
problem, the most idiomatic code to solve the problem, the most supportable
and well-documented code to solve the problem, etc. And then there's the
thing I talk about above: knowing the solution and knowing it's easy, you
can then use it to learn the idiomatic way of solving the problem in new
languages.&lt;/p&gt;
&lt;p&gt;Even better, &lt;a href="https://github.com/mikehadlow/Journeys#other-solutions"&gt;the README of the original repo links to solutions others have
written&lt;/a&gt;. Knowing
the problem, and knowing the solution, you can then go and read other
people's code and learn something about different styles and different
languages.&lt;/p&gt;
&lt;p&gt;Over the next few weeks, as I get free time, I think I might just do this.
Take the "Journeys" problem and write versions in different languages I work
with, or know, and also use it to get to know languages I've yet to know or
use heavily (I'm especially keen to try a version in
&lt;a href="https://julialang.org/"&gt;Julia&lt;/a&gt; -- a language I really like the look of and
want to find a reason to use).&lt;/p&gt;
&lt;p&gt;Meanwhile, yesterday, I had a quick go at a first version in Python (aimed
at Python 3.8 or higher):
&lt;a href="https://github.com/davep/journeys.py"&gt;https://github.com/davep/journeys.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I set out to try and write something that was fairly idiomatic Python, which
uses tools that I tend to employ when working on Python projects (pipenv,
make, etc), and which also &lt;a href="https://docs.python.org/3/library/dataclasses.html"&gt;used something I've never quite found a need for
so far&lt;/a&gt; in my usual
coding, but which I can see being useful and helpful.&lt;/p&gt;
&lt;p&gt;I even threw in a couple of uses of &lt;a href="https://www.python.org/dev/peps/pep-0572/"&gt;PEP
572&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;I can see me tinkering with this some more over the next few days. I can
even see me writing a very different implementation in Python, just for the
fun of it.&lt;/p&gt;
&lt;p&gt;I think that's what I like about this little problem. It's a good way to do
a bit of programming exercise; it's like the perfect way to do the
programming equivalent of going for a short run.&lt;/p&gt;</content><category term="misc"></category><category term="Python"></category></entry><entry><title>My Pylint shame</title><link href="https://blog.davep.org/2019/11/04/my-pylint-shame.html" rel="alternate"></link><published>2019-11-04T20:39:00+00:00</published><updated>2019-11-04T20:39:00+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2019-11-04:/2019/11/04/my-pylint-shame.html</id><summary type="html">&lt;p&gt;I first got into Python in the mid-to-late 1990s. It's so far back that I
think the copy of &lt;a href="https://www.python.org/doc/essays/foreword/"&gt;Programming
Python&lt;/a&gt; that I have (sadly in
storage at the moment) might be a first edition. I probably fell out of the
habit of using Python some time in the early …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I first got into Python in the mid-to-late 1990s. It's so far back that I
think the copy of &lt;a href="https://www.python.org/doc/essays/foreword/"&gt;Programming
Python&lt;/a&gt; that I have (sadly in
storage at the moment) might be a first edition. I probably fell out of the
habit of using Python some time in the early 2000s (that was when I met
Ruby). It was only 22 months ago that I started using Python a &lt;em&gt;lot&lt;/em&gt; thanks
to &lt;a href="/2017/12/12/on_to_something_new.html"&gt;a change of
employer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As you might imagine, much had changed in the 15+ years since I'd last
written a line of Python in anger. So, early on, I made a point of making
&lt;a href="https://www.pylint.org/"&gt;Pylint&lt;/a&gt; part of my development process. All my
projects have a &lt;code&gt;make lint&lt;/code&gt; make target. All of my projects lint the code
when I push to &lt;code&gt;master&lt;/code&gt; in the company GitLab instance. These days I even
use &lt;a href="https://www.flycheck.org/en/latest/"&gt;flycheck&lt;/a&gt; to keep me honest as I
write my code; mostly gone are the days where I don't know of problems until
I do a &lt;code&gt;make lint&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Leaning on Pylint in the early days of my new position made for a great
Python refresher for me. Now, I still lean on it to make sure I don't make
daft mistakes.&lt;/p&gt;
&lt;p&gt;But...&lt;/p&gt;
&lt;p&gt;Pylint and I don't always agree. And that's fine. For example, I really
can't stand Pylint's approach to whitespace, and that is a hill I'll happily
die on. Ditto the obsession with lines being no more than 80 characters wide
(120 should be fine thanks). As such any project's &lt;code&gt;.pylintrc&lt;/code&gt; has, as a
bare minimum, this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[FORMAT]&lt;/span&gt;
&lt;span class="na"&gt;max-line-length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;120&lt;/span&gt;

&lt;span class="k"&gt;[MESSAGES CONTROL]&lt;/span&gt;
&lt;span class="na"&gt;disable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;bad-whitespace&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Beyond that though, aside from one or two extras that pertain to particular
projects, I'm happy with what Pylint complains about.&lt;/p&gt;
&lt;p&gt;There are exceptions though. There are times, simply due to the nature of
the code involved, that Pylint's insistence on code purity isn't going to
work. That's where I use its inline &lt;a href="https://pylint.readthedocs.io/en/latest/user_guide/message-control.html#block-disables"&gt;block disabling
feature&lt;/a&gt;.
It's handy and helps keep things clean (I won't deploy code that doesn't
pass 10/10), but there is always this nagging doubt: if I've disabled a
warning in the code, am I ever going to come back and revisit it?&lt;/p&gt;
&lt;p&gt;To help me think about coming back to such disables now and again, I thought
it might be interesting to write a tool that'll show which warnings I
disable most. It resulted in &lt;a href="https://github.com/davep/fish/blob/dd2721e0565928b4145698a42c9c74e4534c578a/conf.d/abbr.d/python.fish#L5"&gt;this fish
abbr&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;abbr&lt;span class="w"&gt; &lt;/span&gt;-g&lt;span class="w"&gt; &lt;/span&gt;pylintshame&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rg --no-messages \&amp;quot;pylint:disable=\&amp;quot; | awk &amp;#39;BEGIN{FS=\&amp;quot;disable=\&amp;quot;;}{print \$2}&amp;#39; | tr \&amp;quot;,\&amp;quot; \&amp;quot;\n\&amp;quot; | sort | uniq -c | sort -hr&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The idea here being that it produces a "Pylint hall of shame", something
like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wildcard&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;import&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unused&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;wildcard&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;import&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;member&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;invalid&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;import&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;outside&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;toplevel&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bare&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;except&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unused&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;argument&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;too&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;many&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;public&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;methods&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;too&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;many&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;attributes&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;callable&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;broad&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;except&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wrong&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;import&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wrong&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;import&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;order&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unused&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unexpected&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keyword&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;too&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;many&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;locals&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;differ&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To break the pipeline down:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rg --no-messages &amp;quot;pylint:disable=&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;First off, I use &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;&lt;code&gt;ripgrep&lt;/code&gt;&lt;/a&gt; (if you
don't, you might want to have a good look at it -- I find it amazingly
handy) to find everywhere in the code in and below the current directory
(the &lt;code&gt;--no-messages&lt;/code&gt; switch just stops any file I/O errors that might result
from permission issues -- they're not interesting here) that contains a line
that has a Pylint block disable (if you tend to format yours differently,
you'll need to tweak the regular expression, of course).&lt;/p&gt;
&lt;p&gt;I then pipe it through &lt;code&gt;awk&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;BEGIN{FS=&amp;quot;disable=&amp;quot;;}{print $2}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;so I can lazily &lt;a href="https://docs.freebsd.org/info/gawk/gawk.info.Field_Separators.html"&gt;extract everything after the
&lt;code&gt;disable=&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Next up, because it's a possible list of things that can be disabled, I use
&lt;code&gt;tr&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tr &amp;quot;,&amp;quot; &amp;quot;\n&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to turn any comma-separated list into multiple lines.&lt;/p&gt;
&lt;p&gt;Having got to this point, I &lt;code&gt;sort&lt;/code&gt; the list, &lt;code&gt;uniq&lt;/code&gt; the result, while
prepending a count (&lt;code&gt;-c&lt;/code&gt;), and then &lt;code&gt;sort&lt;/code&gt; the result again, in reverse and
sorting the numbers based on how a human would read the result (&lt;code&gt;-hr&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sort | uniq -c | sort -hr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It's short, sweet and hacky, but does the job quite nicely. From now on, any
time I get curious about which disables I'm leaning on too much, I can use
this to take stock.&lt;/p&gt;</content><category term="misc"></category><category term="Python"></category><category term="fish"></category></entry><entry><title>EmacsConf 2019</title><link href="https://blog.davep.org/2019/11/02/emacsconf-2019.html" rel="alternate"></link><published>2019-11-02T11:33:00+00:00</published><updated>2019-11-02T11:33:00+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2019-11-02:/2019/11/02/emacsconf-2019.html</id><summary type="html">&lt;p&gt;For anyone who doesn't know, today is the day for &lt;a href="https://emacsconf.org/2019/"&gt;EmacsConf
2019&lt;/a&gt;. As you might gather from the name, it's
a conference all about Emacs, the joys of Emacs, Emacs Lisp and other
Emacs-related things.&lt;/p&gt;
&lt;p&gt;Better still, it's an online conference (although there do appear to be a
couple of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For anyone who doesn't know, today is the day for &lt;a href="https://emacsconf.org/2019/"&gt;EmacsConf
2019&lt;/a&gt;. As you might gather from the name, it's
a conference all about Emacs, the joys of Emacs, Emacs Lisp and other
Emacs-related things.&lt;/p&gt;
&lt;p&gt;Better still, it's an online conference (although there do appear to be a
couple of related physical gatherings around the world).&lt;/p&gt;
&lt;p&gt;I've got snacks and drinks in and no plans for my Saturday, and I hope to
follow the whole thing from start to finish.&lt;/p&gt;
&lt;p&gt;If Emacs is your thing, or knowing more about Emacs is your thing, be sure
to check it out!&lt;/p&gt;</content><category term="misc"></category><category term="Emacs"></category></entry><entry><title>pydscheck -- A quick hack that keeps slowly growing</title><link href="https://blog.davep.org/2019/10/26/pydscheck-a-quick-hack-that-keeps-slowly-growing.html" rel="alternate"></link><published>2019-10-26T13:19:00+01:00</published><updated>2019-10-26T13:19:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2019-10-26:/2019/10/26/pydscheck-a-quick-hack-that-keeps-slowly-growing.html</id><summary type="html">&lt;p&gt;Something I always try to do when I'm coding is be consistent. I feel this
is important. While people's coding standards may differ, I think different
approaches are easier to handle if someone has been consistent with their
style across all of their code.&lt;/p&gt;
&lt;p&gt;This also stands for documentation too …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Something I always try to do when I'm coding is be consistent. I feel this
is important. While people's coding standards may differ, I think different
approaches are easier to handle if someone has been consistent with their
style across all of their code.&lt;/p&gt;
&lt;p&gt;This also stands for documentation too.&lt;/p&gt;
&lt;p&gt;In my current position, I do a &lt;em&gt;lot&lt;/em&gt; of Python coding, and one of the things
I like about Python (there are things I don't like too, but that's not for
now) is that it has doc-strings (just like my &lt;a href="https://en.wikipedia.org/wiki/Common_Lisp"&gt;favourite
language&lt;/a&gt;). I use them
extensively, ensuring every function and method has some form of
documentation, and generally I use
&lt;a href="http://www.sphinx-doc.org/en/master/"&gt;Sphinx&lt;/a&gt; to generate documentation
from those doc-strings.&lt;/p&gt;
&lt;p&gt;Early on I was bothered by the fact that, just by the simple act of making
typos, I wasn't keeping the form of the doc-strings consistent. And in this
case it was a &lt;em&gt;really&lt;/em&gt; simple thing that was bugging me. Normally, if I'm
writing a single-line doc-string, I'll write like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;one_liner&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Here is a one-line doc-string.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So far, so good. But, if the doc-string is a multi-liner, I prefer the
ending quotes to be on a line of their own, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;multi_liner&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Here is the first line.&lt;/span&gt;
&lt;span class="sd"&gt;    Here is another line.&lt;/span&gt;
&lt;span class="sd"&gt;    Here is the final line.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But, sometimes, by accident, I'd leave a doc-string like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;multi_liner&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Here is the first line.&lt;/span&gt;
&lt;span class="sd"&gt;    Here is another line.&lt;/span&gt;
&lt;span class="sd"&gt;    Here is the final line.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;While it's really not a big deal, it would bug me and every time I found one
like this I'd "fix" it.&lt;/p&gt;
&lt;p&gt;Eventually, it bugged me enough that I decided I was going to write a little
tool to find all such instances in my code and report them. My first
approach was to think "I could just do this with some regexp magic", &lt;a href="http://regex.info/blog/2006-09-15/247"&gt;which
was really a bad idea&lt;/a&gt;. Then I
though, I know, I should use this as an excuse to to play with &lt;a href="https://docs.python.org/3/library/ast.html"&gt;Python's ast
library&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That worked really well! I had &lt;a href="https://github.com/davep/pydscheck/blob/dc5052002690b1f898ccd68f815cdedbe9172b74/pydscheck"&gt;the first version of the
code&lt;/a&gt;
up and running in no time. It was simple but did the job. It ran through
Python code I threw at it and alerted me to both missing doc-strings, and
doc-strings with the ending I didn't like.&lt;/p&gt;
&lt;p&gt;That served me for a while, until one day I realised that it wasn't quite
doing the job correctly; it was only really looking at top-level functions
and top-level methods in classes. Sometimes, not often, but sometimes, I'll
define functions within functions, and I feel they deserve documentation
too. So then I modified the code to ensure it walked every part of the AST.&lt;/p&gt;
&lt;p&gt;Since then, when I've run into new things and had new ideas, &lt;code&gt;pydscheck&lt;/code&gt; has
grown and grown. I've added checks that all mentioned parameters have a
type; I've added checks that any function/method that returns something
actually documents the return value; I've added checks that any
documentation of a returned value includes its type; I've added checks that
any function or method that yields a value documents that fact; I've added
checks that ensure that every parameter is documented in some way.&lt;/p&gt;
&lt;p&gt;Each time I've done this it's helped uncover issues in my code's
documentation that could be cleaner, and it's also given me a pet project to
slowly better understand Python's AST.&lt;/p&gt;
&lt;p&gt;It could be that there are better tools out there, I'd have thought that a
good doc-string linting tool would be something someone had already written.
But this time around I was happy to
&lt;a href="https://en.wikipedia.org/wiki/Not_invented_here"&gt;NIH&lt;/a&gt; it because I needed a
fun learning exercise that would also have some benefits for my day-to-day
work.&lt;/p&gt;
&lt;p&gt;I'll caveat this with the fact that it's very particular to how I work and
how I like my documentation to look, but if it sounds useful, here it is:
&lt;a href="https://github.com/davep/pydscheck"&gt;https://github.com/davep/pydscheck&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There's still lots I could do with it. First off I should really properly
package it up so it can be installed as a command line tool via pip. Other
things that would be handy would be to allow some form of customisation of
how it works. I'm sure there's other fun things I can do with it too.&lt;/p&gt;
&lt;p&gt;That's part of the fun of having a pet project: you can tinker when you like
and also get benefits from it as you use it.&lt;/p&gt;</content><category term="misc"></category><category term="Python"></category><category term="documentation"></category></entry><entry><title>gitweb.el -- Quickly visit a repo's forge from Emacs</title><link href="https://blog.davep.org/2019/10/21/gitwebel-quickly-visit-a-repos-forge-from-emacs.html" rel="alternate"></link><published>2019-10-21T10:41:00+01:00</published><updated>2019-10-21T10:41:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2019-10-21:/2019/10/21/gitwebel-quickly-visit-a-repos-forge-from-emacs.html</id><summary type="html">&lt;p&gt;&lt;code&gt;gh.fish&lt;/code&gt;, which &lt;a href="/2019/10/20/fg-fish.html"&gt;I wrote about yesterday&lt;/a&gt;,
actually sprang from something I initially wrote for Emacs. I'm often
spending my time switching between Emacs and the command line (which is fast
and easy -- I normally work on macOS and have Emacs and
&lt;a href="https://www.iterm2.com/"&gt;iTerm2&lt;/a&gt; running full screen, and I can switch …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;gh.fish&lt;/code&gt;, which &lt;a href="/2019/10/20/fg-fish.html"&gt;I wrote about yesterday&lt;/a&gt;,
actually sprang from something I initially wrote for Emacs. I'm often
spending my time switching between Emacs and the command line (which is fast
and easy -- I normally work on macOS and have Emacs and
&lt;a href="https://www.iterm2.com/"&gt;iTerm2&lt;/a&gt; running full screen, and I can switch
between them without ever taking my hands off the keyboard), so it makes
sense to have some handy commands repeated in both places.&lt;/p&gt;
&lt;p&gt;So, originally, I'd written
&lt;a href="https://github.com/davep/gitweb.el"&gt;&lt;code&gt;gitweb.el&lt;/code&gt;&lt;/a&gt; to open the current repo's
"forge" in the web browser.&lt;/p&gt;
&lt;p&gt;As with the fish version, how it works is quite simple. I use
&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Synchronous-Processes.html"&gt;&lt;code&gt;shell-command-to-string&lt;/code&gt;&lt;/a&gt;
to call git and find the origin URL for the current repo, and then
manipulate it a bit to turn it into a normal browser-friendly URL. Finally,
if I get something workable, I use
&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Browse_002dURL.html"&gt;&lt;code&gt;browser-url&lt;/code&gt;&lt;/a&gt;
to have the resulting page open in the browsing environment of choice.&lt;/p&gt;
&lt;p&gt;I have the command &lt;a href="https://github.com/davep/.emacs.d/blob/8f1be3a03e4be98155571939fe5d6fbb54de487f/init.d/packages/init-packages-delpa.el#L51-L54"&gt;bound to a key combination that's similar to the ones I
use with magit and
forge&lt;/a&gt;,
so in terms of muscle-memory it's easy for me to remember what to press when
I quickly want to skip over from a magit view to the repo forge itself.&lt;/p&gt;
&lt;p&gt;Similar to what I wrote &lt;a href="/2019/10/19/pypath-el.html"&gt;a couple of days back&lt;/a&gt;,
I think this again illustrates how handy Emacs is as a work environment.
While it's absolutely true that there are other development environments out
there that offer similar extensibility, Emacs is the one I'm comfortable
with, and it has a &lt;em&gt;long&lt;/em&gt; history of offering this.&lt;/p&gt;</content><category term="misc"></category><category term="Emacs"></category><category term="git"></category></entry><entry><title>gh.fish -- Quickly visit a repo's forge</title><link href="https://blog.davep.org/2019/10/20/ghfish-quickly-visit-a-repos-forge.html" rel="alternate"></link><published>2019-10-20T13:15:00+01:00</published><updated>2019-10-20T13:15:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2019-10-20:/2019/10/20/ghfish-quickly-visit-a-repos-forge.html</id><summary type="html">&lt;p&gt;These days &lt;a href="https://fishshell.com/"&gt;fish&lt;/a&gt; is my shell of choice. I started
out with &lt;a href="https://www.gnu.org/software/bash/"&gt;bash&lt;/a&gt; back in the 1990s, went
through a bit of a
&lt;a href="https://www.zsh.org/"&gt;zsh&lt;/a&gt;/&lt;a href="https://ohmyz.sh/"&gt;oh-my-zsh&lt;/a&gt; phase, but
earlier this year finally settled on fish.&lt;/p&gt;
&lt;p&gt;At some point I might write a post about my fish config, and why fish works …&lt;/p&gt;</summary><content type="html">&lt;p&gt;These days &lt;a href="https://fishshell.com/"&gt;fish&lt;/a&gt; is my shell of choice. I started
out with &lt;a href="https://www.gnu.org/software/bash/"&gt;bash&lt;/a&gt; back in the 1990s, went
through a bit of a
&lt;a href="https://www.zsh.org/"&gt;zsh&lt;/a&gt;/&lt;a href="https://ohmyz.sh/"&gt;oh-my-zsh&lt;/a&gt; phase, but
earlier this year finally settled on fish.&lt;/p&gt;
&lt;p&gt;At some point I might write a post about my fish config, and why fish works
well for me. But that's an idea for another time.&lt;/p&gt;
&lt;p&gt;In this post I thought I'd share a little snippet of code that can come in
handy now and again.&lt;/p&gt;
&lt;p&gt;Sometimes I find myself inside a git repo, in the shell, and I want to get
to the "&lt;a href="https://en.wikipedia.org/wiki/Forge_%28software%29"&gt;forge&lt;/a&gt;" for
that repo. This is most often either on &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;, or in
a &lt;a href="https://about.gitlab.com/install/"&gt;company-local installation of GitLab&lt;/a&gt;.
To get there quickly I wrote
&lt;a href="https://gist.github.com/davep/3bac3b30e45a3560c265150e609219db"&gt;&lt;code&gt;gh.fish&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;##############################################################################&lt;/span&gt;
&lt;span class="cp"&gt;# Attempt go visit the origin hub for the current repo.&lt;/span&gt;

&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gh&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Visit the repo in its origin hub&amp;quot;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;# Check that there is some sort of origin.&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;# If we didn&amp;#39;t get anything...&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;$origin&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="cp"&gt;# ...complain and exit.&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;This doesn&amp;#39;t appear to be a git repo with an origin&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;# Open in the browser.&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git$&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;$origin&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

&lt;span class="n"&gt;end&lt;/span&gt;

&lt;span class="cp"&gt;### gh.fish ends here&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The idea is pretty simple: I see if the repo has an origin of some
description and, if it has, I &lt;a href="https://fishshell.com/docs/current/commands.html#string"&gt;slice and dice
it&lt;/a&gt; into something
that looks like the URL you'd expect to find for a GitHub or GitLab repo.
Finally I use
&lt;a href="https://fishshell.com/docs/current/commands.html#open"&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; to open the
URL in the environment's browser of choice.&lt;/p&gt;</content><category term="misc"></category><category term="fish"></category><category term="git"></category></entry><entry><title>pypath.el -- A little Emacs hack to help with Django</title><link href="https://blog.davep.org/2019/10/19/pypathel-a-little-emacs-hack-to-help-with-django.html" rel="alternate"></link><published>2019-10-19T10:35:00+01:00</published><updated>2019-10-19T10:35:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2019-10-19:/2019/10/19/pypathel-a-little-emacs-hack-to-help-with-django.html</id><summary type="html">&lt;p&gt;One of the things I really like about coding with Emacs is how I can easily
identify a repeated task and turn it into a command in my environment,
saving me a load of work down the line.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/davep/pypath.el"&gt;&lt;code&gt;pypath.el&lt;/code&gt;&lt;/a&gt; is one such example.&lt;/p&gt;
&lt;p&gt;In my day job I write …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the things I really like about coding with Emacs is how I can easily
identify a repeated task and turn it into a command in my environment,
saving me a load of work down the line.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/davep/pypath.el"&gt;&lt;code&gt;pypath.el&lt;/code&gt;&lt;/a&gt; is one such example.&lt;/p&gt;
&lt;p&gt;In my day job I write a lot of Django code. As part of that, I write a good
number of unit tests too. Sometimes I'll write the tests as I'm writing the
code they test, other times I'm writing them afterwards; it all really
depends on where my head's at and how the code is flowing.&lt;/p&gt;
&lt;p&gt;When I'm writing those tests, I often want to test them as I go. Given that
starting up a test session can take a while, and given that running all the
tests in the system can take a while, it's really handy if I can run that
single test I'm working on.&lt;/p&gt;
&lt;p&gt;This is easy enough with Django. In my work environment it's normally
something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pipenv&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;./manage.py&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-v&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;app.test.some.sub.module.TestClass.test_method
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Only... typing out the:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;some&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestClass&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test_method&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;part is a bit of a pain. Sure, once you've typed it the once you can use
your shell of choice (mine being &lt;a href="https://fishshell.com/"&gt;fish&lt;/a&gt; and on
occasion
&lt;a href="https://www.gnu.org/software/emacs/manual/html_mono/eshell.html"&gt;eshell&lt;/a&gt;)
to recall it from history, but typing it out the first time is the annoying
part.&lt;/p&gt;
&lt;p&gt;So this was the point where I took 1/2 hour or so to code up
&lt;a href="https://github.com/davep/pypath.el"&gt;&lt;code&gt;pypath.el&lt;/code&gt;&lt;/a&gt; to solve the problem for
me. It gives me two commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pypath&lt;/code&gt;: which simply places the dotted path of the &lt;a href="http://doc.endlessparentheses.com/Fun/python-info-current-defun.html"&gt;current
  "defun"&lt;/a&gt;,
  within the context of being part of a Django system, into the clipboard
  buffer.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pypath-django-test&lt;/code&gt;: which works similar to the above but places the
  whole Django testing command into the clipboard.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With the above, I can work on a test, hit the latter command above, flip to
my command line, paste and I'm running the test.&lt;/p&gt;
&lt;p&gt;Of course, I'm sure there's plenty of other handy ways to do this. Doubtless
there's work environments where the test can be run right there, in the edit
buffer, without flipping away, and which takes into account the fact that
there's a pipenv-managed virtual environment involved, etc. If there is,
that's great, but I don't think it'd work with how I work.&lt;/p&gt;
&lt;p&gt;And that's one of the things I really love about Emacs, and why it's still
my work environment after almost 25 years of on and off use: with very
little work on my part I can create a couple of commands that work exactly
how I need them to. While it's great to create &lt;a href="https://melpa.org/"&gt;generally-useful code for
Emacs that lots of people benefit from&lt;/a&gt;, sometimes the
real value is that &lt;a href="https://blog.davep.org/delpa/"&gt;you can code up your own particular quirk and just get
on with stuff&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To conclude: this post isn't to show off &lt;code&gt;pypath.el&lt;/code&gt;; really this post is to
sing the praises of Emacs and why it still works so well for me after all
these years.&lt;/p&gt;</content><category term="misc"></category><category term="Emacs"></category><category term="Python"></category><category term="Django"></category><category term="Lisp"></category></entry><entry><title>Time to move on</title><link href="https://blog.davep.org/2019/10/18/time-to-move-on.html" rel="alternate"></link><published>2019-10-18T17:42:00+01:00</published><updated>2019-10-18T17:42:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2019-10-18:/2019/10/18/time-to-move-on.html</id><summary type="html">&lt;p&gt;It's well over a year since I last wrote something on this blog. As
mentioned in the last post (and the one before), it's not for bad reasons or
anything like that. Being in a new job, which actually isn't all that new
now, has kept me busy in all …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's well over a year since I last wrote something on this blog. As
mentioned in the last post (and the one before), it's not for bad reasons or
anything like that. Being in a new job, which actually isn't all that new
now, has kept me busy in all the best ways possible.&lt;/p&gt;
&lt;p&gt;There's been other stuff going on too which has drawn on my attention and
the time and motivation to blog, either random stuff, or more
development-related stuff, just hasn't been there.&lt;/p&gt;
&lt;p&gt;Also... blogging via GitHub, using Jekyll, has lost a lot of its shine. It
sort of makes sense, well, sort of &lt;em&gt;made&lt;/em&gt; sense, but in the end it felt like
more work than it should. Whereas most blogging systems tend to encourage
just diving in and banging on the keyboard, there's just a bit more faff
with the GitHub pages approach.&lt;/p&gt;
&lt;p&gt;So, with that in mind, and with no desire right now to roll my own (which
would be fun, it has to be said), I'm going to &lt;a href="https://blog.davep.dev/"&gt;skip off over to Hashnode's
blogging system&lt;/a&gt;. It seems to have everything I'd
want and I can slap it on a domain of mine.&lt;/p&gt;
&lt;p&gt;Most of my random musings about random things really happen on Twitter, so I
can't imagine I'll be wanting to blog about normal/mundane things. What I
would like to do is write about development-related things from time to
time. So that would seem to fit even better.&lt;/p&gt;
&lt;p&gt;Anyway, enough of all this waffle. If you land here and it looks kind of
quiet, that's because it has been quiet for a while and I'm now going to try
and concentrate elsewhere, with a wish to do some coding-related writing now
and again.&lt;/p&gt;</content><category term="misc"></category><category term="blogging"></category></entry><entry><title>A little speed issue with openpyxl</title><link href="https://blog.davep.org/2018/06/02/a-little-speed-issue-with-openpyxl.html" rel="alternate"></link><published>2018-06-02T13:16:37+01:00</published><updated>2018-06-02T13:16:37+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2018-06-02:/2018/06/02/a-little-speed-issue-with-openpyxl.html</id><summary type="html">&lt;p&gt;It's been very quiet on the blogging front, I'm afraid, mostly for &lt;a href="/2017/12/12/on_to_something_new.html"&gt;the
reasons I wrote about back in December last
year&lt;/a&gt;. In that time I've been really
very busy with work (in a good way, in a &lt;em&gt;very&lt;/em&gt; good way) and there's not a
whole lot of time to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's been very quiet on the blogging front, I'm afraid, mostly for &lt;a href="/2017/12/12/on_to_something_new.html"&gt;the
reasons I wrote about back in December last
year&lt;/a&gt;. In that time I've been really
very busy with work (in a good way, in a &lt;em&gt;very&lt;/em&gt; good way) and there's not a
whole lot of time to be toying with pet projects at home.&lt;/p&gt;
&lt;p&gt;However, finding myself with a spare hour or so, I wanted to write about
something I did run into as part of some development at work, and which I
thought might be worth writing about in case it helps someone else.&lt;/p&gt;
&lt;p&gt;Recently I've needed to write a library of code for loading data from Excel
Workbooks. Given that the vast majority of coding I do at the moment is in
Python, it made sense to make use of
&lt;a href="https://openpyxl.readthedocs.io/"&gt;openpyxl&lt;/a&gt;. The initial prototype code I
wrote worked well and it soon grew into a full-blown library that'll be used
in a couple of work-related projects.&lt;/p&gt;
&lt;p&gt;But one thing kept niggling me... It just wasn't as fast as I'd expected.
The workbooks I'm pulling data from aren't that large, and yet it was taking
a noticeable number of seconds to read in the data, and when I let the code
have a go at a directory full of such workbooks... even the fan on the
machine would ramp up.&lt;/p&gt;
&lt;p&gt;It didn't seem right.&lt;/p&gt;
&lt;p&gt;I did a little bit of profiling and could see that the code was spending
most of its time deep in the guts of some XML-parsing functions. While I
know that an &lt;code&gt;xlsx&lt;/code&gt; file is pretty much an XML document, it seemed odd to me
that it would take so much time and effort to pull the data out from it.&lt;/p&gt;
&lt;p&gt;Given that I had other code to be writing, and given that the
workbook-parsing code was "good enough" for the moment, I moved on for a
short while.&lt;/p&gt;
&lt;p&gt;But, a couple of weeks back, I had a bit of spare time and decided to
revisit it. I did some more searching on openpyxl and speed issues and
almost everything I found said that the common problem was failing to open
the workbook in &lt;code&gt;read_only&lt;/code&gt; mode. That can't have been my problem because
I'd being doing that from the very start.&lt;/p&gt;
&lt;p&gt;Eventually I came across a post somewhere (sorry, I've lost it for now --
I'll try and track it down again) that suggested that openpyxl was very slow
to read from a workbook if you were reading one cell at a time, rather than
using generators. The suggestion being that every time you pull a value form
a cell, it has to parse the whole sheet up to that cell. Generators, on the
other hand, would allow access to all the cells during one parse.&lt;/p&gt;
&lt;p&gt;This seemed a little unlikely to me -- I'd have expected the code to cache
the parsing results or something like that -- but it also would explain what
I was seeing. So I decided to give it a test.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/davep/openpyxl-speed-issue"&gt;&lt;code&gt;openpyxl-speed-issue&lt;/code&gt;&lt;/a&gt; is a
version of the tests I wrote and ran and they absolutely show that there's a
huge difference between cell-by-cell access vs generator access.&lt;/p&gt;
&lt;p&gt;Code like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sheet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_row&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sheet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_column&lt;/span&gt; &lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sheet&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="p"&gt;][&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;is &lt;em&gt;far slower&lt;/em&gt; than something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;wb&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Test Sheet&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here's an example of the difference in time, as seen on my iMac:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;
pipenv&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;./read-using-generators
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.59&lt;span class="w"&gt; &lt;/span&gt;real&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.44&lt;span class="w"&gt; &lt;/span&gt;user&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.04&lt;span class="w"&gt; &lt;/span&gt;sys
pipenv&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;./read-using-peeking
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;.02&lt;span class="w"&gt; &lt;/span&gt;real&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="m"&gt;24&lt;/span&gt;.88&lt;span class="w"&gt; &lt;/span&gt;user&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.10&lt;span class="w"&gt; &lt;/span&gt;sys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you can see, the cell-by-cell approach is about 16 times slower than the
generator approach.&lt;/p&gt;
&lt;p&gt;In most circumstances the generator approach would make most sense anyway,
and in any other situation I probably would have used it and never have
noticed this. However, the nature of the workbooks I need to pull data from
means I need to "peek ahead" to make decisions about what I'm doing, so a
more traditional loop over, with an index, made more sense.&lt;/p&gt;
&lt;p&gt;I can easily "fix" this by using the generator approach to build up a
two-dimensional array of cells, acquired via the generator; so I can still
do what I want &lt;em&gt;and&lt;/em&gt; benefit from using generators.&lt;/p&gt;
&lt;p&gt;In conclusion: given that I found it difficult to find information about my
speed issue, and given that the one off-hand comment I saw that suggested it
was this wasn't exactly easy to find, I thought I'd write it all down too
and &lt;a href="https://github.com/davep/openpyxl-speed-issue"&gt;create a repository of some test code to illustrate the
issue&lt;/a&gt;. Hopefully someone
else will benefit from this in the future.&lt;/p&gt;</content><category term="misc"></category><category term="Python"></category><category term="openpyxl"></category></entry><entry><title>On to something new</title><link href="https://blog.davep.org/2017/12/12/on-to-something-new.html" rel="alternate"></link><published>2017-12-12T13:59:01+00:00</published><updated>2017-12-12T13:59:01+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2017-12-12:/2017/12/12/on-to-something-new.html</id><summary type="html">&lt;p&gt;Today is a fairly significant day for me. For the past 21 (and a bit) years
I've worked for the same company. I know that, for lots of people in my
industry, that's a hell of a long time to be in one position. It was a setup
that served …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today is a fairly significant day for me. For the past 21 (and a bit) years
I've worked for the same company. I know that, for lots of people in my
industry, that's a hell of a long time to be in one position. It was a setup
that served me pretty well; the company was small (I'm not much of a big
company person), I generally got to dictate the development tools and
direction, and I also got to work from home.&lt;/p&gt;
&lt;p&gt;The working from home part was especially helpful as other life events
involved me and happened around me. The job I've been in has seen a marriage
come and go, and a move from Hampshire to Lincolnshire, and then from
Lincolnshire to Midlothian. There's been a few adventures along the way.&lt;/p&gt;
&lt;p&gt;But, three months ago, I got a call to say that I was to be made redundant.
This sucked, obviously. It also appeared pretty stupid on the part of my
employer: a company that is based around software had decided it no longer
wanted an in-house software developer. A bold, and I think unwise, choice.
From this point on they've decided to only go with contract developers and
&lt;em&gt;only&lt;/em&gt; contract developers from overseas (or so the story goes).&lt;/p&gt;
&lt;p&gt;As it goes, things have turned out okay. Today is my last day with my old
employer and, as I'm sat here typing this out while having some lunch, I'm
actually glad that it's coming to a close and that I can get to move on.&lt;/p&gt;
&lt;p&gt;I have a new employer, and will be starting in my new position during the
first week of January. It'll be very different. It'll all be different. Not
only will I be back working in an office (one where jeans and t-shirts are
the norm, thankfully!), I'm also going to be working in an industry (as a
developer still, of course) that I have no background in and no real
knowledge of. It's going to be a seriously exciting challenge.&lt;/p&gt;
&lt;p&gt;&lt;img alt="New book" src="/attachments/2017/12/12/IMG_20171212_140656-01.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Over the next couple of weeks I've got a fair amount of background reading
(and video watching) to be doing. This isn't so much that I can get on with
the job of development (although there will be a good bit of that to do too
-- who doesn't want to be trying to understand new options for
development?), it's more about understanding the language of the industry
I'll be in and so that I can understand the needs of my users.&lt;/p&gt;
&lt;p&gt;Goodbye fashion retail and all related things. Hello genetics and... well, I
don't know, I'm going to find out. :)&lt;/p&gt;</content><category term="misc"></category><category term="programming"></category><category term="work"></category><category term="life"></category></entry><entry><title>More revamping of my Emacs config</title><link href="https://blog.davep.org/2017/07/13/more-revamping-of-my-emacs-config.html" rel="alternate"></link><published>2017-07-13T15:25:29+01:00</published><updated>2017-07-13T15:25:29+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2017-07-13:/2017/07/13/more-revamping-of-my-emacs-config.html</id><summary type="html">&lt;p&gt;I've been pretty quiet on here since I last wrote about how I'd done a
further revamp of my Emacs config, so I thought that subject would be a good
reason to write another blog post.&lt;/p&gt;
&lt;p&gt;It'll be a mostly short one, and one to muse over something that's been …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been pretty quiet on here since I last wrote about how I'd done a
further revamp of my Emacs config, so I thought that subject would be a good
reason to write another blog post.&lt;/p&gt;
&lt;p&gt;It'll be a mostly short one, and one to muse over something that's been
bugging me for a while now: my decision to lean heavily on &lt;code&gt;customize&lt;/code&gt; to
set all sorts of settings.&lt;/p&gt;
&lt;p&gt;Initially,
&lt;a href="/2016/05/26/starting_fresh_with_gnu_emacs.html"&gt;when I nuked my original config over a year ago&lt;/a&gt;,
it seemed to make a lot of sense. Let all the tweaks and set values "hide"
in a file of their own and try and keep the hand-edited config files as
small and as clean as possible. Recently though I've got to thinking that
this obscures too much, hides too much detail, and removes the ability to
actually document what I'm doing and why. It also does make it tricky to
adapt some settings to different platforms or even environments on a single
platform.&lt;/p&gt;
&lt;p&gt;Another problem I've run into is
this:
&lt;a href="/2017/04/01/another_revamp_of_my_emacs_config.html"&gt;when I made the second round of changes&lt;/a&gt; and
decided to lean heavily
on &lt;a href="https://github.com/jwiegley/use-package"&gt;&lt;code&gt;use-package&lt;/code&gt;&lt;/a&gt;, I soon ran into
the minor issue of some packages not making sense, or even being needed, on
some platforms (stuff that's useful on my macOS machines isn't always useful
on my Windows machines, that sort of thing). While &lt;code&gt;use-package&lt;/code&gt; can handle
this easily thanks to the &lt;code&gt;:if&lt;/code&gt; keyword, I'm still left with the fact that
&lt;code&gt;package-selected-packages&lt;/code&gt; still gets populated.&lt;/p&gt;
&lt;p&gt;Having &lt;code&gt;package-selected-packages&lt;/code&gt; contain a list of installed packages
likely makes sense if you're using just the Emacs package system and you're
not doing the installing with &lt;code&gt;use-package&lt;/code&gt; and &lt;code&gt;:ensure&lt;/code&gt;. But with
&lt;code&gt;use-package&lt;/code&gt; and &lt;code&gt;:ensure&lt;/code&gt; I feel like I've got far more control over
things and can adapt what gets installed when depending on which Emacs I'm
running where.&lt;/p&gt;
&lt;p&gt;But, because I'm syncing my &lt;code&gt;~/.emacs.d/.custom.el&lt;/code&gt; to all my machines too, any
&lt;code&gt;use-package&lt;/code&gt; that has a &lt;code&gt;:if&lt;/code&gt; to not bother using a package has little
effect because the package still ends up being listed/loaded/seen as part of
the installation.&lt;/p&gt;
&lt;p&gt;Ideally, I think, I'd like to be able to have &lt;code&gt;package-selected-packages&lt;/code&gt;
held in its own file, or I'd only ever use &lt;code&gt;~/.emacs.d/.custom.el&lt;/code&gt; for local
stuff (and so stop syncing it).&lt;/p&gt;
&lt;p&gt;Starting today I'm going about a process of moving as much as I can out of
&lt;code&gt;~/.emacs.d/.custom.el&lt;/code&gt; and into hand-edited files. In some respects I guess
I am going back to how I used to manage Emacs configuration, but this time
it's not a massive monolithic file-of-Lisp, it's neatly broken down into
sensible sections and it's also biased towards a "grab and config this
package" approach.&lt;/p&gt;
&lt;p&gt;Meanwhile, I've not seen any good discussions online about &lt;code&gt;customize&lt;/code&gt; vs
"hand-edit", which strikes me as a little odd as it feels like the perfect
"religious issue" for people to have endless disagreements over. I guess,
over the next couple or so weeks, I'll find out if switching back was a good
idea.&lt;/p&gt;</content><category term="misc"></category><category term="Emacs"></category><category term="Lisp"></category><category term="programming"></category><category term="Emacs Lisp"></category></entry><entry><title>Another revamp of my emacs config</title><link href="https://blog.davep.org/2017/04/01/another-revamp-of-my-emacs-config.html" rel="alternate"></link><published>2017-04-01T10:02:18+01:00</published><updated>2017-04-01T10:02:18+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2017-04-01:/2017/04/01/another-revamp-of-my-emacs-config.html</id><summary type="html">&lt;p&gt;Just under a year ago I decided to
&lt;a href="/2016/05/26/starting_fresh_with_gnu_emacs.html"&gt;totally rewrite my GNU emacs config&lt;/a&gt;.
As I wrote at the time, it'd been following me around all sorts of machines
since the early 1990s, starting life on an OS/2 Warp machine and travelling
via MS-DOS, GNU/Linux, Windows and, these …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Just under a year ago I decided to
&lt;a href="/2016/05/26/starting_fresh_with_gnu_emacs.html"&gt;totally rewrite my GNU emacs config&lt;/a&gt;.
As I wrote at the time, it'd been following me around all sorts of machines
since the early 1990s, starting life on an OS/2 Warp machine and travelling
via MS-DOS, GNU/Linux, Windows and, these days, macOS.&lt;/p&gt;
&lt;p&gt;The changes I made last year have served me really well, but there were two
related issues with it that bothered me a little: the fact that I was
maintaining a local library of elisp code in the repository and, worse
still, I was storing the packages I'd installed from elpa and melpa in the
repository as well.&lt;/p&gt;
&lt;p&gt;While this did mean it was pretty easy for me to start up a new installation
of emacs on a machine -- all I had to do was clone the repo and run up emacs
-- I wasn't happy with the duplication involved. I didn't like holding code
in my &lt;code&gt;.emacs.d&lt;/code&gt; repo that was already held in package archives.&lt;/p&gt;
&lt;p&gt;The solution I saw was in two parts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Get some of my code, that might be useful to others, into melpa.&lt;/li&gt;
&lt;li&gt;Somehow sort my own package archive for my personal code.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Over the past week or so I've worked on this approach. It initially started
with me tackling item 1 above: I tidied up and
submitted
&lt;a href="https://github.com/davep/obfusurl.el"&gt;&lt;code&gt;obfusurl.el&lt;/code&gt;&lt;/a&gt;,
&lt;a href="https://github.com/davep/protocols.el"&gt;&lt;code&gt;protocols.el&lt;/code&gt;&lt;/a&gt;,
&lt;a href="https://github.com/davep/services.el"&gt;&lt;code&gt;services.el&lt;/code&gt;&lt;/a&gt;,
&lt;a href="https://github.com/davep/thinks.el"&gt;&lt;code&gt;thinks.el&lt;/code&gt;&lt;/a&gt; and
&lt;a href="https://github.com/davep/uptimes.el"&gt;&lt;code&gt;uptimes.el&lt;/code&gt;&lt;/a&gt;. This was a really
helpful process in that it allowed me to brush up on my elisp and emacs
knowledge. It's a good 15+ years since I last wrote any significant elisp
code and things have moved on a little in that time.&lt;/p&gt;
&lt;p&gt;Having done that I'd managed to move a handful of my own packages out of my
local library of code, and so out of my &lt;code&gt;.emacs.d&lt;/code&gt; repo, but it left me with
the problem of what to do with the rest of it.&lt;/p&gt;
&lt;p&gt;That's when I discovered &lt;code&gt;package-x&lt;/code&gt; and:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;----&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;RET&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;an&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;interactive&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;compiled&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Lisp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;single&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Emacs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Lisp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;If&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;does&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;specify&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;valid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prompt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="o"&gt;----&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(plus &lt;code&gt;package-upload-file&lt;/code&gt; too, of course). This meant I could, in effect,
start my own personal package archive and look at tackling issue 2 above.&lt;/p&gt;
&lt;p&gt;This did give me one small problem though: how and where would I host the
archive? I did consider hosting it on a DigitalOcean droplet, but that felt
a little like overkill for something so simple. And then I
realised: &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;! All I needed to do was
keep the package archive in its own repo (which I would have done anyway)
and then make the whole repo the source for a GitHub Pages site. A quick
test later and... it worked!&lt;/p&gt;
&lt;p&gt;So, by this point, I'd farmed some of my code off to melpa, and now had the
rest of it in "delpa" (which I'd called my personal archive). I could now
use the emacs package management system to install third party packages and
also my own.&lt;/p&gt;
&lt;p&gt;But I was still left with one issue: I was still holding the installed
packages inside my &lt;code&gt;.emacs.d&lt;/code&gt; repo by way of ensuring that all machines were
in sync in terms of what was installed. Now I needed to work out how to
solve that.&lt;/p&gt;
&lt;p&gt;Around this time, as luck would have
it, &lt;a href="https://github.com/tarsius"&gt;@tarsius&lt;/a&gt;
had
&lt;a href="https://github.com/davep/boxquote.el/pull/1#issuecomment-288462491"&gt;suggested I look at&lt;/a&gt; a
package called &lt;a href="https://github.com/jwiegley/use-package"&gt;&lt;code&gt;use-package&lt;/code&gt;&lt;/a&gt;
by &lt;a href="https://github.com/jwiegley"&gt;@jwiegley&lt;/a&gt;. This was the bit I was missing.&lt;/p&gt;
&lt;p&gt;With &lt;code&gt;use-package&lt;/code&gt; I would be able to declare which packages I needed, how
they'd be installed and, most important of all, it could be set to handle
the fact that the package wasn't even installed. If a package is requested
and there is no local install &lt;code&gt;use-package&lt;/code&gt; is smart enough to get the emacs
package system to install it.&lt;/p&gt;
&lt;p&gt;So, given that, all I need to do was &lt;a href="https://github.com/davep/.emacs.d/blob/1fa67c2895f345098057654f6acb3b57a77f1194/startup/davep-packages.el"&gt;create a startup file that would
declare the packages I use&lt;/a&gt; and
I'd have a setup that should, once I'd cloned &lt;code&gt;.emacs.d&lt;/code&gt;, self-install.&lt;/p&gt;
&lt;p&gt;Except... yeah, one more issue. &lt;code&gt;use-package&lt;/code&gt; isn't part of GNU emacs yet so
I'd need a method of getting it to auto-install so it could then handle
everything else. As it was that was as easy as adding this to the start of
my &lt;a href="https://github.com/davep/.emacs.d/blob/master/init.el"&gt;&lt;code&gt;init.el&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;&lt;/span&gt;
&lt;span class="c1"&gt;;; Make sure the package system is up and running early on.&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;package&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;package-archives&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;melpa&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://melpa.org/packages/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;package-archives&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;delpa&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://blog.davep.org/delpa/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;package-initialize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;&lt;/span&gt;
&lt;span class="c1"&gt;;; Bootstrap `use-package&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;unless&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;package-installed-p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;use-package&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;package-refresh-contents&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;package-install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;use-package&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With that in place I was able to nuke all my config on a machine, clone a
fresh copy of &lt;code&gt;.emacs.d&lt;/code&gt; (having now ceased tracking and storing the
installed packages in that repo), run up emacs, wait a few moments and then
find that everything was installed and ready to use.&lt;/p&gt;
&lt;p&gt;Perfect!&lt;/p&gt;
&lt;p&gt;My &lt;a href="https://github.com/davep/.emacs.d"&gt;&lt;code&gt;.emacs.d&lt;/code&gt;&lt;/a&gt; is now a lot smaller than
it was before and, I think, even easier to maintain. Right now I think I'm
very close to the ideal emacs config that I wanted to create when I did the
complete rewrite a year ago.&lt;/p&gt;</content><category term="misc"></category><category term="Emacs"></category><category term="Lisp"></category><category term="Emacs Lisp"></category><category term="Programming"></category></entry><entry><title>I want to like Gboard</title><link href="https://blog.davep.org/2017/03/13/i-want-to-like-gboard.html" rel="alternate"></link><published>2017-03-13T08:29:16+00:00</published><updated>2017-03-13T08:29:16+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2017-03-13:/2017/03/13/i-want-to-like-gboard.html</id><summary type="html">&lt;p&gt;I want to like Gboard. On paper it looks really rather good. It's a keyboard
from Google, it ties in with your account, it syncs things, it has clever
searching for emoji and gifs and the like... what's not to like?&lt;/p&gt;
&lt;p&gt;Problem is, I've been a user of SwiftKey since …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I want to like Gboard. On paper it looks really rather good. It's a keyboard
from Google, it ties in with your account, it syncs things, it has clever
searching for emoji and gifs and the like... what's not to like?&lt;/p&gt;
&lt;p&gt;Problem is, I've been a user of SwiftKey since around 2011 (I think it was).
I'm very used to how SwiftKey works and it also contains a lot of handy
things. I like that it has smart completion, that it learns how I type a bit
skewed and that it takes this into account, that I can turn off the fancy
swipe typing and instead make use of handy gestures like swipe-left to
delete a word. I like some of the themes a lot.&lt;/p&gt;
&lt;p&gt;Into the mix comes my iPad, which I use on occasion. The standard Apple
keyboard is horrible and, sadly, I find SwiftKey on iOS just as frustrating.
It seems to lack enough key features there (especially the word deletion
gesture, as far as I can tell) that it's also a bit annoying. My dream of a
consistent typing experience across all devices just wasn't happening --
until I found Gboard on iOS.&lt;/p&gt;
&lt;p&gt;That felt almost right. And from what I could tell it worked almost exactly
the same on iOS and Android. So it felt like a good time to try and force
myself to use Gboard on my Google Pixel and Nexus 7.&lt;/p&gt;
&lt;p&gt;Sadly, though, I'm just not getting on with it. It's okay. It's not bad.
It's just... not good. I'm finding that it lacks enough useful things that
it's a frustrating experience. Little things like: when I enter Google
Search, there's no word completion in the keyboard (SwiftKey has that); the
word deletion gesture (swipe left from the backspace key) seems very
hit-and-miss; the most obvious completion for a word sometimes appears in
the middle slot but, other times, in the left slot. And so on.&lt;/p&gt;
&lt;p&gt;Nothing huge. Nothing that's a show-stopper. But a handful of a little
things that make me miss the comfortable home that is SwiftKey.&lt;/p&gt;
&lt;p&gt;Don't get me wrong, it does have some very handy and cleaver features too.
The searching for emoji -- including showing them up as word completions --
is rather clever. The gif-search thing is all kinds of fun too (mostly used
to annoy the hell out
of &lt;a href="https://twitter.com/VolcanicArts"&gt;my son on twitter&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;None of those quite make up for the bits I miss from SwiftKey though.&lt;/p&gt;
&lt;p&gt;All that said, I've being making a point of pushing on with Gboard, thinking
that most of my issues might just be because I'm too used to my "old home".
Mostly this was working well, until I noticed something this morning. While
reading the description for Gboard I noticed this handy thing in the "Pro
Tips" section:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sync your learned words across devices to improve suggestions (enable in
Gboard Settings→ Dictionary → Sync learned words).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Useful! I'd assumed that this was the case anyway -- it's Google after all
-- but it's good to know I can ensure it's turned on. So I went to turn it
on. This is what I found:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gboard WTF" src="/attachments/2017/03/13/Screenshot_20170313-072359.png"&gt;&lt;/p&gt;
&lt;p&gt;What the hell Google? Sure, I do have a Gsuite account on my phone -- as in
various apps have access to a Gsuite account (Gmail, Drive, etc...) -- but
it's not the primary account on my phone and it's not the account I'd really
want to be doing the dictionary sync with anyway. If I've got dictionary
sync I want it tied to the keyboard no matter the app I'm in, and no matter
the account I'm using in that app. I want the keyboard to be tied to a
specific account when it comes to sync (just like SwiftKey does it).&lt;/p&gt;
&lt;p&gt;This, I think, is a show-stopper for me.&lt;/p&gt;
&lt;p&gt;I can overlook the other niggles, I can learn to cope with it not being
quite so perfect in some situations; but the blanket inability to do
something as simple as cloud-sync the predictions and learn from how I type
-- things that are, these days, central to what Google's about -- it's
frankly stupid.&lt;/p&gt;
&lt;p&gt;I guess I'm going to have to keep Gboard as a backup keyboard for those
times when I need to find the perfect gif.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Google WTF" src="http://i.imgur.com/0mw1I8e.gif"&gt;&lt;/p&gt;</content><category term="misc"></category><category term="Google"></category><category term="Android"></category></entry><entry><title>Google Now Achievements?</title><link href="https://blog.davep.org/2017/03/12/google-now-achievements.html" rel="alternate"></link><published>2017-03-12T12:16:17+00:00</published><updated>2017-03-12T12:16:17+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2017-03-12:/2017/03/12/google-now-achievements.html</id><summary type="html">&lt;p&gt;Over the past couple or so weeks I've been having some issues with Google
Now. It first seemed to start on my Nexus 7, then appeared on my Nexus 6.
More recently, even as of today, I've seen it on
my &lt;a href="/2017/03/08/hello_google_pixel.html"&gt;Google Pixel&lt;/a&gt;. The problem is that,
in the Google …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Over the past couple or so weeks I've been having some issues with Google
Now. It first seemed to start on my Nexus 7, then appeared on my Nexus 6.
More recently, even as of today, I've seen it on
my &lt;a href="/2017/03/08/hello_google_pixel.html"&gt;Google Pixel&lt;/a&gt;. The problem is that,
in the Google Now launcher (or on the Pixel, in the Pixel launcher), the
Google Now page (that you swipe to the left for) sits empty for ages. All I
see is the little animated waiting circle and nothing else. Once or twice
I've had the Google app die and restart or, more often than not, after quite
some time it finally loads up.&lt;/p&gt;
&lt;p&gt;The latter happened a little earlier and I noticed something I'd not seen
before:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Blank Google Now" src="/attachments/2017/03/12/Screenshot_20170312-115910.jpg"&gt;&lt;/p&gt;
&lt;p&gt;What's with that "Achievements" menu option? You'll notice that the whole of
the menu is blank -- no profile picture or anything and none of the menu
options seemed to work.&lt;/p&gt;
&lt;p&gt;Eventually, after I'd left it for a while, it ended up working.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Google Now finally working" src="/attachments/2017/03/12/Screenshot_20170312-120052.jpg"&gt;&lt;/p&gt;
&lt;p&gt;And, once this happened, no "Achievements" option.&lt;/p&gt;
&lt;p&gt;Presumably this is some back-end server issue, I'm being served up something
I'm not supposed to be seeing and it's confusing the client app. Okay, I
don't &lt;em&gt;know&lt;/em&gt; that's the case, but it has that sort of feel.&lt;/p&gt;
&lt;p&gt;So now I need to go looking for what this Achievements thing is all about.&lt;/p&gt;
&lt;p&gt;Using Google, obviously.&lt;/p&gt;</content><category term="misc"></category><category term="Google"></category></entry><entry><title>jsNG</title><link href="https://blog.davep.org/2017/03/10/jsng.html" rel="alternate"></link><published>2017-03-10T10:14:47+00:00</published><updated>2017-03-10T10:14:47+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2017-03-10:/2017/03/10/jsng.html</id><summary type="html">&lt;p&gt;Like many programmers, I have a couple of "Hello, World" projects that I've
carried with me over the years. One is 5x5 (which has been used to get to
grips with things as diverse as the Palm Pilot and GNU emacs). Another
is &lt;a href="https://en.wikipedia.org/wiki/Norton_Guides"&gt;Norton Guides database&lt;/a&gt;
&lt;a href="http://www.davep.org/norton-guides/"&gt;readers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've made Norton …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Like many programmers, I have a couple of "Hello, World" projects that I've
carried with me over the years. One is 5x5 (which has been used to get to
grips with things as diverse as the Palm Pilot and GNU emacs). Another
is &lt;a href="https://en.wikipedia.org/wiki/Norton_Guides"&gt;Norton Guides database&lt;/a&gt;
&lt;a href="http://www.davep.org/norton-guides/"&gt;readers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've made Norton Guides tools that have allowed web servers to serve guides
(&lt;code&gt;w3ng&lt;/code&gt;), that have allowed you to convert guides to HTML (&lt;code&gt;ng2html&lt;/code&gt;), that
have let you read guides on OS/2 and GNU/Linux (&lt;code&gt;eg&lt;/code&gt;) and also have let you
read guides in Microsoft Windows (&lt;code&gt;weg&lt;/code&gt;). It's a problem I know fairly well
and one where I know the solution well enough so I can concentrate on
learning the new language or environment.&lt;/p&gt;
&lt;p&gt;Recently I wanted to get to grips with some
"pure" &lt;a href="http://es6-features.org/#Constants"&gt;ES6&lt;/a&gt; coding while also getting
to know &lt;a href="https://nodejs.org/en/"&gt;node.js&lt;/a&gt;. A new version of the Norton Guide
code, written for this environment, seemed like a good thing to do.&lt;/p&gt;
&lt;p&gt;And so &lt;a href="https://github.com/davep/jsNG"&gt;jsNG&lt;/a&gt; was born.&lt;/p&gt;
&lt;p&gt;At its core is &lt;a href="https://github.com/davep/jsNG/tree/master/lib"&gt;a library of code for opening and reading data from Norton
Guides databases&lt;/a&gt;. While I
doubt it's good ES6 code, or even good node.js code, it's been very useful
in giving me a fun problem to solve and it'll carry on being something I'll
tweak and tinker with by way of trying new things out.&lt;/p&gt;
&lt;p&gt;On top of this I've built a handful of tools for working with Norton Guides
databases. The most useful one at the moment (the others are more in the
"test the library" than the "make something handy with the library"
category) is &lt;code&gt;ngserve&lt;/code&gt;. This is designed as a simple Norton Guides database
HTTP server.&lt;/p&gt;
&lt;p&gt;&lt;img alt="ngserve in action" src="/attachments/2017/03/10/Screen Shot 2017-03-10 at 10.10.18.png"&gt;&lt;/p&gt;
&lt;p&gt;When run, you give it a list of guides to serve:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Starting ngserve" src="/attachments/2017/03/10/Screen Shot 2017-03-10 at 10.26.44.png"&gt;&lt;/p&gt;
&lt;p&gt;and it does the right thing. It has a small number of command line options
that help configure what it does:&lt;/p&gt;
&lt;p&gt;&lt;img alt="ngserve command line options" src="/attachments/2017/03/10/Screen Shot 2017-03-10 at 10.29.28.png"&gt;&lt;/p&gt;
&lt;p&gt;Possibly the most useful are the ones that let you change how it handles
"higher" DOS characters and, if you don't like the default colours and
stuff, the option that lets you point to your own style sheet (note for now
you'll need to host the stylesheet somewhere else -- ngserve won't serve it
for you; I'm aiming to change that in some way in the near future).&lt;/p&gt;
&lt;p&gt;jsNG does have a fairly basic design compromise at its heart. In the very
early version I started out using the async functions for opening and
reading the guides. This got very tedious very quickly and I could see that
it was going to make for a very messy library with a very messy interface.
While it might not be in the spirit of node.js programming I decided to go
with the sync version of the file IO functions and code up the core library
based around this.&lt;/p&gt;
&lt;p&gt;This approach also means that I took another leap that I never have done
with Norton Guides before: rather than doing the traditional thing of
keeping an open handle into them and reading direct from the file as you
navigate the guide, I simply read it all into a buffer in one go and keep it
in memory. This is a "guides are small, memory is cheap, things will go
faster" approach.&lt;/p&gt;
&lt;p&gt;It does mean that when you load up a load of guides into &lt;code&gt;ngserve&lt;/code&gt; they're
all sat in memory. The upside of this is that things should be a lot faster
and the code is a lot easier to follow (I think). To put this in some
perspective: I have a directory here that contains 110 Norton Guides files.
They total 36M in size. If that seems like a lot of stuff to hold in
memory... remind me how much is being used by your web browser so you can
look at some hilarious kittens. ;)&lt;/p&gt;
&lt;p&gt;Anyway, that's where I'm at with it right now. The code is mostly settled
and mostly tidy. I need to write up some documentation for it (and so I need
to take a look at good JavaScript documentation tools) and perhaps tinker
with &lt;code&gt;ngserve&lt;/code&gt; a little more. I'd also like to do a new version of &lt;code&gt;ng2html&lt;/code&gt;
with this -- a version that makes it &lt;em&gt;far&lt;/em&gt; easier to control the style of
the output. I'm also tempted to do a CLI-based reader in pure ES6; something
similar to &lt;code&gt;EG&lt;/code&gt; or &lt;code&gt;WEG&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;All in good time.&lt;/p&gt;</content><category term="misc"></category><category term="Norton Guide"></category><category term="Development"></category><category term="JavaScript"></category></entry><entry><title>Hello Google Pixel</title><link href="https://blog.davep.org/2017/03/08/hello-google-pixel.html" rel="alternate"></link><published>2017-03-08T12:22:05+00:00</published><updated>2017-03-08T12:22:05+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2017-03-08:/2017/03/08/hello-google-pixel.html</id><summary type="html">&lt;p&gt;For the past two years I've, mostly, being happily using a Google Nexus 6 as
my phone. In the past six months or so I've started to notice that it hasn't
been quite as good as it was. The main problem, for me, was that the camera
was starting to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For the past two years I've, mostly, being happily using a Google Nexus 6 as
my phone. In the past six months or so I've started to notice that it hasn't
been quite as good as it was. The main problem, for me, was that the camera
was starting to play out. The issues were the ones that I've seen reported
elsewhere: use of the camera would quickly make the phone laggy, very slow
response times on pressing the shutter, occasional failure to save an image,
etc. This was generally frustrating and, even more so, because &lt;a href="/2016/11/15/seen_by_davep_(the_return).html"&gt;I'd got back
into photoblogging&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Meanwhile... I've been lusting over the Google Pixel ever since it was
originally shown off. I was some way off my phone contract renewal and the
price of a new Pixel was something I just couldn't justify. Last week though
an offer cropped up that meant I could renew early &lt;em&gt;and&lt;/em&gt; get a Pixel
(including a free Daydream headset thrown in).&lt;/p&gt;
&lt;p&gt;Fast forward to Monday just gone and...&lt;/p&gt;
&lt;p&gt;&lt;img alt="My new Pixel" src="/attachments/2017/03/08/IMG_20170308_120458.jpg"&gt;&lt;/p&gt;
&lt;p&gt;So far I'm liking it rather a lot. It is odd that it's smaller in my hand
than the Nexus 6 was (the XL wasn't an available option &lt;em&gt;and&lt;/em&gt; I was also
starting to think it was time to drop down in size a little again) but I'm
also finding it a little easier to work with; it's also nice that it fits in
trouser pockets as well as jacket pockets.&lt;/p&gt;
&lt;p&gt;It feels very fast (although every Android phone and tablet I've ever had
have felt fast to start with) and smooth to use. I especially like the
default feedback vibration -- it's a lot smoother yet also more reassuring
than any I've felt before.&lt;/p&gt;
&lt;p&gt;The Google Assistant is proving to be very handy. I'm sort of used to it
anyway thanks to having owned an Android Wear watch for a couple of years
but having it on the phone like this seems like a natural next step.&lt;/p&gt;
&lt;p&gt;Another thing I'm getting very used to very quickly, and really liking a
lot, is fingerprint recognition. I didn't think I needed it but now I'm
wondering how I ever managed without it. Combined with the notification
pull-down gesture that the recognition area supports it seems like a perfect
way to open the get going with a phone.&lt;/p&gt;
&lt;p&gt;There's a couple of niggles with it, of course. The main one for me is the
lack of wireless charging. That was something I really liked about the Nexus
6: I could be sat at my desk and have the phone sat on top of a charging
pad, staying topped up. No such handy setup with the Pixel. The other thing
is the lack of water resistance. To be fair: it's not something I've ever
really felt I &lt;em&gt;needed&lt;/em&gt; with other phones and I'm not in the habit of
sticking them under water; but knowing that it doesn't matter too much if it
gets exposed to rain would be nice.&lt;/p&gt;
&lt;p&gt;Other than that... there's not much else to say right now. It works and
works well, the move from the N6 to it was pretty smooth and the Pixel has
fallen perfectly into my normal routine.&lt;/p&gt;</content><category term="misc"></category><category term="Google"></category><category term="Android"></category><category term="Phone"></category></entry><entry><title>Seen by davep (the return)</title><link href="https://blog.davep.org/2016/11/15/seen-by-davep-the-return.html" rel="alternate"></link><published>2016-11-15T15:52:15+00:00</published><updated>2016-11-15T15:52:15+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-11-15:/2016/11/15/seen-by-davep-the-return.html</id><summary type="html">&lt;p&gt;A few years back, not long after I got my first smartphone (a HTC Magic), I
started maintaining a photoblog that was based around photos I took on that
phone. The blog itself was very important to me as it covered a pretty
difficult time in my life -- many of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few years back, not long after I got my first smartphone (a HTC Magic), I
started maintaining a photoblog that was based around photos I took on that
phone. The blog itself was very important to me as it covered a pretty
difficult time in my life -- many of the images on it contained and conveyed
feelings and emotions that seem a world away now, but which I never want to
totally forget.&lt;/p&gt;
&lt;p&gt;It served as a visual diary, a note to future me.&lt;/p&gt;
&lt;p&gt;And, hopefully, it provided some entertainment for those who viewed it.&lt;/p&gt;
&lt;p&gt;Sadly the company who hosted
it
&lt;a href="https://en.wikipedia.org/wiki/Posterous#Shutting_down_Posterous_and_building_PostHaven"&gt;closed down&lt;/a&gt; and
the whole thing was lost, except for a hasty (and only partially successful)
backup to &lt;a href="https://seenbydavep.wordpress.com/"&gt;a Wordpress blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After the blog died I sort of lost interest in trying to maintain one and,
to some degree, lost interest in active photography in general. Between the
blog disappearing and another disappointing event relating to photography I
sort of lost confidence in myself and my ability to dare to publish photos
online.&lt;/p&gt;
&lt;p&gt;This year, despite how shitty it's been for the world in general, has been a
really good one for me. Lots of positive changes have happened and continue
to happen and I noticed that I was starting to do the phone-based photoblog
thing
again, &lt;a href="https://twitter.com/davepdotorg/media"&gt;albeit only via twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="From up the hill" src="/attachments/2016/11/15/FromUpTheHill.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Finally, this week, I've cracked and decided to make it "official". My old
"Seen by davep" blog is reborn, with new content and the same old purpose.
You can find it here: &lt;a href="http://seenbydavep.blogspot.com/"&gt;&lt;strong&gt;seenbydavep.blogspot.com&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The blog itself is still driven by twitter and the posts will still appear
on twitter. In the background I have an &lt;a href="https://ifttt.com/"&gt;IFTTT&lt;/a&gt; process
running, watching for any tweet of mine with the #photoblog tag and creating
a post on the blog from it.&lt;/p&gt;
&lt;p&gt;As for how often and what the content will be... simple: it'll be when I see
something that I need to capture.&lt;/p&gt;</content><category term="misc"></category><category term="blog"></category><category term="photography"></category></entry><entry><title>A bit of a backlog at the Apple store</title><link href="https://blog.davep.org/2016/11/03/a-bit-of-a-backlog-at-the-apple-store.html" rel="alternate"></link><published>2016-11-03T13:45:35+00:00</published><updated>2016-11-03T13:45:35+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-11-03:/2016/11/03/a-bit-of-a-backlog-at-the-apple-store.html</id><summary type="html">&lt;p&gt;Over the past couple or so
weeks &lt;a href="/2016/04/28/i-now-own-a-macbook.html"&gt;my Macbook air&lt;/a&gt; has started to
develop a minor, but irritating, hardware problem. Simply put, the left
shift key fails now and again. I can press it and it does nothing. It's
irritating because it messes with the flow of typing (especially when …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Over the past couple or so
weeks &lt;a href="/2016/04/28/i-now-own-a-macbook.html"&gt;my Macbook air&lt;/a&gt; has started to
develop a minor, but irritating, hardware problem. Simply put, the left
shift key fails now and again. I can press it and it does nothing. It's
irritating because it messes with the flow of typing (especially when
writing code) and the key also feels like it's sticking or clicking in a way
that's different from all the other keys.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Macbook Keyboard" src="/attachments/2016/11/03/MacbookKB.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Given that I pass through Edinburgh on a pretty regular basis I thought I'd
drop in and have a quick chat with someone about it. While I didn't expect a
fix there and then (although finding out it was a trivial issue would have
been nice) I was hoping someone could take a quick look and let me know what
might be going on.&lt;/p&gt;
&lt;p&gt;So, this morning, on the way to Waverley Station, I dropped in to the Apple
store on Princes Street.&lt;/p&gt;
&lt;p&gt;I walked in and looked for a member of staff, all seemed to be busy to start
with but one soon noticed that I looked a little lost and asked me if they
could help. I explained the issue and she said I needed to pop upstairs to
chat with the staff up there.&lt;/p&gt;
&lt;p&gt;So far so good.&lt;/p&gt;
&lt;p&gt;So, I headed up to the first floor and caught the attention of another
member of staff. Having explained the exact same thing to them I was told I
needed to speak with yet another staff member. The chap I needed to speak to
had a queue (yes, a physical queue of people) waiting to speak to him.&lt;/p&gt;
&lt;p&gt;I joined the queue.&lt;/p&gt;
&lt;p&gt;About five minutes later I got to speak with him. I, again, explained the
problem and was told that looking at it would be no problem and they could
do so at around 4pm. This was at about 10am. Having gone through 3 people
and spent 10 minutes doing so I found out that there was a six hour queue to
have someone actually take a quick look at the issue.&lt;/p&gt;
&lt;p&gt;By that time I wouldn't even be in the same country, let alone the same
city. So I had to say thanks but no thanks.&lt;/p&gt;
&lt;p&gt;So now it looks like I have to make an appointment for some point in the
future and make a special trip into Edinburgh just so someone can check out
a sticky key on my Macbook.&lt;/p&gt;
&lt;p&gt;Remind me again how the nice thing with Apple gear is that it "just
works"...&lt;/p&gt;</content><category term="misc"></category><category term="Apple"></category><category term="iMac"></category><category term="OS X"></category></entry><entry><title>Virgin East Coast 21</title><link href="https://blog.davep.org/2016/11/03/virgin-east-coast-21.html" rel="alternate"></link><published>2016-11-03T13:00:25+00:00</published><updated>2016-11-03T13:00:25+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-11-03:/2016/11/03/virgin-east-coast-21.html</id><summary type="html">&lt;p&gt;Yesterday I got the call about the Virgin East Coast Ticket Wallet app that
I was &lt;a href="/2016/10/29/virgin_east_coast_20.html"&gt;promised last week&lt;/a&gt; (well,
actually, promised a couple of months back). It didn't go well.&lt;/p&gt;
&lt;p&gt;Well, I say "didn't go well", the conversation itself went very well, the
chap I spoke to was polite …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Yesterday I got the call about the Virgin East Coast Ticket Wallet app that
I was &lt;a href="/2016/10/29/virgin_east_coast_20.html"&gt;promised last week&lt;/a&gt; (well,
actually, promised a couple of months back). It didn't go well.&lt;/p&gt;
&lt;p&gt;Well, I say "didn't go well", the conversation itself went very well, the
chap I spoke to was polite and apologetic and helpful, but the outcome
wasn't really very brilliant.&lt;/p&gt;
&lt;p&gt;It didn't get off to a brilliant start when I was first told that the
solution to my problem was that I needed to uninstall and then reinstall the
app (something I've done more than once while trying to get to the bottom of
the problem). I asked if that was really necessary and I was informed that
it was the only way to fix the problem of the tickets not showing. Problem
is... that wasn't my problem. So I then had to explain the exact nature of
the fault I was experiencing (and also explained my guess as to what the
cause of the problem was).&lt;/p&gt;
&lt;p&gt;After that, much of the content of the conversation involved vaguely
confidential information (nothing too terrible or that big a secret -- just
stuff that isn't generally known yet) which I'm not going to repeat here.
The upshot of the chat though is this: they can't do anything for me.&lt;/p&gt;
&lt;p&gt;Simply put: they acknowledge there's a problem with the app, the problem is
at their end, it's a problem that needs to be fixed and there's nothing they
can do to fix it any time soon.&lt;/p&gt;
&lt;p&gt;The causes of this will sound familiar to anyone with experience of large
companies who outsource much of their development and get involved in areas
that they might not have much experience with.&lt;/p&gt;
&lt;p&gt;I also found out the cause of &lt;em&gt;some&lt;/em&gt; of the delay in actually getting back
to me: the person who was supposed to originally call me went on maternity
leave just after they'd first tried to call and, it seems, nobody thought to
pick up their workload. This left me in the bizarre position of trying to
call someone who was off work for an extended period of time, and whose
phone wasn't being answered in any way.&lt;/p&gt;
&lt;p&gt;Of course, it doesn't explain why that person's boss, who I was promised a
call from a short while after, never bothered to call.&lt;/p&gt;
&lt;p&gt;So, I think, to some degree, that's the end of this silly saga. Their
software is buggy, they can't fix it any time soon, and I'm out of luck.&lt;/p&gt;
&lt;p&gt;As for the extra free tickets I was promised a couple of weeks back now...
they've still not appeared. Time for me to chase that up &lt;em&gt;again&lt;/em&gt;.&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Evernote's confusing menu</title><link href="https://blog.davep.org/2016/10/31/evernotes-confusing-menu.html" rel="alternate"></link><published>2016-10-31T11:38:41+00:00</published><updated>2016-10-31T11:38:41+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-10-31:/2016/10/31/evernotes-confusing-menu.html</id><summary type="html">&lt;p&gt;The other day I stumbled on a tip about Evernote. It
was
&lt;a href="https://blog.evernote.com/blog/2016/10/28/one-student-made-productivity-habit/"&gt;a snippet of information in a bigger post on the Evernote blog&lt;/a&gt;
so I saved it to Evernote (obviously) to take a look at later.&lt;/p&gt;
&lt;p&gt;The tip was that Ctrl-Cmd-B in Evernote (on the Mac) will format a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The other day I stumbled on a tip about Evernote. It
was
&lt;a href="https://blog.evernote.com/blog/2016/10/28/one-student-made-productivity-habit/"&gt;a snippet of information in a bigger post on the Evernote blog&lt;/a&gt;
so I saved it to Evernote (obviously) to take a look at later.&lt;/p&gt;
&lt;p&gt;The tip was that Ctrl-Cmd-B in Evernote (on the Mac) will format a body of
text as source code. While I'm not in the habit of using Evernote to store
code, not even snippets of code (that's something far better served
by &lt;a href="https://gist.github.com/"&gt;Gist&lt;/a&gt;), it seemed like something worth
committing to memory.&lt;/p&gt;
&lt;p&gt;This morning, while finally in front of a suitable machine, I took a look.
Sure enough, there's the menu option.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Code formatting menu option" src="/attachments/2016/10/31/Screen Shot 2016-10-31 at 11.36.42.png"&gt;&lt;/p&gt;
&lt;p&gt;Handy! So I created a test note with some code in it so that I could see how
it formatted it. I was curious to see if it just did simple fixed text or if
it offered options to highlight various languages (I didn't hold out much
hope for the latter, but it was worth a look).&lt;/p&gt;
&lt;p&gt;That's when it got odd.&lt;/p&gt;
&lt;p&gt;After I created a note and went to format some code, the menu option
disappeared!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Lack of code formatting menu option" src="/attachments/2016/10/31/Screen Shot 2016-10-31 at 11.37.07.png"&gt;&lt;/p&gt;
&lt;p&gt;From what I can tell, once it's gone, there's no way to get it back. At
least, not until you actually close down Evernote and start it up again.&lt;/p&gt;
&lt;p&gt;Frustratingly, none of this is the case in the Windows version. While the
key combination is different there, the menu option is available and stays
available.&lt;/p&gt;
&lt;p&gt;The version of Evernote I have (on my iMac and my Macbook) is 6.9.2. The
version number on Windows is 6.4.2 (after checking for updates -- I'm going
to guess that the Mac and Windows version numbers don't match on purpose).&lt;/p&gt;
&lt;p&gt;Goodness knows what's going on here. All I can imagine is that it has
something to do
with
&lt;a href="https://discussion.evernote.com/topic/97731-code-block-in-evernote-for-mac/"&gt;a thread I found on Evernote's support forum&lt;/a&gt; that
suggests that code block formatting is some sort of test/beta feature and
can only be enabled via a settings option that &lt;em&gt;isn't&lt;/em&gt; available via the
version downloaded from the Apple App Store.&lt;/p&gt;
&lt;p&gt;So, at some point, I guess I'm going to have to uninstall Evernote from the
Macbook and the iMac, reinstall from the Evernote website itself, and try
this again. All of which seems a bit silly when &lt;em&gt;the menu option is there
and visible when I run Evernote up!&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Edit to add:&lt;/strong&gt; Sure enough, removing the App Store version and installing
the version from Evernote's own website, and &lt;em&gt;then&lt;/em&gt; going into preferences
and enabling the option, sorted it. It's still really odd they'd promote the
facility via the blog and not mention it, and also very odd that the option
would always show until the first time you're in a position to use it, and
then it'd disappear.&lt;/p&gt;</content><category term="misc"></category><category term="Evernote"></category><category term="Programming"></category></entry><entry><title>Virgin East Coast 20</title><link href="https://blog.davep.org/2016/10/29/virgin-east-coast-20.html" rel="alternate"></link><published>2016-10-29T16:53:00+01:00</published><updated>2016-10-29T16:53:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-10-29:/2016/10/29/virgin-east-coast-20.html</id><summary type="html">&lt;p&gt;After my &lt;a href="/2016/10/27/virgin_east_coast_19.html"&gt;last post&lt;/a&gt; I sent off an
email to chase up what was happening with the promised phone calls about the
Ticket Wallet app and the general delays with getting things sorted. Here's
what I wrote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi again Mike.&lt;/p&gt;
&lt;p&gt;It's now a week since you replied and, I think …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;After my &lt;a href="/2016/10/27/virgin_east_coast_19.html"&gt;last post&lt;/a&gt; I sent off an
email to chase up what was happening with the promised phone calls about the
Ticket Wallet app and the general delays with getting things sorted. Here's
what I wrote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi again Mike.&lt;/p&gt;
&lt;p&gt;It's now a week since you replied and, I think it's fair to note, it's no
longer "early" this week. I've had no call -- neither form yourself nor
from anyone related to the Ticket Wall App -- and I've not received the
promised tickets either. While I do try to be patient I have to admit that
it's starting to get very frustrating, being made lots of promises about
progress that simply never happen. This has been going on for months now
and I'm always having to chase things up.&lt;/p&gt;
&lt;p&gt;I'd very much appreciate it if you could explain to me what's going on,
and why.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A while later I got a reply. He said he'd be getting the tickets in the post
the following day (so a Friday, which I think I can safely say isn't the
start of the week) and would also phone me.&lt;/p&gt;
&lt;p&gt;The following day he did keep his promise. He called (I managed to miss him
the first time, but when I was finally free I called back and we got to
chat). He promised I'd get some more tickets early next week and also that
someone with technical knowledge would finally call about the app problem.&lt;/p&gt;
&lt;p&gt;I have, of course, been here before. This is exactly the promise that was
made a couple of months ago. It's easy to make the promise, apparently not
so easy to deliver on it (or address the issue of not delivering on it).&lt;/p&gt;
&lt;p&gt;So now I wait. Again. I'll be sure to update when something happens (or
doesn't).&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 19</title><link href="https://blog.davep.org/2016/10/27/virgin-east-coast-19.html" rel="alternate"></link><published>2016-10-27T11:21:19+01:00</published><updated>2016-10-27T11:21:19+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-10-27:/2016/10/27/virgin-east-coast-19.html</id><summary type="html">&lt;p&gt;I think I need to rethink the meaning of the word "certainly". Anyone still
bothering to read this blog will recall
that, &lt;a href="/2016/10/24/virgin_east_coast_18.html"&gt;last week&lt;/a&gt;, the Customer
Relations Manager at Virgin East Coast said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you can leave this with me I will certainly be in contact early next
week to …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;I think I need to rethink the meaning of the word "certainly". Anyone still
bothering to read this blog will recall
that, &lt;a href="/2016/10/24/virgin_east_coast_18.html"&gt;last week&lt;/a&gt;, the Customer
Relations Manager at Virgin East Coast said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you can leave this with me I will certainly be in contact early next
week to try and get this resolved once and for all. In the meantime I will
pop a further couple of tickets in the post for you, just so you have them
incase you need to travel urgently.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That email was received last Thursday evening. It's now the following
Thursday. Personally I'd take "certainly", in the above, to mean that
there's little to no chance that I won't be contacted in the early part of
this week, and that there's little to no chance that the tickets won't
arrive in the early part of this week.&lt;/p&gt;
&lt;p&gt;I'd have thought that "certainly" would be used to create a huge contrast
between what has gone on before, and what will follow.&lt;/p&gt;
&lt;p&gt;But, like I say, it's Thursday the following week and I've had no call from
anyone about the Ticket Wallet app, I've had no call or email from Mike (the
Customer Relations Manager) and the tickets haven't tumbled through the
door.&lt;/p&gt;
&lt;p&gt;I'm not surprised. I'm not in the least bit surprised. I am, however, rather
disappointed.&lt;/p&gt;
&lt;p&gt;And, of course, I'm now going to have to chase things up &lt;em&gt;again&lt;/em&gt;.&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 18</title><link href="https://blog.davep.org/2016/10/24/virgin-east-coast-18.html" rel="alternate"></link><published>2016-10-24T11:29:09+01:00</published><updated>2016-10-24T11:29:09+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-10-24:/2016/10/24/virgin-east-coast-18.html</id><summary type="html">&lt;p&gt;Late on last week some progress was made &lt;a href="/2016/10/19/virgin_east_coast_17.html"&gt;with the issue of no longer being
able to contact Mike at Virgin East Coast&lt;/a&gt;.
After chasing up via twitter (mentioning the MD as well as the normal
support account) I finally got a reply from the support account, saying
they'd get …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Late on last week some progress was made &lt;a href="/2016/10/19/virgin_east_coast_17.html"&gt;with the issue of no longer being
able to contact Mike at Virgin East Coast&lt;/a&gt;.
After chasing up via twitter (mentioning the MD as well as the normal
support account) I finally got a reply from the support account, saying
they'd get a message to Mike and let him know what was going on.&lt;/p&gt;
&lt;p&gt;I wasn't really very hopeful about it, if I'm honest. If I couldn't get a
reply from him via the channels I'd normally used what hope was there that
I'd get a reply this way?&lt;/p&gt;
&lt;p&gt;The following day was mostly spent traveling but my phone was on and always
to hand. I never received any call. However, late in the day I did get an
email! This was the first direct contact, that replied to an attempt to
contact him on the current issue, I'd had from the Customer Relations
Manager since the previous month.&lt;/p&gt;
&lt;p&gt;Here's what he said (quoted in full):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My sincere apologies for the silence, I have been away and it was remiss
of my not to advise my regular contacts, of my colleagues details.&lt;/p&gt;
&lt;p&gt;If you can leave this with me I will certainly be in contact early next
week to try and get this resolved once and for all. In the meantime I will
pop a further couple of tickets in the post for you, just so you have them
incase you need to travel urgently.&lt;/p&gt;
&lt;p&gt;My apologies again David, and I look forward to chatting early next week.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I am, of course, a little skeptical of this at the moment. A few times
before I've been told they'll be in contact "early next week", or something
similar, and nothing has happened. It'll be interesting to see if this will
be different.&lt;/p&gt;
&lt;p&gt;Will I get an update? Will I finally get a call about the Ticket Wallet app?
Will the extra tickets turn up?&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 17</title><link href="https://blog.davep.org/2016/10/19/virgin-east-coast-17.html" rel="alternate"></link><published>2016-10-19T11:28:25+01:00</published><updated>2016-10-19T11:28:25+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-10-19:/2016/10/19/virgin-east-coast-17.html</id><summary type="html">&lt;p&gt;The Virgin East Coast Trains saga gets more and more odd. Following on from
&lt;a href="/2016/10/18/virgin_east_coast_16.html"&gt;yesterday's update&lt;/a&gt; I thought I'd
give Mike an actual call. As in, a call on the phone.&lt;/p&gt;
&lt;p&gt;I don't generally like calling people. I'm one of those people who gets a
little anxious about using the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The Virgin East Coast Trains saga gets more and more odd. Following on from
&lt;a href="/2016/10/18/virgin_east_coast_16.html"&gt;yesterday's update&lt;/a&gt; I thought I'd
give Mike an actual call. As in, a call on the phone.&lt;/p&gt;
&lt;p&gt;I don't generally like calling people. I'm one of those people who gets a
little anxious about using the phone and much prefer email. I'll use a phone
as a last resort and, given how long this was going on for, I thought it
time to break my normal "no phone" rule and pick mine up and call to find
out what the hell is going on.&lt;/p&gt;
&lt;p&gt;Turns out the number is no longer available!&lt;/p&gt;
&lt;p&gt;The last email I have that was sent from Mike was on September 25th. The
number I used was the one in the footer of that email. It doesn't work.
There's also a land line given. Calling that gives the same result.&lt;/p&gt;
&lt;p&gt;As of now, if I try and call the customer relations manager for Virgin East
Coast Trains, someone who I was referred to
by &lt;a href="https://twitter.com/DavidHorne"&gt;David Horne&lt;/a&gt; (the MD), I get a message
that the phone isn't available.&lt;/p&gt;
&lt;p&gt;I...&lt;/p&gt;
&lt;p&gt;Erm...&lt;/p&gt;
&lt;p&gt;What?!?&lt;/p&gt;
&lt;p&gt;So, given that, I thought I'd drop David a direct message on twitter. We'd
spoken that way back on August 9th when he requested my contact details.
Nope. Can't send him a DM any more. Guess I got unfollowed.&lt;/p&gt;
&lt;p&gt;So I've tried tweeting him instead:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Dear &lt;a href="https://twitter.com/DavidHorne"&gt;@DavidHorne&lt;/a&gt;, I seem to no longer be able to contact the &lt;a href="https://twitter.com/Virgin_TrainsEC"&gt;@Virgin_TrainsEC&lt;/a&gt; customer relations manager (your idea originally). What next?&lt;/p&gt;&amp;mdash; Dave Pearson (@davepdotorg) &lt;a href="https://twitter.com/davepdotorg/status/788687898111516672"&gt;October 19, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js"
charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;This did get a reply
from &lt;a href="https://twitter.com/Virgin_TrainsEC"&gt;@Virgin_TrainsEC&lt;/a&gt; and I let them
know what I was after. They say they've sent him an email too now:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-partner="tweetdeck"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/davepdotorg"&gt;@davepdotorg&lt;/a&gt; &lt;a href="https://twitter.com/DavidHorne"&gt;@DavidHorne&lt;/a&gt; I have just sent an email Mike and asked for him or one of the team to contact you asap. ^SH&lt;/p&gt;&amp;mdash; Virgin Trains EC (@Virgin_TrainsEC) &lt;a href="https://twitter.com/Virgin_TrainsEC/status/788691702265552896"&gt;October 19, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js"
charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Really, this is a silly mess again. My query is simple and straightforward.
I'm simply chasing up two promises that were made by Mike, on behalf of
Virgin. All I seem to be getting now on those two points is complete
silence.&lt;/p&gt;
&lt;p&gt;I'm really not in the business of telling people how to do their jobs but...
wouldn't customer relations involve actually talking to customers and
delivering on promises made to them when you do talk to them? That strikes
me as the sensible thing to do.&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 16</title><link href="https://blog.davep.org/2016/10/18/virgin-east-coast-16.html" rel="alternate"></link><published>2016-10-18T13:27:00+01:00</published><updated>2016-10-18T13:27:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-10-18:/2016/10/18/virgin-east-coast-16.html</id><summary type="html">&lt;p&gt;It's now almost 2 weeks
since &lt;a href="/2016/09/29/virgin_east_coast_15.html"&gt;I last posted an update here&lt;/a&gt;
and, frustratingly, I don't really have much progress to write about.&lt;/p&gt;
&lt;p&gt;What had been a promising start (well, middle; the actual start of this
process was as frustrating as hell; it was
only &lt;a href="2016/08/10/virgin_east_coast_12.html"&gt;when the MD got involved …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's now almost 2 weeks
since &lt;a href="/2016/09/29/virgin_east_coast_15.html"&gt;I last posted an update here&lt;/a&gt;
and, frustratingly, I don't really have much progress to write about.&lt;/p&gt;
&lt;p&gt;What had been a promising start (well, middle; the actual start of this
process was as frustrating as hell; it was
only &lt;a href="2016/08/10/virgin_east_coast_12.html"&gt;when the MD got involved&lt;/a&gt; that
things actually started to happen) has turned into more of the same: broken
promises and lack of actual results.&lt;/p&gt;
&lt;p&gt;Only, this time, I'm not dealing with some call center. This time I'm
dealing with the office of &lt;a href="https://twitter.com/DavidHorne"&gt;David Horne&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since I last wrote I've emailed Mike Ross three times. The first time was to
chase up what was happening with the promised phone call regarding the
Ticket Wallet app. Here's what I wrote 12 days ago (on 2016-10-06):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi Mike.&lt;/p&gt;
&lt;p&gt;Just wanted to try and chase up what's happening with being able to speak
with someone about the original problem with the Ticket Wallet app. It's
now around 2 months since I missed the single call from Katie Fisher
(which I attempted to return every day for a week after, and a couple of
times the second week after -- never able to leave a message because there
was no voicemail system). It's now also over a month since you said that a
David Ridley (you you said was Katie's boss) would contact me and I've
still not had any sort of call.&lt;/p&gt;
&lt;p&gt;With respect, this is exactly the sort of thing that I initially found
frustrating about dealing with Virgin East Coast Trains: the promises of
calls to get things sorted that never happen and the constant need, on my
part, to chase things up to even try and get something happening.&lt;/p&gt;
&lt;p&gt;It's also nearly 4 months since I first ran into the original problem and
I'm still no nearer getting an explanation as to what the problem is or
any nobody would initially believe the problem I was reporting.&lt;/p&gt;
&lt;p&gt;Could I please get an honest update on what's happening with this?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This got no reply whatsoever. Now, I appreciate that people can be busy, but
when you have an ongoing issue to resolve with someone it makes sense you at
least say something like "I'm sorry, my attention is elsewhere at the moment
-- I promise I'll get back to you as soon as possible". That's not an ideal
thing to do, especially if your job us customer relations, but at least it
lets the customer know you're there and listening.&lt;/p&gt;
&lt;p&gt;But, no, nothing.&lt;/p&gt;
&lt;p&gt;So 5 days ago I replied to the above, with a little chaser:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi Mike. Sorry to trouble you but given it's a week since I wrote, I
wanted to chase this up.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And still nothing.&lt;/p&gt;
&lt;p&gt;Later this week I'll be on the trains again and, despite getting no sort of
reply whatsoever from Mike, I decided to drop a line anyway and ask for seat
reservations to be made (as had originally been offered). These were done in
no time at all.&lt;/p&gt;
&lt;p&gt;While that is great it also tells me something rather odd: my emails are
being read and acted upon -- at least when they're a request for a seat
reservation -- but they're not being replied to.&lt;/p&gt;
&lt;p&gt;And here's the thing that's even &lt;em&gt;more&lt;/em&gt; frustrating about this. The email
where I requested the seat reservations had this on the end as a PS:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: Did you receive the catch-up email I sent last week? Seeing as how I'm
about to use the last set of tickets you provided me I'm very keen to get
to the bottom of the Ticket Wallet app problem so I can finally resolve
the problem of getting WiFi on the train and working without having to
spend £10 extra every time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That has to have been read and... given the lack of reply I can only
conclude that it was ignored. I like to think it wasn't really ignored but a
lack of reply looks &lt;em&gt;exactly&lt;/em&gt; like you're being ignored.&lt;/p&gt;
&lt;p&gt;At this point I don't know what to make of this any more. It's a simple
problem I'm trying to get to the bottom of. I've been made plenty of good
promises, almost all of them broken. On top of that I can't really escalate
the issue any more because I'm already receiving the best help that Virgin
East Coast's MD can offer, apparently.&lt;/p&gt;
&lt;p&gt;Anyone got Richard Branson's phone number?&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 15</title><link href="https://blog.davep.org/2016/09/29/virgin-east-coast-15.html" rel="alternate"></link><published>2016-09-29T13:12:19+01:00</published><updated>2016-09-29T13:12:19+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-09-29:/2016/09/29/virgin-east-coast-15.html</id><summary type="html">&lt;p&gt;It's now a week
&lt;a href="/2016/09/22/virgin_east_coast_14.html"&gt;since I last wrote an update&lt;/a&gt; and,
given that I'm sat on a Virgin East Coast train right now, I thought I'd do
another.&lt;/p&gt;
&lt;p&gt;As mentioned last time, I'm currently waiting for a call from someone at
Virgin East Coast regarding the ongoing situation with the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's now a week
&lt;a href="/2016/09/22/virgin_east_coast_14.html"&gt;since I last wrote an update&lt;/a&gt; and,
given that I'm sat on a Virgin East Coast train right now, I thought I'd do
another.&lt;/p&gt;
&lt;p&gt;As mentioned last time, I'm currently waiting for a call from someone at
Virgin East Coast regarding the ongoing situation with the Android Ticket
Wallet application. It's
&lt;a href="/2016/06/17/virgin_east_coast.html"&gt;now over 3 months since I first ran into the problem&lt;/a&gt;
(and, of course, ran into all the issues of trying to get some sensible help
and response from them) and nothing has really improved:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Still can't log in" src="/attachments/2016/09/29/Screenshot_20160929-125339.png"&gt;&lt;/p&gt;
&lt;p&gt;It's now &lt;a href="/2016/08/10/virgin_east_coast_12.html"&gt;around six weeks&lt;/a&gt; since I
was promised a call from someone who works on the application; a call that
did come the once but I couldn't answer at the time (I'm not the sort of
person to fiddle with a phone while driving) and which I attempted to return
for the better part of 2 weeks afterwards but never even got an answer to
the calls.&lt;/p&gt;
&lt;p&gt;It's now also 3 weeks since I was told that I'd get a call from the boss of
the person who was originally supposed to call me. I've yet to receive a
call from them too. I've mentioned this to Mike Ross on a couple of
occasions now and haven't had any sort of direct reply as to what's going on
with that situation.&lt;/p&gt;
&lt;p&gt;While I am enjoying the benefits of the tickets I was provided as
compensation from the earlier troubles (and also very much appreciating
Mike's reserving of seats for me when I need them -- I do find that booked
seats take a lot of stress out of traveling) I'd really love to get to the
bottom of the problem with the Ticket Wallet app.&lt;/p&gt;
&lt;p&gt;Frustratingly and amusingly I suspect I'll finally get an answer around the
time I don't need to use the train quite so much.&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 14</title><link href="https://blog.davep.org/2016/09/22/virgin-east-coast-14.html" rel="alternate"></link><published>2016-09-22T10:55:02+01:00</published><updated>2016-09-22T10:55:02+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-09-22:/2016/09/22/virgin-east-coast-14.html</id><summary type="html">&lt;p&gt;It's now
&lt;a href="/2016/09/02/virgin_east_coast_13.html"&gt;about 3 weeks since my last post about my exploits in getting a problem solved with Virgin East Coast&lt;/a&gt;
so now's a good time for a little update.&lt;/p&gt;
&lt;p&gt;Two things were "outstanding" the last time I wrote about this. One was that
Mike (the customer relations manager in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's now
&lt;a href="/2016/09/02/virgin_east_coast_13.html"&gt;about 3 weeks since my last post about my exploits in getting a problem solved with Virgin East Coast&lt;/a&gt;
so now's a good time for a little update.&lt;/p&gt;
&lt;p&gt;Two things were "outstanding" the last time I wrote about this. One was that
Mike (the customer relations manager in
&lt;a href="https://twitter.com/davidhorne"&gt;the Virgin East Coast MD&lt;/a&gt;'s office) wanted
us to meet up for a coffee and a chat about my issues and how things were
progressing, etc. Sadly I wasn't able to make the original date we'd picked
out as a possible so another date was arranged. At least, it was kind of
arranged. It was noted that this week might be a good time to meet and I'd
written back to him to say that Wednesday 21st would be good. Since then
I've had no reply at all.&lt;/p&gt;
&lt;p&gt;The second thing that is outstanding is having someone call me about the
issues with the Ticket Wallet app. I've yet to receive a call from the
person who originally phoned me and who I missed (and who I chased up every
day for a week afterwards). I was then told by Mike, about 2 weeks or so
back, that that person's manager would call me instead and that I should
expect a call early last week.&lt;/p&gt;
&lt;p&gt;That call didn't happen. Didn't happen early last week, late last week, at
all last week. It's now Thursday this week and I've still not had a call.&lt;/p&gt;
&lt;p&gt;Just this morning I've chased up both of the above.&lt;/p&gt;
&lt;p&gt;It's
&lt;a href="/2016/06/17/virgin_east_coast.html"&gt;now over 3 months since I first reported the Ticket Wallet app problem&lt;/a&gt;
and I seem to be no closer to seeing it resolved, or even having an
explanation as to the cause of the problem.&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 13</title><link href="https://blog.davep.org/2016/09/02/virgin-east-coast-13.html" rel="alternate"></link><published>2016-09-02T09:54:21+01:00</published><updated>2016-09-02T09:54:21+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-09-02:/2016/09/02/virgin-east-coast-13.html</id><summary type="html">&lt;p&gt;It's
&lt;a href="/2016/08/10/virgin_east_coast_12.html"&gt;just over 3 weeks now since I wrote about how I was finally getting somewhere with my problems with Virgin East Coast&lt;/a&gt;,
so now seems like a good time to update on what's happening. Here's the
things that the PR manager in the MD's office said he'd be sorting …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's
&lt;a href="/2016/08/10/virgin_east_coast_12.html"&gt;just over 3 weeks now since I wrote about how I was finally getting somewhere with my problems with Virgin East Coast&lt;/a&gt;,
so now seems like a good time to update on what's happening. Here's the
things that the PR manager in the MD's office said he'd be sorting, along
with what happened afterwards:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Virgin would BACS me the value of the cheque they kept failing to send&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This happened and happened quickly too. The money turned up in my account
(actually rounded up a little) without any fuss or bother.&lt;/p&gt;
&lt;p&gt;That said... I did receive a cheque from them anyway that is written to a
value that has no relation to the refund I was entitled to and isn't even
similar to the rounded-up value that I received via BACS. I've not done
anything with the cheque yet; there was no accompanying letter to say what
it was for, nothing to explain why it differed by around £10 (more) from
what I was expecting and what turned up in my account, nothing to explain
why I was getting it at all.&lt;/p&gt;
&lt;p&gt;I emailed Mike (the customer relations manager) last Friday and got a reply
last Saturday so say he'd look into it when he got back to his desk this
last Tuesday (Monday being a Bank Holiday in England and Wales). I'm writing
this on Friday morning and haven't had that update yet (so I have sent off
an email to chase this up).&lt;/p&gt;
&lt;p&gt;In the mean time I'm doing nothing with the cheque. It seems unfair to cash
it if it was a simple error on their part.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Someone with knowledge of the Ticket Wallet App would phone me direct&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This happened. Sort of. The day after things started to get resolved I
received a call. Sadly I was driving at the time and was in no position to
take it. When I finally got home and tried calling back there was no answer.
Since then I've tried calling the number every day for the first week and a
couple of times in the second week; I've had no answer at all. Neither have
I received a call from the person who originally tried calling.&lt;/p&gt;
&lt;p&gt;I let Mike know about this in an email about a week back and he said he'd
chase it up. So far I've had no word on the subject since (again, I've sent
off an email chasing this up this morning).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;They'd send me 4 First Class return tickets by way of an apology&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This happened and happened quickly. I've no complaints on this score. Also,
Mike has been very kind in allowing me to email him direct to arrange seat
reservations each time I've needed to use a ticket (once so far, second
request went off this morning for the use of the second of the tickets).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The CR manager would keep in contact to update me on how things are being
improved&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This one not quite so much, but I didn't see this as quite so important and
it wasn't something I was looking for. What mattered to me was that the
refund I was owed got to me and that the apparent problem with the Ticket
Wallet app got fixed.&lt;/p&gt;
&lt;p&gt;That said... back in the early 1990s a lot of software that I developed was
designed for complaints handling departments (used in some pretty well-known
companies too). It was all about keeping customers happy, keeping in contact
with them, keeping track of how well you're doing, keeping track of promised
contact dates and ensuring they were met (that whole thing of a call to say
you've failed is better than no call so you appear to have failed twice),
that sort of thing. I guess, from this point of view, I do have an interest
in how Virgin East Coast handle their customer relations and what systems
they have in place so they appear to be competent.&lt;/p&gt;
&lt;p&gt;As for getting to chat: Mike did name a couple of dates when he'd be close
to where I tend to be working and suggested we get together for a coffee and
a chat about this subject. Given we've both got fluid diaries (his far more
than mine, I'm sure) it's all a little up in the air but I think there's a
possible date in the next week.&lt;/p&gt;
&lt;p&gt;So that's where I'm at: one problem solved (with an offshoot curiosity that
I'm trying to get to the bottom of) and one outstanding.&lt;/p&gt;
&lt;p&gt;Not perfect. Not terrible either.&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 12</title><link href="https://blog.davep.org/2016/08/10/virgin-east-coast-12.html" rel="alternate"></link><published>2016-08-10T16:17:29+01:00</published><updated>2016-08-10T16:17:29+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-08-10:/2016/08/10/virgin-east-coast-12.html</id><summary type="html">&lt;p&gt;Just one day on from
&lt;a href="/2016/08/09/virgin_east_coast_11.html"&gt;yesterday's update post&lt;/a&gt; where I
wrote about how pretty much every promise made by Virgin East Coast had
(once again) been broken and it looks like it's all change (or at least
looks a lot more promising now).&lt;/p&gt;
&lt;p&gt;After I wrote the post I did …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Just one day on from
&lt;a href="/2016/08/09/virgin_east_coast_11.html"&gt;yesterday's update post&lt;/a&gt; where I
wrote about how pretty much every promise made by Virgin East Coast had
(once again) been broken and it looks like it's all change (or at least
looks a lot more promising now).&lt;/p&gt;
&lt;p&gt;After I wrote the post I did the usual thing of
&lt;a href="https://twitter.com/davepdotorg/status/762926618188931073"&gt;tweeting it&lt;/a&gt; and
I then went about the business of sending off yet another set of chase-up
emails.&lt;/p&gt;
&lt;p&gt;The first to come back was from the person dealing with the compensation
cheque. I'd pointed out that it was now a week since the sending of the
cheque via recorded delivery was supposed to have happened and that nothing
had turned up. This was the reply:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am sorry to hear this still has not happened. Would it be possible for
you to send me your address so that I can track the cheque and I will find
out as soon as possible where this is. I apologise for the delay, but rest
assured my number one goal is to get this issue resolved for you. I look
forward to hearing from you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This actually annoyed me a little. I'd asked when the cheque had been sent
and also how it'd been sent so that I could see if the original promise had
been kept. The answer appeared to be avoiding that question. On
subsequent replies I was told that it had been issued the week earlier but
hadn't been dealt with in person:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I followed it up with our fulfilment department and they told me that they
had it in the office with them. It is the one that was originally sent out
on the 2nd August and for some reason had not been issued by that
department. Our fulfilment is outsourced and so when we raise letters or
cheques we phone them to check on the progress. I am sorry that they did
not issue it but rest assured it has been sent now as I made it a case of
urgency due to the delays you have already experienced. I can only
apologise for the further delay.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Given all the previous conversations where I was told about how they were
moving some systems that dealt with this -- which were previously outsourced
-- in-house (although apparently not the part that involves
actually sending cheques) I'm even more strongly suspecting that the first
couple of attempts to send the cheque never actually happened.&lt;/p&gt;
&lt;p&gt;Anyway, long story short(ish): after a bit of back and forth to get to the
bottom of what was actually going on I was assured that the cheque had
finally been sent. Frustratingly this wasn't quite what I wanted. I'm
unlikely to be around to receive an item of post sent via recorded delivery
so I'd have liked it to be sent elsewhere (it should be no surprise that
people who use Virgin East Coast's services a fair bit are also quite likely
to be away from their normal address quite a bit during "normal" hours).&lt;/p&gt;
&lt;p&gt;That said... some progress there. While it'd taken &lt;em&gt;far&lt;/em&gt; too long to get it
resolved, it was finally starting to appear like it was being resolved.&lt;/p&gt;
&lt;p&gt;This approach was, however, being rendered moot by other events.&lt;/p&gt;
&lt;p&gt;Backing up again to yesterday: after I'd tweeted about the blog post, and
mentioned &lt;a href="https://twitter.com/Virgin_TrainsEC"&gt;@Virgin_TrainsEC&lt;/a&gt; so they
could have a chance to see and respond (they didn't this time), my adorable
girlfriend did a bit of checking in the background and did a little retweet:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;For goodness sake, sort this out &lt;a href="https://twitter.com/DavidHorne"&gt;@DavidHorne&lt;/a&gt; &lt;a href="https://twitter.com/AliWatson23"&gt;@AliWatson23&lt;/a&gt; &lt;a href="https://t.co/JibgmfZwjD"&gt;https://t.co/JibgmfZwjD&lt;/a&gt; - 8 weeks, 11 blogs, no progress! &lt;a href="https://t.co/iUTCApBnC7"&gt;https://t.co/iUTCApBnC7&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jo (@0rangelic) &lt;a href="https://twitter.com/0rangelic/status/762933732982591488"&gt;August 9, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js"
charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;I was sceptical that this would have any effect. I'd been promised a call or
something from the "MD's Office" by the customer support people over a week
ago and nothing had happened. Even when I'd sent them a follow-up DM near
the end of the week I got no reply at all. I'd got to the point where I'd
assumed I was just being fobbed off.&lt;/p&gt;
&lt;p&gt;I was
&lt;a href="https://twitter.com/DavidHorne/status/762948887355256832"&gt;wrong to think so though&lt;/a&gt;.
While the request to email the details of the issue was slightly frustrating
(you'd think 11 blog posts would document the issues in enough detail, and a
link &lt;em&gt;was&lt;/em&gt; provided) it was heartening to see &lt;em&gt;something&lt;/em&gt; happening.&lt;/p&gt;
&lt;p&gt;I did point this out to David:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-partner="tweetdeck"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/DavidHorne"&gt;@DavidHorne&lt;/a&gt; &lt;a href="https://twitter.com/0rangelic"&gt;@0rangelic&lt;/a&gt; You&amp;#39;ll find all the details on the linked blog post (and previous 10). Plus in &lt;a href="https://twitter.com/Virgin_TrainsEC"&gt;@Virgin_TrainsEC&lt;/a&gt; systems (hopefully).&lt;/p&gt;&amp;mdash; Dave Pearson (@davepdotorg) &lt;a href="https://twitter.com/davepdotorg/status/762949242126295040"&gt;August 9, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;and also point out that if the details weren't in their system, that might
be a brilliant illustration of the cause of the issues:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-partner="tweetdeck"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/DavidHorne"&gt;@DavidHorne&lt;/a&gt; &lt;a href="https://twitter.com/0rangelic"&gt;@0rangelic&lt;/a&gt; &lt;a href="https://twitter.com/Virgin_TrainsEC"&gt;@Virgin_TrainsEC&lt;/a&gt; If not, there&amp;#39;s the real problem. ;-)&lt;/p&gt;&amp;mdash; Dave Pearson (@davepdotorg) &lt;a href="https://twitter.com/davepdotorg/status/762949341417967616"&gt;August 9, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;I didn't hear much more until around 18:30 when, all credit to him, David
did check that I'd had someone contact me:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-partner="tweetdeck"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/DavidHorne"&gt;@DavidHorne&lt;/a&gt; Not from your office, as far as I&amp;#39;m aware of (which was promised for last week but never happened), if that&amp;#39;s what you mean.&lt;/p&gt;&amp;mdash; Dave Pearson (@davepdotorg) &lt;a href="https://twitter.com/davepdotorg/status/763065373306609664"&gt;August 9, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js"
charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;At that point he asked me for some contact details (again, a slightly
frustrating indication of an organisation that doesn't have joined-up
systems) which I provided (my main email address and my mobile number).&lt;/p&gt;
&lt;p&gt;I didn't hear anything more that evening but, earlier today, I had an email
from a Mike Ross ("Customer Relations Manager - MD's Office" according to
the bottom of the email). He said he'd like to have a chat and could I let
him know when would be a good time to call. I replied saying any time during
normal business hours would be good for me.&lt;/p&gt;
&lt;p&gt;That call made all the difference. As well as obviously offering an apology
for all that had happened so far, Mike was kind enough to both explain what
was likely happening and why (they inherited a setup that involved a lot of
outsourced contracts for lots of parts of the business -- something they're
fixing by bringing many systems back in-house) while also actually listening
to what I was saying.&lt;/p&gt;
&lt;p&gt;More to the point though, he made very clear promises on how he was going to
get my issues solved. Here's the outcome of that conversation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Any and all cheques raised to try and get the refund to me will be stopped
  and the payment sent to me via BACS (something they're not set up for
  doing in general but which they're working on fixing).&lt;/li&gt;
&lt;li&gt;Someone with good knowledge of their Ticket Wallet App and their website
  will give me a call in the next day or so to go over the issues and try
  and get things working (or at least ensure there's a good understanding of
  the cause of the problem).&lt;/li&gt;
&lt;li&gt;By way of saying thanks they're going to send me four first class open
  return tickets for use on the East Coast line. I think that's a very kind
  and generous gesture and one that's going to be very useful to me over the
  next couple of months. (the tickets come with the offer of being able to
  email Mike's office and have them sort the booking of an actual seat for
  each journey).&lt;/li&gt;
&lt;li&gt;Mike has also said he wants to stay in touch and keep me informed of how
  things are changing in Virgin East Coast so that the issues I've
  experienced have less chance of happening in the future.&lt;/li&gt;
&lt;li&gt;Related to the above he's also said he'd like to meet up for coffee once
  or twice to go over things and have a chat about how the company appear to
  a paying customer. While I'd never hold myself up as a typical customer,
  and especially not one who has any particular insight, I think it's an
  impressive approach to take.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am, of course, feeling cautious about all of the above. It is "just"
another set of promises that could be easily broken and, so far, VEC don't
have a brilliant track record of doing that. But the promises appeared
genuine and to think otherwise would be to not allow them to fix the issues.&lt;/p&gt;
&lt;p&gt;I'll write more about it on the blog as things happen.&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 11</title><link href="https://blog.davep.org/2016/08/09/virgin-east-coast-11.html" rel="alternate"></link><published>2016-08-09T08:19:46+01:00</published><updated>2016-08-09T08:19:46+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-08-09:/2016/08/09/virgin-east-coast-11.html</id><summary type="html">&lt;p&gt;It's now another Tuesday morning. It's the Tuesday morning
&lt;a href="/2016/08/02/virgin_east_coast_10.html"&gt;after the previous Tuesday morning&lt;/a&gt;
when I was waiting on some sort of call from Virgin regarding the missing
refund. After I wrote that last post I dropped the chap I'd spoken to an
email to chase up what was happening …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's now another Tuesday morning. It's the Tuesday morning
&lt;a href="/2016/08/02/virgin_east_coast_10.html"&gt;after the previous Tuesday morning&lt;/a&gt;
when I was waiting on some sort of call from Virgin regarding the missing
refund. After I wrote that last post I dropped the chap I'd spoken to an
email to chase up what was happening. This was his reply:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am sorry that I was not able to contact you yesterday as this system
switchover is happening we are going through an extremely busy period in
the business. I have looked into your case and have reissued the cheque
that you did not receive and that should be with you shortly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Under normal circumstances I'd imagine a cheque sent in the post would
arrive within a couple of working days. Given that was last Tuesday I think
it's fair to say that it should have turned up by last Friday.&lt;/p&gt;
&lt;p&gt;Thing is, when I'd spoken to that chap the week before he'd assured me that
they'd send this cheque by recorded delivery to ensure that it got through.&lt;/p&gt;
&lt;p&gt;I still don't have the cheque.&lt;/p&gt;
&lt;p&gt;I guess this means one of 3 things has happened:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;He said he'd sent it, but he hadn't.&lt;/li&gt;
&lt;li&gt;He did send it, but not via recorded delivery, and it's disappeared into
  whatever black hole snail mail from Virgin East Coast seems to be
  disappearing into.&lt;/li&gt;
&lt;li&gt;He did send it, via recorded delivery, and we now have some clue as to
  where the above black hole is located.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whatever the cause, I'm going to have to drop him a line again and find out
what's happening.&lt;/p&gt;
&lt;p&gt;On &lt;a href="/2016/07/29/virgin_east_coast_9.html"&gt;a previous post about this issue&lt;/a&gt;
my friend Mark raised an interesting issue: if Virgin had lost access to the
required data because they'd ceased using the services of some third party
(as was claimed), what did this mean in data protection terms? I'd not
really considered this but it was a fair question. When I last emailed
Virgin I asked about this too:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As an aside, could I also ask who's a good person to speak to about what
was happening with my data during the period Virgin East Coast didn't have
access to it? Thanks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That question got this reply:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The data is still with us as a company it is just in the process of being
uploaded onto our systems. The information has never left our company it
is just in the process of being updated onto our systems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For now, at least, I'm happy enough with that as an explanation. I'm going
to apply &lt;a href="https://en.wikipedia.org/wiki/Hanlon%27s_razor"&gt;Hanlon's Razor&lt;/a&gt; to
this and assume it was just clumsy wording when the subject first came up.&lt;/p&gt;
&lt;p&gt;So, to summarise this situation so far: a late journey that happened back on
June 2nd, for which compensation was confirmed in email on June 6th, the
cheque for which was supposed to turn up early July at the latest, still
hasn't appeared by August 8th. Worse still, I've been told 3 times now that
"the cheque is in the post" and on at least one of those occasions it
appears to have been an outright fib due to the closing of some of their
systems.&lt;/p&gt;
&lt;p&gt;On top of the above, there's another contact I'm awaiting that has yet to
happen. Last week, when I tweeted about the previous post, the Virgin East
Coast twitter people asked me to provide them with my contact details.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-partner="tweetdeck"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/davepdotorg"&gt;@davepdotorg&lt;/a&gt; Dave, can you DM us your contact details? ^AD&lt;/p&gt;&amp;mdash; Virgin Trains EC (@Virgin_TrainsEC) &lt;a href="https://twitter.com/Virgin_TrainsEC/status/759043408253943808"&gt;July 29, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js"
charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;I checked with them why they needed the details (given that they're
obviously already on the system) and they said that they'd escalated it to
the "Managing Director's office" and that they wanted my contact details so
that office could contact me. I provided them and also pointed out that email is
normally the best way to contact me -- they then asked for the best email
address to contact me on and I provided that too.&lt;/p&gt;
&lt;p&gt;Having done that I was told they'd be in touch "next week". In this case
"next week" was any time last week (as of the time of writing and
publishing).&lt;/p&gt;
&lt;p&gt;Nobody got in contact last week. Nobody from a "Managing Director's Office",
nobody at all from Virgin East Coast.&lt;/p&gt;
&lt;p&gt;So, as of right now, I'm waiting on the following from Virgin East Coast,
all promised by them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A reply as to what's happening with the inability to log in with the
  Ticket Wallet application (outstanding since 2016-07-15, although really
  outstanding from a while before then).&lt;/li&gt;
&lt;li&gt;A cheque that was supposed to have been sent via recorded delivery on
  2016-08-02.&lt;/li&gt;
&lt;li&gt;Some form of contact from the "Managing Director's office" that was
  promised on 2016-07-29 and which was supposed to have happened some time
  between 2016-08-01 and 2016-08-05. This contact to, in part, deal with the
  two contact failures above.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The unwillingness or inability to stay in contact with a customer who has
problems does seem to be a persistent pattern. One that seems to go to the
top.&lt;/p&gt;
&lt;p&gt;Right, time to publish this and start sending out even more chase-up emails.
I guess it gives me something to keep me busy when I'm on the train.&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 10</title><link href="https://blog.davep.org/2016/08/02/virgin-east-coast-10.html" rel="alternate"></link><published>2016-08-02T10:46:44+01:00</published><updated>2016-08-02T10:46:44+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-08-02:/2016/08/02/virgin-east-coast-10.html</id><summary type="html">&lt;p&gt;It's Tuesday morning. That means it's the day after
&lt;a href="/2016/07/29/virgin_east_coast_9.html"&gt;Virgin said they'd call me back to deal with the refund issue from last Friday&lt;/a&gt;.
I've not had a call back. That's the second time now I've been told they'll
call me back on a specific date and I've had nothing …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's Tuesday morning. That means it's the day after
&lt;a href="/2016/07/29/virgin_east_coast_9.html"&gt;Virgin said they'd call me back to deal with the refund issue from last Friday&lt;/a&gt;.
I've not had a call back. That's the second time now I've been told they'll
call me back on a specific date and I've had nothing.&lt;/p&gt;
&lt;p&gt;Right now I'm missing a callback about the refund &lt;em&gt;and&lt;/em&gt; some sort of update
on the ticket wallet issue (which was promised "very soon"
&lt;a href="/2016/07/29/virgin_east_coast_9.html"&gt;back on July 15th&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I'm also waiting for some sort of contact from another party in the
organisation that I was promised via DM on twitter last Friday. No sign of
that either (although no timescale was given for that).&lt;/p&gt;
&lt;p&gt;It's starting to get a little tedious, always having to be the one to chase
things up.&lt;/p&gt;
&lt;p&gt;But chase them up I will...&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 9</title><link href="https://blog.davep.org/2016/07/29/virgin-east-coast-9.html" rel="alternate"></link><published>2016-07-29T12:32:06+01:00</published><updated>2016-07-29T12:32:06+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-07-29:/2016/07/29/virgin-east-coast-9.html</id><summary type="html">&lt;p&gt;Given it's been a couple of weeks, I thought I'd write a little update on
the fun and games with Virgin East Coast. I'll also add another little
"problem" into the mix in this post -- something that has been happening in
the background and didn't seem to be an issue …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Given it's been a couple of weeks, I thought I'd write a little update on
the fun and games with Virgin East Coast. I'll also add another little
"problem" into the mix in this post -- something that has been happening in
the background and didn't seem to be an issue to start with.&lt;/p&gt;
&lt;p&gt;As &lt;a href="/2016/07/14/virgin_east_coast_8.html"&gt;mentioned a couple of weeks back&lt;/a&gt;,
I dropped them a line to chase things up (pointing out that the scheduled
callback was long overdue) and got this reply on the 15th:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thank you for your email reply and apologies that I did not call you on
the 11th I must have missed my Outlook reminder.&lt;/p&gt;
&lt;p&gt;I have today again tried to call our second line support team to query
this again and see how far they are with this however they have not picked
up so I have emailed them once again.&lt;/p&gt;
&lt;p&gt;Last time I spoke to them on the phone the person said that it should only
be a few more days so hopefully I will be emailing you again very soon
with some more substantial information on this for you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As I write this it's the 29th and I've had no update. I guess this is the
problem with phrases like "very soon" -- you're never quite sure if you
should read it to mean in the next couple of days, or if 14 days later still
falls within "very soon". Personally, if it was me, I'd be dropping a line
along the way to say "it's taking longer than I'd like, but I'm still on
it". You know, that thing of ensuring the customer doesn't feel like they've
been forgotten about.&lt;/p&gt;
&lt;p&gt;So, very soon&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;, I guess I'll be sending another follow-up email to try and
find out what's going on. I'll update when I do.&lt;/p&gt;
&lt;p&gt;Meanwhile.... there's another issue that's brewing.&lt;/p&gt;
&lt;p&gt;Back at the start of June I was on a train that was delayed by more than
half an hour. This is the first time this has happened to me since I've been
using the trains a lot and I was delighted to find that they make a point of
letting you know that
&lt;a href="https://www.virgintrainseastcoast.com/customer-service/delay-repay/"&gt;you're entitled to a refund on your ticket, depending on how late you are&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That struck me as very sensible and very civilised.&lt;/p&gt;
&lt;p&gt;So, when I finally got home, I put in my claim and on June 6th I got an
email confirming I was entitled to a 50% refund and that it would be sent as
a cheque to me within 28 days.&lt;/p&gt;
&lt;p&gt;Of course, 28 days later, nothing had turned up. I called them shortly after
that to find out what was going on. They claimed the cheque had been sent
and suggested it had got lost on the way (in the 2 years I've been at this
address it's the first time I've knowingly had mail disappear). Anyway, they
cancelled that cheque and issued another, apologising for the hassle and
promising that the new one would be with me within a week.&lt;/p&gt;
&lt;p&gt;As it was I wasn't around for a couple of weeks after that so I got home
yesterday, expecting to see the cheque on my doormat. I expected
incorrectly.&lt;/p&gt;
&lt;p&gt;I've called them about it again today and was told the most interesting
story: apparently they can't help me right now because they've closed down a
call centre down in Plymouth (I think it was), which was "outsourced", and
they now no longer have access to the "computer system" with all the cases
in it. They assured me that they'd get access to it within the next week or
two.&lt;/p&gt;
&lt;p&gt;Let that settle in for a moment: they apparently arranged to close down a
call centre without ensuring that the computer systems that contain (some
of?) their customers' data were handed over in some way, shape or form.&lt;/p&gt;
&lt;p&gt;That's a touch worrying.&lt;/p&gt;
&lt;p&gt;As you might imagine, I wasn't terribly pleased by this news. I'm a couple
of months on from when the delay happened and I &lt;em&gt;still&lt;/em&gt; don't have the
cheque. On top of that, not having received the second attempt at sending
it, I find out that nothing was likely being done about it because they'd
(apparently) dropped the staff/company who would have been dealing with it.
And I had to phone them (again) to find out.&lt;/p&gt;
&lt;p&gt;I imagine that if I'd just left it to them to get in contact and let me
know, I'd have waited and waited and never got anything at all.&lt;/p&gt;
&lt;p&gt;Anyway, long story short, after pointing out that it was a bit much to ask
me to let them hold onto my money even longer, just because of their system
and business issues, I was passed to someone else who was able to suggest a
far better and far quicker method of resolving this.&lt;/p&gt;
&lt;p&gt;So: I'm expecting a call back from them on Monday to get that process under
way. I wonder if &lt;em&gt;this&lt;/em&gt; callback will happen?&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Do you see what I did there?&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 8</title><link href="https://blog.davep.org/2016/07/14/virgin-east-coast-8.html" rel="alternate"></link><published>2016-07-14T14:26:50+01:00</published><updated>2016-07-14T14:26:50+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-07-14:/2016/07/14/virgin-east-coast-8.html</id><summary type="html">&lt;p&gt;Remember &lt;a href="/2016/07/08/virgin_east_coast_7.html"&gt;this&lt;/a&gt;?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I will schedule in a contact back for you for Monday 11th July and after
chasing them about this again I will contact you to let you know what is
happening with this now.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well, it's now Thursday 14th and I've not had a peep out of them …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Remember &lt;a href="/2016/07/08/virgin_east_coast_7.html"&gt;this&lt;/a&gt;?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I will schedule in a contact back for you for Monday 11th July and after
chasing them about this again I will contact you to let you know what is
happening with this now.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well, it's now Thursday 14th and I've not had a peep out of them.&lt;/p&gt;
&lt;p&gt;I'm on a train today. I'm actually writing this on a train. I guess I'll
have to think about chasing them up tomorrow (or perhaps at least chasing
them up in email today).&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 7</title><link href="https://blog.davep.org/2016/07/08/virgin-east-coast-7.html" rel="alternate"></link><published>2016-07-08T15:26:00+01:00</published><updated>2016-07-08T15:26:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-07-08:/2016/07/08/virgin-east-coast-7.html</id><summary type="html">&lt;p&gt;Little update on the Virgin East Coast Ticket Wallet app saga. After
&lt;a href="/2016/07/06/virgin_east_coast_6.html"&gt;my previous reply to them&lt;/a&gt; I got a
reply back yesterday:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dear Mr Pearson&lt;/p&gt;
&lt;p&gt;Many thanks for your email dated 6th July 2016 regarding the fact that you
cannot sign into your Virgin Trains ticket wallet app after …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Little update on the Virgin East Coast Ticket Wallet app saga. After
&lt;a href="/2016/07/06/virgin_east_coast_6.html"&gt;my previous reply to them&lt;/a&gt; I got a
reply back yesterday:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dear Mr Pearson&lt;/p&gt;
&lt;p&gt;Many thanks for your email dated 6th July 2016 regarding the fact that you
cannot sign into your Virgin Trains ticket wallet app after registering on
the desktop version of our website with the email address
davep.org+virgin@gmail.com.&lt;/p&gt;
&lt;p&gt;I firstly apologise for the lack of understanding on the part of our
Virgin Trains East Coast Web Support team with regards to this, the Mobile
ticket issue on our app that you have described is one that has not
occurred very frequently at all for any of our customers and as such this
is what is causing the difficulty in resolving this for you.&lt;/p&gt;
&lt;p&gt;I have today spoken to our second line support team and asked them the
question of if there is soon to be a fix for this for you to which they
have stated that they need a few more days to get this fixed.&lt;/p&gt;
&lt;p&gt;I will schedule in a contact back for you for Monday 11th July and after
chasing them about this again I will contact you to let you know what is
happening with this now.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While it's taken quite a while, it looks like I'm finally making some
progress. If I'm reading it right they finally acknowledge that there is a
problem and that it needs fixing. It's frustrating that I've had to go
backwards and forwards a few times to get to this point.&lt;/p&gt;
&lt;p&gt;Monday will be interesting.&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 6</title><link href="https://blog.davep.org/2016/07/06/virgin-east-coast-6.html" rel="alternate"></link><published>2016-07-06T17:22:28+01:00</published><updated>2016-07-06T17:22:28+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-07-06:/2016/07/06/virgin-east-coast-6.html</id><summary type="html">&lt;p&gt;It's been over a week now
&lt;a href="/2016/06/28/virgin_east_coast_5.html"&gt;since I last had contact with customer services&lt;/a&gt;
and there's still been no word. So, earlier today, I sent off an email.
Short and sweet, requesting that I possibly get an answer to the questions
I'd asked them:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi, it's over a week now …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;It's been over a week now
&lt;a href="/2016/06/28/virgin_east_coast_5.html"&gt;since I last had contact with customer services&lt;/a&gt;
and there's still been no word. So, earlier today, I sent off an email.
Short and sweet, requesting that I possibly get an answer to the questions
I'd asked them:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi, it's over a week now since I answered the couple of questions you
asked and asked a couple of my own. Is it possible to get a reply and an
update on what's happening?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Later on in the day I got a reply:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dear Dave&lt;/p&gt;
&lt;p&gt;Thank you for your email dated 6th June 2016 concerning the tickets that
you have not booked with us yet and the fact that your Mobile App ticket
wallet is not able to show you anything after you have installed it.&lt;/p&gt;
&lt;p&gt;I am sorry to hear that there has been a mix up with the confirming to you
if your email address has been registered or not and a such I wish to
clarify this for you, also that there has been such a delay in responding
to you.&lt;/p&gt;
&lt;p&gt;I can now confirm that your email address davep.org+virgin@gmail.com is
registered on our website and that you have signed up for our Ticket
wallet app successfully. We apologise for telling you that it was not but
this could well have been that we were searching your email address that
you have been emailing us from and this is what has caused the confusion.&lt;/p&gt;
&lt;p&gt;With regards to the use of our Ticket Wallet app before you have made a
booking with us either on that or on our desktop site, it is believed that
you will not be able to see much at all within the app before you make a
booking with us however we have made the raise about this for you and we
chased this up on the 27th June when you emailed us previously.&lt;/p&gt;
&lt;p&gt;I will chase this up again however if possible please confirm what page
you get to in the ticket wallet app at the moment so that we can identify
if this is normal for a customer has no booking allocated to the app.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At this point I'm starting to seriously consider the idea that I'm being
trolled. To start with, there's this bit:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;concerning the tickets that you have not booked with us yet&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It's hard not to read that as sarcasm. Any way I look at it it comes across
as sarcasm. Sure, of course I've not booked any tickets direct with them
(although I have booked lots of tickets with them this year via other
websites) because of the issue -- that's the damn issue!&lt;/p&gt;
&lt;p&gt;Anyway, possible over-sensitivity on my part aside...&lt;/p&gt;
&lt;p&gt;The reply &lt;em&gt;still&lt;/em&gt; seems to think that the problem is that I'm not seeing
tickets I've not booked inside the Ticket Wallet app. That isn't the
problem. The problem, as I clearly stated from the very start, is that I
can't even log into the app. I. CAN'T. LOG. IN!&lt;/p&gt;
&lt;p&gt;I've said this plenty of times. I've made it very clear that this is the
problem. And still I'm being asked:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;please confirm what page you get to in the ticket wallet app&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm really wondering what part of "I can't even log into the app" is so hard
to understand.&lt;/p&gt;
&lt;p&gt;On the other hand, at least I've now got my second confirmation of the fact
that I do actually have an account on their website, after being told I
don't. I suppose that's something.&lt;/p&gt;
&lt;p&gt;Meanwhile.... the Ticket Wallet app is
&lt;a href="/2016/06/17/virgin_east_coast.html"&gt;&lt;em&gt;still&lt;/em&gt;&lt;/a&gt; telling me that my user name
or password are incorrect.&lt;/p&gt;
&lt;p&gt;PS: "Thank you for your email dated 6th June 2016" -- it's July, not June.&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 5</title><link href="https://blog.davep.org/2016/06/28/virgin-east-coast-5.html" rel="alternate"></link><published>2016-06-28T14:46:36+01:00</published><updated>2016-06-28T14:46:36+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-06-28:/2016/06/28/virgin-east-coast-5.html</id><summary type="html">&lt;p&gt;Quick update on where things are at with the attempt to get help with the
apparent inability to log into the Virgin East Coast Ticket Wallet app using
an otherwise perfectly valid account...&lt;/p&gt;
&lt;p&gt;As mentioned &lt;a href="/2016/06/27/virgin_east_coast_4.html"&gt;yesterday&lt;/a&gt; I had an
email from them. I replied (after writing yesterday's blog post):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Quick update on where things are at with the attempt to get help with the
apparent inability to log into the Virgin East Coast Ticket Wallet app using
an otherwise perfectly valid account...&lt;/p&gt;
&lt;p&gt;As mentioned &lt;a href="/2016/06/27/virgin_east_coast_4.html"&gt;yesterday&lt;/a&gt; I had an
email from them. I replied (after writing yesterday's blog post):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm very concerned and very confused by your question about if I've even
registered with the main website. Yes, I have. I've confirmed this more
than once now. During my first phone conversation with support I was told
I wasn't in the system and then, when I demonstrated that I had to be, I
was magically "found" after some magic "fix" was applied on the fly. Now
I'm being told I don't exist again.&lt;/p&gt;
&lt;p&gt;I seem to be going backwards with this rather than going forwards, and
what's even more frustrating is that any question I ask seems to get
ignored while I keep being asked the same basic questions time and again.&lt;/p&gt;
&lt;p&gt;Yes, I did register with the main website. That's how I found there was an
Android app that works with it. That's how I followed the link to
it. That's how I found the support report form and managed to drop you a
line in the first place.&lt;/p&gt;
&lt;p&gt;So, just so I'm 100% clear on this: which email address are you looking
for? How are you looking for it? Where are you looking for it? How come
someone looked for it before, didn't find it, and then found it when
looking again? If I'm not in the system how is it possible for me to log
into the main website?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I also added a couple of screenshots, with explanation, that shows me
logging in with the address they claim doesn't exist in their system.&lt;/p&gt;
&lt;p&gt;I've had no reply to my questions so far. I've had no reply at all so far.&lt;/p&gt;
&lt;p&gt;After posting yesterday's post I did the usual thing of tweeting it and,
obviously, mentioned &lt;a href="https://twitter.com/Virgin_TrainsEC"&gt;@Virgin_TrainsEC&lt;/a&gt;
in the tweet.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Good 10 days into the &lt;a href="https://twitter.com/Virgin_TrainsEC"&gt;@Virgin_TrainsEC&lt;/a&gt; support saga and there’s no end in sight: &lt;a href="https://t.co/ZfV0lR4DQL"&gt;https://t.co/ZfV0lR4DQL&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dave Pearson (@davepdotorg) &lt;a href="https://twitter.com/davepdotorg/status/747362449876197377"&gt;June 27, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js"
charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;This lead to a little exchange on twitter where I mentioned that the main
reason I was trying to switch to Virgin's own system, rather than use
someone line TheTrainLine, was so that I could get the free WiFi and save
myself a tenner each trip.&lt;/p&gt;
&lt;p&gt;All credit to Virgin East Coast: they contacted me directly and have
provided me with 10 one-use WiFi access codes to keep me going while this
gets sorted out. It's not a solution to the problem, but it does remove the
extra cost I was trying to get rid of for the next 5 standard class round
trips (I sometimes sneak in a first class journey if the price is too good
to ignore).&lt;/p&gt;
&lt;p&gt;So.... no still no solution, but some welcome help from them to be going on
with. Can't grumble at that.&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 4</title><link href="https://blog.davep.org/2016/06/27/virgin-east-coast-4.html" rel="alternate"></link><published>2016-06-27T10:00:14+01:00</published><updated>2016-06-27T10:00:14+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-06-27:/2016/06/27/virgin-east-coast-4.html</id><summary type="html">&lt;p&gt;Yesterday, realising
&lt;a href="/2016/06/20/virgin_east_coast_3.html"&gt;it had been a week since I'd last had any contact with Virgin East Coast support&lt;/a&gt;,
I dropped them a line to find out what was going on. Given that they'd
generally been pretty quick to reply and deal with things initially (albeit
in ways that didn't really …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Yesterday, realising
&lt;a href="/2016/06/20/virgin_east_coast_3.html"&gt;it had been a week since I'd last had any contact with Virgin East Coast support&lt;/a&gt;,
I dropped them a line to find out what was going on. Given that they'd
generally been pretty quick to reply and deal with things initially (albeit
in ways that didn't really seem to fix the problem) it seemed odd that
they'd gone so quiet.&lt;/p&gt;
&lt;p&gt;I've had a reply this morning:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dear Dave&lt;/p&gt;
&lt;p&gt;Thank you for your email chaser today with regards to the Mobile app that
you registered on and now cannot sign into it to test the device before
you book.&lt;/p&gt;
&lt;p&gt;I am sorry to hear that you have not been in receipt of a reply with
regards to this and as such I will try and solve this for you now.&lt;/p&gt;
&lt;p&gt;We did not receive anything back from our second line support team and as
such we may need to do more troubleshooting before we chase this with
them.&lt;/p&gt;
&lt;p&gt;Please can you confirm if you have actually registered on the desktop
version of our web site please?&lt;/p&gt;
&lt;p&gt;I know that you stated that you have signed up for the mobile app and
registered on this but your email address does not show on our system as
being registered so we just want to ensure that we have explored all
areas.&lt;/p&gt;
&lt;p&gt;Once we have this from you we can then add this to the valuable
information that you have already provided and chase this up for you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Honestly, this is starting to get silly now. I don't mind so much that
they've been slow in getting back to me on the problem because they've been
waiting on "second line support" to get back to them, but that doesn't seem
to really make sense in the light of them saying afterwards that my email
address doesn't even show in their system.&lt;/p&gt;
&lt;p&gt;Really, if they can "see" that I'm not even registered in their system, why
would they have passed things to "second line support"? That makes no sense.&lt;/p&gt;
&lt;p&gt;But, actually, it gets even worse. During
&lt;a href="/2016/06/17/virgin_east_coast.html"&gt;my original phone conversion with them&lt;/a&gt;
the lady I spoke to made the exact same claim. She told me that my email
address wasn't even in the system, hadn't been registered via the
website. Of course it had (I even sent the initial message for support from
their website, while logged in). I pointed this out and she went off to look
into it; she came back to say it was there now. When I asked what had
happened she mumbled something about how there'd been a problem and she'd
got someone to fix it.&lt;/p&gt;
&lt;p&gt;No, I have no exact details about it, but quite simply she said I wasn't in
the system, I provided her good evidence I was and then she made "magic"
happen and suddenly I was visible.&lt;/p&gt;
&lt;p&gt;But, now, apparently, I'm not visible again.&lt;/p&gt;
&lt;p&gt;Either someone at Virgin East Coast is fibbing to me, or their system has a
bad habit of losing people's details. It's not like I'm so stupid to think
I've registered but actually haven't. I can log into the website with the
details I registered with. I've had a member of staff confirm I'm in the
system. I've had subsequent support chats take place where the person I'm
dealing with is satisfied that I exist in the system. I even had them ask me
to try and reset my password -- something I imagine isn't possible if you've
not even registered with the system yet!&lt;/p&gt;
&lt;p&gt;This is getting really silly now. This is possibly getting beyond silly.&lt;/p&gt;
&lt;p&gt;The serious side of this is, of course, I can't trust the Virgin East Coast
website or their booking system, so I have to continue using a third party,
which means Virgin still get to grab an extra tenner off me on every trip so
I can have WiFi and get some work done.&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 3</title><link href="https://blog.davep.org/2016/06/20/virgin-east-coast-3.html" rel="alternate"></link><published>2016-06-20T10:33:19+01:00</published><updated>2016-06-20T10:33:19+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-06-20:/2016/06/20/virgin-east-coast-3.html</id><summary type="html">&lt;p&gt;Another update to the saga of trying to get the Virgin East Coast Ticket
Wallet app up and running.&lt;/p&gt;
&lt;p&gt;Late on yesterday afternoon (a Sunday, it has to be said, so that's some
dedication to solving the problem) I got a reply to
&lt;a href="http://blog.davep.org/2016/06/18/virgin_east_coast_2.html"&gt;the email I'd sent them previously&lt;/a&gt;. It …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Another update to the saga of trying to get the Virgin East Coast Ticket
Wallet app up and running.&lt;/p&gt;
&lt;p&gt;Late on yesterday afternoon (a Sunday, it has to be said, so that's some
dedication to solving the problem) I got a reply to
&lt;a href="http://blog.davep.org/2016/06/18/virgin_east_coast_2.html"&gt;the email I'd sent them previously&lt;/a&gt;. It
didn't contain anything in response to what I'd written (so it looks like
I'm never going to find out what a TOC is! &lt;em&gt;sadface&lt;/em&gt;) but it did say this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To Dave Pearson,&lt;/p&gt;
&lt;p&gt;Thank you for your response.&lt;/p&gt;
&lt;p&gt;Please attempt to change your password via the ‘forgotten password’
process.&lt;/p&gt;
&lt;p&gt;Once you have amended your password, please attempt to sign into your
Virgin Trains East Coast Ticket Wallet App.&lt;/p&gt;
&lt;p&gt;I apologise for the inconvenience, and thank you for your patience.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'll admit that I wasn't convinced by this plan. There was no explanation as
to why I'd want to change my password, or why I'd want to pretend that I'd
forgotten my password (I hadn't forgotten it, obviously), there wasn't a
suggestion that something had been changed or fixed such that this would
tickle a solution into working. It appeared to imply that I'd actually
forgotten my password and that I should go about setting it again.&lt;/p&gt;
&lt;p&gt;Fair enough... I did. It didn't make a jot of difference. Same problem. I've
written back to say so.&lt;/p&gt;
&lt;p&gt;The actual act of saying I'd forgotten my password was a little odd. I did
the obvious thing of going to the
&lt;a href="https://www.virgintrainseastcoast.com/"&gt;main website&lt;/a&gt; and saying I wanted
to sign in.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Sign in on main site" src="/attachments/2016/06/20/Screen Shot 2016-06-20 at 10.28.31.png"&gt;&lt;/p&gt;
&lt;p&gt;Once clicked, that took me to the actual login page, which has the link to
say you've forgotten your password.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Link to reset password" src="/attachments/2016/06/20/Screen Shot 2016-06-20 at 10.29.07.png"&gt;&lt;/p&gt;
&lt;p&gt;When you click on that link you get taken to.... a login page!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Another login page" src="/attachments/2016/06/20/Screen Shot 2016-06-20 at 10.29.28.png"&gt;&lt;/p&gt;
&lt;p&gt;There you then have to say, again, that you've forgotten your password. Only
once you've done that do you get somewhere where you can say you've actually
forgotten your password.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Finally I can reset" src="/attachments/2016/06/20/Screen Shot 2016-06-20 at 10.29.42.png"&gt;&lt;/p&gt;
&lt;p&gt;Not horrific, of course, but a rather odd route, needing to click pretty
much the same link twice to say the same thing.&lt;/p&gt;
&lt;p&gt;Anyway, I tried it, it didn't work, they've had an email to say as much. Now
I wait for the next step.&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast 2</title><link href="https://blog.davep.org/2016/06/18/virgin-east-coast-2.html" rel="alternate"></link><published>2016-06-18T10:23:01+01:00</published><updated>2016-06-18T10:23:01+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-06-18:/2016/06/18/virgin-east-coast-2.html</id><summary type="html">&lt;p&gt;This morning I called back on
&lt;a href="/2016/06/17/virgin_east_coast.html"&gt;the number I'd been given yesterday evening&lt;/a&gt;. I
explained briefly why I was calling and how I was returning someone's call
but, sadly, ended up back in support script-following hell: they started
asking for booking reference and all that stuff again. I stopped them …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This morning I called back on
&lt;a href="/2016/06/17/virgin_east_coast.html"&gt;the number I'd been given yesterday evening&lt;/a&gt;. I
explained briefly why I was calling and how I was returning someone's call
but, sadly, ended up back in support script-following hell: they started
asking for booking reference and all that stuff again. I stopped them,
explained the issue &lt;em&gt;again&lt;/em&gt;, and they then started to ask for ticket details
and so on.&lt;/p&gt;
&lt;p&gt;Deeply frustrating. The problem I had was that I was trying to set
everything up so I could even stand a chance of booking a ticket. How could
I have a ticket I could tell them about if I'd not even got to that part?&lt;/p&gt;
&lt;p&gt;When I made this clear, in as polite but firm way as possible, I was passed
onto that person's supervisor.&lt;/p&gt;
&lt;p&gt;As luck would have it he was the person who'd called and left a message last
night. He quickly filled me in on what was happening, saying they weren't
sure what the problem was but that the details had been passed to the tech
people. He also asked if he could send me an email with some questions in it
that would help get to the bottom of things; he said it would ask things
like OS type and version, device type, etc. It all seemed to make sense&lt;/p&gt;
&lt;p&gt;I said I'd be happy to and we left it at that.&lt;/p&gt;
&lt;p&gt;I've had the email. This is what it asked:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1 - Origin and Destination&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Gah! Here we go again. The whole support thing appears to be predicated on
the idea that you're having a problem getting somewhere. They seem to not
understand that if you can't even use the system in the first place you
can't even have booked a ticket.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2 - Date and Time&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Without a ticket, there can be no date and time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3 - Number of passengers and railcards if any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Seeing a pattern here?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;4 - Ticket name and price&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I... erm... hello?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;5 - Browser name &amp;amp; version&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Finally! We're getting somewhere! Only... my problem isn't in a web
browser. My problem is with logging in with their Android app. I'm sure I
mentioned this to them at least once.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;6 - Screenshot if possible showing the error&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Yay! Finally! We're getting somewhere! I pasted in the screenshot that was
included in yesterday's blog post. You know the one. The one where it's just
some text that says the username and password are invalid. Because... images
are better than the text in them, right?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;7 -  Name of the TOC&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I have no clue what this means. TOC? What the heck is a TOC?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;8 - Email address of the user&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This I can do! I know this one! (I still suspect that this is the cause of
the problem).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;9 - Booking ref&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Gaaarrrrrggghhhhhh!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;10 - Screen shot showing exact error and exact steps to recreate the error&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Wait... didn't I get asked that in question 6? How is this screenshot going
to be different from the other screenshot? Still, at least it asks for the
steps to recreate now. So I answered that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new account on the Virgin East Coast website. Ideally use an
   email address that contains both a full stop and a plus sign, as mine
   does. Also ensure that you use a password that is the same length as
   mine.&lt;/li&gt;
&lt;li&gt;Log in and look at registered devices.&lt;/li&gt;
&lt;li&gt;See there are none and follow the links it provides to the applicable app
   that will result in a device being registered. In this case the Ticket
   Wallet.&lt;/li&gt;
&lt;li&gt;Download and install on a suitable Android device.&lt;/li&gt;
&lt;li&gt;Attempt to log in and, likely, find that you're told that the username
   and password is incorrect.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br /&gt;
So that's all sent off now. Now I wait for another call back at some point
in the near future.&lt;/p&gt;
&lt;p&gt;Curious how the thing it didn't ask was what app I was using, what version
it was, what mobile device it was being used on, what OS, what OS version,
etc...&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Virgin East Coast</title><link href="https://blog.davep.org/2016/06/17/virgin-east-coast.html" rel="alternate"></link><published>2016-06-17T21:13:18+01:00</published><updated>2016-06-17T21:13:18+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-06-17:/2016/06/17/virgin-east-coast.html</id><summary type="html">&lt;p&gt;This year has seen me travelling up and down the east coast of England (and
into Scotland) quite a bit. Unsurprisingly this means I've been using
&lt;a href="https://www.virgintrainseastcoast.com/"&gt;Virgin East Coast&lt;/a&gt; a lot. While I'm
no stranger to the rail network (I grew up in York, my father worked for
what was …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This year has seen me travelling up and down the east coast of England (and
into Scotland) quite a bit. Unsurprisingly this means I've been using
&lt;a href="https://www.virgintrainseastcoast.com/"&gt;Virgin East Coast&lt;/a&gt; a lot. While I'm
no stranger to the rail network (I grew up in York, my father worked for
what was once called British Rail, etc) I've not been a regular user since
the mid 1990s (when I used to travel from Winchester to London every day).&lt;/p&gt;
&lt;p&gt;Much has changed since the last time I used the trains a lot; the big (good)
change being that you can do a ton of stuff online and, even more usefully,
you can do most things on your mobile phone. Being able to buy tickets from
my desk or sofa, and being able to carry all the useful info (times, seat
numbers, etc) inside an app makes for an almost stress-free journey.&lt;/p&gt;
&lt;p&gt;Up until now I've being using &lt;a href="https://www.thetrainline.com/"&gt;TheTrainLine&lt;/a&gt;
to do all the booking. The website is uncluttered and easy to use. The same
is true of their Android app. I have no complaints at all about how their
system works.&lt;/p&gt;
&lt;p&gt;But there is one small downside...&lt;/p&gt;
&lt;p&gt;The journey I do takes about 4 hours so it makes sense that I settle down
and get some work done. Working, of course, requires that I have some sort
of Net connection. Ideally I'd just connect via my phone but I find that the
signal can't be relied on for large parts of the journey. But that's okay,
the trains have WiFi.&lt;/p&gt;
&lt;p&gt;It's not cheap though. On Virgin, if you're not travelling first class
(something I do do if I can get the right sort of deal) you need to pay £10
to get enough WiFi time to last the trip. Not horrific, but over a few
journeys it adds up.&lt;/p&gt;
&lt;p&gt;Recently though Virgin East Coast have been doing this thing where, if you
book direct via them, you get the WiFi for free. So, while I have no
complaints about TheTrainLine, it makes sense for me to book direct with
Virgin and hopefully save myself a tenner on the WiFi.&lt;/p&gt;
&lt;p&gt;A couple or so weeks back I finally created an account with VEC. I did my
usual thing that I do and used a variation on my Gmail email address. You
know the sort of thing,
&lt;a href="https://gmail.googleblog.com/2008/03/2-hidden-ways-to-get-more-from-your.html"&gt;make use of the fact that anything after the + in the address doesn't "count"&lt;/a&gt;
but can be useful to filter things and keep track of who's selling on your
contact details.&lt;/p&gt;
&lt;p&gt;So I registered as davep.org+virgin@gmail.com. The website accepted it
just fine.&lt;/p&gt;
&lt;p&gt;The next job was to install their wallet app. According to the website this
lets you travel without even needing to faff around with printed tickets:
you can do it 100% with your phone (something TTL now do too, I believe). So
I downloaded the app, went to log in, and...&lt;/p&gt;
&lt;p&gt;&lt;img alt="Login denied" src="/attachments/2016/06/17/Screenshot_20160617-152120.png"&gt;&lt;/p&gt;
&lt;p&gt;I tried a few times, just to be sure that I wasn't being an idiot and
messing up but... nope, it just wasn't going to let me log in.&lt;/p&gt;
&lt;p&gt;Dammit!&lt;/p&gt;
&lt;p&gt;After a few more attempts I gave up and went back to using TTL. Yesterday,
however, I decided to look into this again. The problem persisted so I
logged into the VEC website, followed the links for getting help with the
site (I couldn't see help for the app) and sent a message using the form on
the website.&lt;/p&gt;
&lt;p&gt;In the initial query I pointed out that I'd like to use the system to book
tickets -- especially so I could enjoy free WiFi -- but that the app
wouldn't let me log in. I asked how I might fix the problem.&lt;/p&gt;
&lt;p&gt;The first reply was:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Could you please confirm which Mobile App you have downloaded and we will
advise you accordingly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Okay, fair enough. I'd spoken about "the app" (although I'd only been
offered one via the site) and it seems there's more than one. So I wrote
back and confirmed I was talking about the
&lt;a href="https://play.google.com/store/apps/details?id=com.eastcoast.wallet"&gt;Ticket Wallet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;They replied:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Could you please provide us with your booking reference number and we will
advise you accordingly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I... erm.... Hello? Booking reference? I smell a faint whiff of Catch-22
here.... Never mind. I write back and point out that there is no booking,
I'm asking about a problem with their app.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Could you please confirm if you have registered on the Virgin Trains East
Coast website and we will advise you accordingly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well this is getting fun. I'd been logged in and used their contact form
when I sought help. You'd think that it would record this information in
some way. Fair enough, perhaps not. So I confirm that, yes, I had created an
account with their website and was trying to use that to log in (I also
quoted a line from my original message where I'd said this, right from the
start).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you have registered with us please provide us with the email address
used as the email address in the original email davep.org+virgin@gmail.com
is not recognised on our system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Erm... Well this is getting silly now. That's absolutely the email address
I'd registered with and was logging in with. That's why I was trying to log
into the app with it! So I replied confirming that that was the address I'd
registered with and hence my confusion.&lt;/p&gt;
&lt;p&gt;The reply? This:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I can confirm Virgin Trains East Coast has two Mobile Application, the
Virgin Trains East Coast App and the Virgin Trains East Coast Live App.&lt;/p&gt;
&lt;p&gt;When you purchase an eligible Virgin Trains East Coast ticket on the
website you will be offered the option of having your ticket delivered to
your mobile device as an m-ticket.&lt;/p&gt;
&lt;p&gt;To use the app, simply sign in with your Virgin Trains East Coast login
details, and the app will synch with your online account. If you haven’t
registered that device before, it will ask you to name your device. That
name will then be shown in your account and when buying tickets, so you
can choose which device to send your tickets to.&lt;/p&gt;
&lt;p&gt;Thank you for contacting the Virgin Trains East Coast web support team,
should you require any further assistance please don’t hesitate to contact
us on 03457 225 111.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I... erm.... what? I'm still unsure what this was really telling me. The
words made sense, it seemed to be filled with facts, but none of this seemed
to pertain to what I was asking them. Worse still, it seemed to give the
impression that you needed to have purchased a ticket before you could
use the mobile app (at least that's one interpretation I'm getting from the
above) and yet, when you follow the links on the website, it says something
very different.&lt;/p&gt;
&lt;p&gt;I replied pointing out that I was failing to see how that addressed what I'd
asked, and I reiterated my problem.&lt;/p&gt;
&lt;p&gt;At this point I got a little frustrated and tweeted my frustration:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;In support hell trying to log in with &lt;a href="https://twitter.com/Virgin_TrainsEC"&gt;@Virgin_TrainsEC&lt;/a&gt; Android app. Can’t imagine why it’s got this sort of rating. &lt;a href="https://t.co/pSnuJiiUoB"&gt;pic.twitter.com/pSnuJiiUoB&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dave Pearson (@davepdotorg) &lt;a href="https://twitter.com/davepdotorg/status/743800419361533952"&gt;June 17, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Which got this reply:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/davepdotorg"&gt;@davepdotorg&lt;/a&gt; I understand it&amp;#39;s having a couple of issues today. Booking references will be accepted on your train. ^NB&lt;/p&gt;&amp;mdash; Virgin Trains EC (@Virgin_TrainsEC) &lt;a href="https://twitter.com/Virgin_TrainsEC/status/743801933933219840"&gt;June 17, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;While I get that social media staff, more than any, can be overworked and
are often trying to put out all sorts of fires, this wasn't in any way
helpful to me. I pointed out what the actual issue was:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/Virgin_TrainsEC"&gt;@Virgin_TrainsEC&lt;/a&gt; The problem goes deeper than that. I’ve never been able to log in. Ever. Support says ac doesn’t exist. But it does. O_o&lt;/p&gt;&amp;mdash; Dave Pearson (@davepdotorg) &lt;a href="https://twitter.com/davepdotorg/status/743802140318138372"&gt;June 17, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;I'd also tweeted after my first, talking about the frustration of how TTL
seem to do things well, but I only get free WiFi if I book via Virgin:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;What really bugs me: &lt;a href="https://twitter.com/Virgin_TrainsEC"&gt;@Virgin_TrainsEC&lt;/a&gt; offer free WiFi if book thru them, but app won’t work. &lt;a href="https://twitter.com/thetrainline"&gt;@thetrainline&lt;/a&gt; works brill, but no free Wifi.&lt;/p&gt;&amp;mdash; Dave Pearson (@davepdotorg) &lt;a href="https://twitter.com/davepdotorg/status/743802438235328512"&gt;June 17, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js"
charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;That tweet got a reply from them asking if I was talking about the wallet
app (I was, of course) and if I'd registered with the website first. O_o&lt;/p&gt;
&lt;p&gt;So, after a lot of back and forth, I'd got nowhere with this. I did, a
little while later, get an email asking for my phone number so they could
call me; I replied with it.&lt;/p&gt;
&lt;p&gt;The phone call came a little later on. It didn't go well.&lt;/p&gt;
&lt;p&gt;At first I was told that the problem was that I needed to purchase a ticket
and then that would mean I'd be able to log into the mobile app. Let's just
take a moment to really appreciate what's being said: I SHOULD SPEND A
HUNDRED POUNDS OR MORE SO I CAN EVEN LOG INTO THE APP.&lt;/p&gt;
&lt;p&gt;Only... that's
nonsense. &lt;a href="https://www.virgintrainseastcoast.com/rail-travel/your-ticket/m-tickets/"&gt;According to the website&lt;/a&gt;
it works very different from that. What the website implies is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You create an account on the website.&lt;/li&gt;
&lt;li&gt;You download the wallet app.&lt;/li&gt;
&lt;li&gt;You log into the wallet app with the username and password you use on the
   website.&lt;/li&gt;
&lt;li&gt;This then registers the mobile device with the system.&lt;/li&gt;
&lt;li&gt;Then, and only then, can you buy a ticket.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When I pointed this out to the nice lady on the other end of the line she
seemed confused by the idea and had to go and check it. She then came back
and confirmed that, yes, that's how it works. At which point I asked her how
I was supposed to actually log in if it kept telling me my username and
password were wrong.&lt;/p&gt;
&lt;p&gt;She then suggested that, yes, perhaps there was a problem and could I send a
screenshot of the wallet app so they could look into it. A screenshot. O_o&lt;/p&gt;
&lt;p&gt;Sure, I guess I could send in a screenshot. You can see it above. It's quite
simply the text "Your username or password is incorrect". That's it. That's
the problem. It's nice and easy to type. It's text. It's English. I can't
see any special pixels that would help debug the issue.&lt;/p&gt;
&lt;p&gt;But, nope, it needed a screenshot.&lt;/p&gt;
&lt;p&gt;I asked if, perhaps, I could speak with these "technical" people who'd be
dealing with this. I was told that that wouldn't be possible and that,
instead, she'd have her manager call me. She then hung up pretty sharpish
after that.&lt;/p&gt;
&lt;p&gt;Right now, as of the time of writing, I'm waiting on that call.&lt;/p&gt;
&lt;p&gt;While I do wait, I'm going to make a prediction as to the cause of this. I'm
willing to bet the problem is with the choice of email address. So many
large companies have systems that assume that + isn't a valid character for
an email address. I'm going to further guess that Virgin East Coast &lt;em&gt;isn't&lt;/em&gt;
one of them when it comes to their website. When it comes to their Wallet
App though...&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Later in the evening: I never did get a call from the woman's manager, but
an hour or so later I did get a call from someone at their "web support
team". Sadly I wasn't in a position to take it so I'm no wiser as to what
the call was actually going to be about. I'll return the call tomorrow and,
all being well, write a second post about what happened.&lt;/p&gt;
&lt;p&gt;The main thing I take away from this today though is that, if you (as
appears to have happened a few times today) follow a script and don't
&lt;em&gt;actually&lt;/em&gt; read what the customer is writing, it's going to turn into a very
frustrating experience; especially for the customer.&lt;/p&gt;</content><category term="misc"></category><category term="travel"></category><category term="Virgin"></category></entry><entry><title>Starting fresh with GNU emacs</title><link href="https://blog.davep.org/2016/05/26/starting-fresh-with-gnu-emacs.html" rel="alternate"></link><published>2016-05-26T12:28:48+01:00</published><updated>2016-05-26T12:28:48+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-05-26:/2016/05/26/starting-fresh-with-gnu-emacs.html</id><summary type="html">&lt;p&gt;As I've mentioned elsewhere on this blog, over the past few years, my
use of GNU emacs has lapsed somewhat. There was a time when it was my
only editor (except for the odd dips into vim to do some quick
editing) and, back when I used to use GNU …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As I've mentioned elsewhere on this blog, over the past few years, my
use of GNU emacs has lapsed somewhat. There was a time when it was my
only editor (except for the odd dips into vim to do some quick
editing) and, back when I used to use GNU Linux as a desktop machine a
lot, I'd have an emacs session up and running pretty much non-stop (it
was one of the reasons I wrote
&lt;a href="https://github.com/davep/uptimes.el"&gt;uptimes.el&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In more recent times I've been working more on Windows and often
inside Visual Studio. Even for my own "for fun" programming, I've
mostly being doing things that didn't involve emacs much. In fact,
most of my recent "for fun" coding has been done using
&lt;a href="https://www.sublimetext.com/"&gt;Sublime Text&lt;/a&gt; because it was powerful,
cross-platform and also had great support for
&lt;a href="http://wiki.secondlife.com/wiki/LSL_Portal"&gt;the language I code in a lot when it comes to personal amusement projects&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;During that time I've wanted to get back into emacs. Quite a bit seems
to have changed since I was last a very avid user and this also meant
wanting and needing to catch up.&lt;/p&gt;
&lt;p&gt;The first thing I needed to do was finally get around to killing off
my old &lt;code&gt;~/.emacs&lt;/code&gt; file. This has followed me around since I first got
into emacs on OS/2 back in the mid 1990s. The file started out with a
few &lt;code&gt;setq&lt;/code&gt; expressions to tweak some settings and just kept growing
and growing. It'd got to a point where there was old stuff in there
that I had no use for and sometimes even no idea what it was
for. Heck, to give some idea of how old the file was: there were items
in there that handled running emacs on MS-DOS!&lt;/p&gt;
&lt;p&gt;So, a couple of weeks back, I dumped it. Dumped the whole lot. The
plan then was to recreate it with as little hands-on coding as
possible. I decided that, as much as I could, I'd tweak using
&lt;code&gt;customize&lt;/code&gt; and only hand-code (in &lt;code&gt;~/.emacs.d/init.el&lt;/code&gt; this time
around) things when there was no obvious other way to do it.&lt;/p&gt;
&lt;p&gt;So far this is working out really well. Gone has the ugly and
monolithic &lt;code&gt;.emacs&lt;/code&gt;, replaced with something far more modular, much
more tidy and far easier to maintain. Whereas my old config was almost
1,000 lines long, the new &lt;code&gt;init.el&lt;/code&gt; is currently just 50 lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;&lt;/span&gt;
&lt;span class="c1"&gt;;; Make use of the Common Lisp compatibility module.&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;cl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;&lt;/span&gt;
&lt;span class="c1"&gt;;; Local config/lib directory support.&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;davep:user-path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Given &lt;/span&gt;&lt;span class="ss"&gt;`file&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;, return a path for it in the local config.&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;user-emacs-directory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;defvar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;davep:local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;davep:user-path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;davep/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;My local config and code directory.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;defvar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;davep:startup&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;davep:user-path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;davep/startup&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;My local startup code.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;defvar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;davep:lib&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;davep:user-path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;davep/lib&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;My local library code.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;defvar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;davep:lib-3rd-party&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;davep:user-path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;davep/lib-3rd-party&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;My local third party code.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;push&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;davep:local&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="nv"&gt;load-path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;push&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;davep:startup&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="nv"&gt;load-path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;push&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;davep:lib&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="nv"&gt;load-path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;push&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;davep:lib-3rd-party&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;load-path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;have-own-package-p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Does a package of my own exist in this environment?&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;locate-library&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;davep:lib&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="c1"&gt;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;&lt;/span&gt;
&lt;span class="c1"&gt;;; Ensure custom values go in their own file.&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;custom-file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;davep:user-path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;custom.el&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;load&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;custom-file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;&lt;/span&gt;
&lt;span class="c1"&gt;;; Load various startup things.&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;load&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;env-tests&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;davep-keys&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;davep-languages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;davep-style&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;uptimes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;csrclr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;&lt;/span&gt;
&lt;span class="c1"&gt;;; Local autoloading.&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;autoloading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;load-davep-autoloads&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;All the other stuff, things to tweak language modes so they indent
"just so", my own special keyboard bindings, that sort of thing,
they're all farmed off into their own files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;davep@Bellerophon:~/.emacs.d/davep/startup$&lt;span class="w"&gt; &lt;/span&gt;v
total&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;40&lt;/span&gt;
-rw-r--r--&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;davep&lt;span class="w"&gt;  &lt;/span&gt;staff&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;4211&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;24&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;May&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:38&lt;span class="w"&gt; &lt;/span&gt;davep-keys.el
-rw-r--r--&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;davep&lt;span class="w"&gt;  &lt;/span&gt;staff&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;4078&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;May&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;:51&lt;span class="w"&gt; &lt;/span&gt;davep-languages.el
-rw-r--r--&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;davep&lt;span class="w"&gt;  &lt;/span&gt;staff&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;537&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;May&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:13&lt;span class="w"&gt; &lt;/span&gt;davep-style.el
-rw-r--r--&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;davep&lt;span class="w"&gt;  &lt;/span&gt;staff&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;1339&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;May&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;09&lt;/span&gt;:39&lt;span class="w"&gt; &lt;/span&gt;env-tests.el
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Another thing I'm trying to do is dump all the old third party code I
had locally and, instead, use emacs' own package manager
now. Currently this is also working well for me given that I'm using
both &lt;a href="https://elpa.gnu.org/"&gt;ELPA&lt;/a&gt; and &lt;a href="https://melpa.org/#/"&gt;MELPA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I haven't managed to dump everything yet, but it's a useful exercise
to slowly work through the various files I was carting around and
deciding if I need them or not (like, I'm fairly sure I won't be
needing a &lt;code&gt;cobol-mode&lt;/code&gt; any time soon -- that can go).&lt;/p&gt;
&lt;p&gt;On top of all of this, on top of starting with a "clean slate" emacs,
I've also started keeping track of what I do on GitHub. I've got a
private repo for my &lt;code&gt;~/.emacs.d/&lt;/code&gt; that I can now easily sync between
my various machines.&lt;/p&gt;
&lt;p&gt;One final thing that I'm starting to try and do is actually make full
use of emacs again. One example is that I'm writing this blog post in
it. Until now I've been using SublimeText with
&lt;a href="https://packagecontrol.io/packages/Jekyll"&gt;a Jekyll package to compose and manage things&lt;/a&gt;
but, this time around I'm giving &lt;a href="https://melpa.org/#/hyde"&gt;hyde&lt;/a&gt; and
&lt;a href="https://melpa.org/#/markdown-mode"&gt;markdown-mode&lt;/a&gt; a go. So far
they're working out pretty well too (albeit hyde was a bit odd to set
up and isn't 100% making sense to me yet).&lt;/p&gt;</content><category term="misc"></category><category term="Emacs"></category></entry><entry><title>I now own a Macbook</title><link href="https://blog.davep.org/2016/04/28/i-now-own-a-macbook.html" rel="alternate"></link><published>2016-04-28T20:07:10+01:00</published><updated>2016-04-28T20:07:10+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2016-04-28:/2016/04/28/i-now-own-a-macbook.html</id><summary type="html">&lt;p&gt;I've had my iMac for about 10 months now and I can safely say that it's a
purchase I don't regret. While I'm still not convinced by the hype and nonsense
that's normally associated with Apple products -- I've had plenty of moments
where the damn thing really hasn't "just worked …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've had my iMac for about 10 months now and I can safely say that it's a
purchase I don't regret. While I'm still not convinced by the hype and nonsense
that's normally associated with Apple products -- I've had plenty of moments
where the damn thing really hasn't "just worked" -- I really do like the iMac
as a Unix workstation.&lt;/p&gt;
&lt;p&gt;Recently I've had the need to consider buying a small laptop that I can use
on train journeys. While I have a very capable Windows laptop it's a little
too large to pull out and use on the tray you get on the back of a train seat.
I also have a much-loved Chromebook but it would generally fail me on the train
unless I always pay for the WiFi. So the ideal machine for me would be fairly
small (no more than 12" or so), be capable of doing things locally, and would
also need a pretty good battery life (while the trains I travel on do provide
sockets they seem to provide no power as often as they do).&lt;/p&gt;
&lt;p&gt;I did start to think about going with some sort of Macbook but, every time I
looked at them, I ended up deciding they were too expensive.&lt;/p&gt;
&lt;p&gt;Until yesterday. Yesterday I found that the local computer store had the
13" Macbook Air on sale -- £150 off the usual price plus another £50 off if
I got there and bought it before 5pm.&lt;/p&gt;
&lt;p&gt;So I had to go and look.&lt;/p&gt;
&lt;p&gt;Having looked I came away with one.&lt;/p&gt;
&lt;p&gt;&lt;img alt="My new Macbook, on the train" src="/attachments/2016/04/28/IMG_20160428_200405.jpg"&gt;&lt;/p&gt;
&lt;p&gt;So far I'm very pleased with it. While the one I have is the lower spec
version (just 128GB of SSD and 4GB of memory) it seems to work well for my
needs.&lt;/p&gt;
&lt;p&gt;As for what my needs are? I want to be able to work on web projects locally,
hack on JavaScript and HTML, that sort of thing. As well as that I want to
be able to run Git and, when I do have a net connection, sync to GitHub
and browse the web, do email, faff around on reddit, etc.&lt;/p&gt;
&lt;p&gt;For this it's perfect. I'm finding it more than fast enough for what I want
(I'd even go so far as to say that it's faster than the iMac). The keyboard is
just the right size, the trackpad is perfect (and works just like the Magic
Trackpad I use on my iMac), the screen is very readable. So far I'm struggling
to find any real fault with it.&lt;/p&gt;
&lt;p&gt;Okay, sure, there are some obvious downsides, the main one being that, for
what I paid for this, I could probably have got a lower-end gaming Windows
laptop with plenty of drive space, memory and a good graphics card. But that's
not what I was after. A machine that big and that powerful would sit in the
laptop bag and not get used. I wanted a machine that was easy to drag out,
open up and use.&lt;/p&gt;
&lt;p&gt;And that's what's happening with the Air. In fact, it's being used on the
train right now; that's where I'm waffling on about this, to kill time,
somewhere north of Newcastle, with the sea to my right and the snow coming down.&lt;/p&gt;</content><category term="misc"></category><category term="Mac"></category><category term="Apple"></category><category term="iMac"></category><category term="Unix"></category></entry><entry><title>Until next alarm is back</title><link href="https://blog.davep.org/2015/12/17/until-next-alarm-is-back.html" rel="alternate"></link><published>2015-12-17T11:32:44+00:00</published><updated>2015-12-17T11:32:44+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-12-17:/2015/12/17/until-next-alarm-is-back.html</id><summary type="html">&lt;p&gt;Now and again Google seem to actually listen. While they do generally have a
bad habit of removing things from things and saying it's for everyone's good
(because options are bad and they can't maintain them, apparently) it seems
they &lt;em&gt;can&lt;/em&gt; do the odd turnaround now and again.&lt;/p&gt;
&lt;p&gt;One thing …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Now and again Google seem to actually listen. While they do generally have a
bad habit of removing things from things and saying it's for everyone's good
(because options are bad and they can't maintain them, apparently) it seems
they &lt;em&gt;can&lt;/em&gt; do the odd turnaround now and again.&lt;/p&gt;
&lt;p&gt;One thing they removed from Android recently was the
"&lt;a href="/2015/11/12/i-miss-until-next-alarm.html"&gt;until next alarm&lt;/a&gt;""
option when putting a device in "do not disturb" mode.&lt;/p&gt;
&lt;p&gt;Seems they've added that back in 6.0.1:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Google sees sense" src="/attachments/2015/12/17/Screenshot_20151217-112015.png"&gt;&lt;/p&gt;
&lt;p&gt;It's a small thing, but it makes so much more sense and makes things so much
easier (even if it's a trivial thing).&lt;/p&gt;
&lt;p&gt;Nice one Google. More of this please.&lt;/p&gt;</content><category term="misc"></category><category term="Android"></category><category term="Google"></category><category term="Marshmallow"></category></entry><entry><title>My first proper BT broadband outage</title><link href="https://blog.davep.org/2015/11/18/my-first-proper-bt-broadband-outage.html" rel="alternate"></link><published>2015-11-18T11:25:29+00:00</published><updated>2015-11-18T11:25:29+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-11-18:/2015/11/18/my-first-proper-bt-broadband-outage.html</id><summary type="html">&lt;p&gt;Until I moved about a year ago I'd always used Demon Internet as my ISP. I
stated with them during the old tenner-a-month days when there were only a
handful of points-of-presence to be called. I stuck with them through them
getting full local POP coverage, through having an ISDN …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Until I moved about a year ago I'd always used Demon Internet as my ISP. I
stated with them during the old tenner-a-month days when there were only a
handful of points-of-presence to be called. I stuck with them through them
getting full local POP coverage, through having an ISDN line and then finally
ADSL.&lt;/p&gt;
&lt;p&gt;When I moved though I decided it might be easier to just go with BT; for the
most part this hasn't actually been a bad decision. This week though I suffered
my first proper outage with them and it was rather frustrating.&lt;/p&gt;
&lt;p&gt;It kicked off at around 2015-11-16 21:00. I noticed that Google Drive (in
Chrome) was complaining that it was offline. I then noticed that gmail and
a couple of other tabs in Chrome were complaining about the same thing. I
did a couple of local network checks and found nothing, checked the router and
it was connected and reporting just fine, so then I rebooted the router and
things appeared to improve.&lt;/p&gt;
&lt;p&gt;For a short while anyway. Then I started to notice other problems; mostly that
some sites would time out, others not. Initially I was getting a lot of DNS
timeouts and, while I normally use Google's DNS servers (BT's have long had
lots of problems&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;), I tried switching back to BT's own and that appeared
to improve matters. For a while anyway.&lt;/p&gt;
&lt;p&gt;I mentioned the issues on twitter and got a handful of replies from different
people running into similar issues. It was clear that this wasn't just me. I
then went looking for BT's broadband status page but hilariously was unable
to load it because of the problem.&lt;/p&gt;
&lt;p&gt;This is my first bit of real frustration with them. Here's how the page
looks inside a desktop browser:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Status in desktop browser" src="/attachments/2015/11/18/Screen Shot 2015-11-18 at 10.42.40.png"&gt;&lt;/p&gt;
&lt;p&gt;Now compare it as seen inside Android Chrome on my Nexus 6:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Status on my phone" src="/attachments/2015/11/18/Screenshot_20151118-104156.png"&gt;&lt;/p&gt;
&lt;p&gt;Apparently they have decided that I'd never want to be able to check why my
broadband might be down, from a mobile device. Yes, sure, there's the option
to put my phone number in -- perhaps it tells me after I've done that -- but
I don't even know my land line number; I don't use it as a phone most of the
time and so never bother remembering it. The main point here is why the hell
wouldn't they include the same useful information as the desktop view? Or
perhaps use geolocation of the phone to narrow things down if they feel the
need.&lt;/p&gt;
&lt;p&gt;Anyway, I gave up and went to bed. In the morning things were no better but,
after another router reboot, I did manage to get a view of the status:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Finally got to see broadband status" src="/attachments/2015/11/18/Screen Shot 2015-11-17 at 10.29.47.png"&gt;&lt;/p&gt;
&lt;p&gt;Finally! Acknowledgement of the problem. Worryingly though it was dated almost
12 hours after I first noticed the problem. From what I can see that date and
time isn't the date and time the status was last updated, it's the date and
time it was first added. That suggest that they really hadn't noticed the
problem all night. It's not like it was a problem that was hard to notice,
at least from a customer's point of view. Check this graph from a &lt;a href="http://downdetector.co.uk/problems/bt-british-telecom"&gt;down
detector site&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="It really was down" src="/attachments/2015/11/18/Screen Shot 2015-11-17 at 10.27.07.png"&gt;&lt;/p&gt;
&lt;p&gt;You'd think that a company as big as BT would have something in place that could
catch network problems, especially ones that are able to be caught with a simple
crowdsourcing "press this button if you have a problem" approach.&lt;/p&gt;
&lt;p&gt;But... nope. Appears not. O_o&lt;/p&gt;
&lt;p&gt;Anyway, a couple or so hours later the problem was finally fixed:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Finally got to see broadband status" src="/attachments/2015/11/18/Screen Shot 2015-11-17 at 13.01.00.png"&gt;&lt;/p&gt;
&lt;p&gt;(Notice how the date and time is the same as earlier; so 100% not an update time
but a first-added time) I mentioned this on twitter:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Looks like BT broadband problems are resolved. Everything working that I can see, and this... &lt;a href="https://t.co/m5Mo7vm5Yu"&gt;pic.twitter.com/m5Mo7vm5Yu&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dave Pearson (@davepdotorg) &lt;a href="https://twitter.com/davepdotorg/status/666602185233440768"&gt;November 17, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;and I even got a reply (which I'd not gone looking for, so that was nice):&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-conversation="none" data-cards="hidden" data-partner="tweetdeck"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/davepdotorg"&gt;@davepdotorg&lt;/a&gt; Yes Dave we have the problem fixed, if you still notice a few issues then reset the hub and try again. ^Chris&lt;/p&gt;&amp;mdash; BT (@BTCare) &lt;a href="https://twitter.com/BTCare/status/666642010045050880"&gt;November 17, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Curious as to why it'd take almost 12 hours from the problem appearing to it
being acknowledged on their status, I thought I'd ask:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-partner="tweetdeck"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/BTCare"&gt;@BTCare&lt;/a&gt; All looking good. Any reason why it took 12 hours to acknowledge?&lt;/p&gt;&amp;mdash; Dave Pearson (@davepdotorg) &lt;a href="https://twitter.com/davepdotorg/status/666642201783480320"&gt;November 17, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;which got this reply:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-partner="tweetdeck"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/davepdotorg"&gt;@davepdotorg&lt;/a&gt; Sorry it took so long, identifing the source of the problems would have taken some time. ^Shane&lt;/p&gt;&amp;mdash; BT (@BTCare) &lt;a href="https://twitter.com/BTCare/status/666666833148268548"&gt;November 17, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;which doesn't really make a whole lot of sense. Sure, you to spend time
identifying the source of a problem to &lt;em&gt;fix&lt;/em&gt; it, but you don't need to do that
to notice and acknowledge that there's a problem. I've asked again but
haven't received any sort of reply as of the time of writing (I'm not expecting
one really).&lt;/p&gt;
&lt;p&gt;What I take from all of this is that BT are shockingly bad at keeping people
informed of problems with their service when there's a large outage. I find
that kind of annoying. I don't mind that there are problems, I do mind when
a company can't take the time to clearly and quickly state "yup, it's us, it's
not you, we're looking into it..."&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Don't even get me started on how the HH5 won't allow setting of DNS servers in the hub itself. That's stupid and frustrating beyond words.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="misc"></category><category term="Broadband"></category><category term="BT"></category><category term="Communication"></category></entry><entry><title>A little bit of usenet</title><link href="https://blog.davep.org/2015/11/13/a-little-bit-of-usenet.html" rel="alternate"></link><published>2015-11-13T15:45:19+00:00</published><updated>2015-11-13T15:45:19+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-11-13:/2015/11/13/a-little-bit-of-usenet.html</id><summary type="html">&lt;p&gt;Earlier on today I needed a copy of
&lt;a href="https://www.gnu.org/software/wget/"&gt;&lt;code&gt;wget&lt;/code&gt;&lt;/a&gt; on my iMac. It's not "native" to
it so I got to wondering how you go about getting something like that onto it.
Sure, I could have just grabbed the source and built myself, but really it's
a lot nicer to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Earlier on today I needed a copy of
&lt;a href="https://www.gnu.org/software/wget/"&gt;&lt;code&gt;wget&lt;/code&gt;&lt;/a&gt; on my iMac. It's not "native" to
it so I got to wondering how you go about getting something like that onto it.
Sure, I could have just grabbed the source and built myself, but really it's
a lot nicer to use some sort of package manager.&lt;/p&gt;
&lt;p&gt;A quick search lead me to &lt;a href="http://brew.sh/"&gt;Homebrew&lt;/a&gt; and I was then up and
running in no time.&lt;/p&gt;
&lt;p&gt;This in turn got me to thinking about how it might be fun to get some of the
software I used to use on my GNU/Linux machine up and running again. The first
one that came to mind was &lt;a href="http://slrn.sourceforge.net/"&gt;&lt;code&gt;slrn&lt;/code&gt;&lt;/a&gt;. Sure enough
slrn is available via Homebrew and installing it was dead simple.&lt;/p&gt;
&lt;p&gt;But then I was faced with a problem: I needed an &lt;a href="https://en.wikipedia.org/wiki/Network_News_Transfer_Protocol"&gt;NNTP&lt;/a&gt; server.
Way back I used to run a local one in my office that fed from and to my
ISP's. Back then my ISP was Demon Internet; these days I'm with BT. A quick
search lead me to an article or two that BT had a NNTP server, of sorts,
provided by a third party. So I did a quick check:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Is the server there?" src="/attachments/2015/11/13/Screen Shot 2015-11-13 at 15.27.43.png"&gt;&lt;/p&gt;
&lt;p&gt;Yay! This looked good.&lt;/p&gt;
&lt;p&gt;After that I fired up &lt;code&gt;slrn&lt;/code&gt; and.... problems. It kept asking me to log in,
to provide a user name and password. The only problem was that I'd read in more
than one place that a user name and password weren't needed for BT's server;
all that was required was you be on a BT IP address. Checking the slrn docs
I found &lt;a href="http://slrn.sourceforge.net/docs/slrn-manual-6.html#ss6.32"&gt;&lt;code&gt;force_authentication&lt;/code&gt;&lt;/a&gt;
but ensuring that was off made no difference.&lt;/p&gt;
&lt;p&gt;At this point I removed &lt;code&gt;slrn&lt;/code&gt; and gave up.&lt;/p&gt;
&lt;p&gt;Later, thinking it might be an issue with just &lt;code&gt;slrn&lt;/code&gt; and perhaps it was worth
trying a native NNTP client, I grabbed Unison
(&lt;a href="https://www.panic.com/blog/the-future-of-unison/"&gt;which is no longer supported&lt;/a&gt;
but seems to work fine). I got that set up and ran into the same issue: it
wanted login details.&lt;/p&gt;
&lt;p&gt;Finally, after a bit more digging, I stumbled on the reason why I was struggling
to make any of this work: &lt;a href="http://bt.custhelp.com/app/answers/detail/a_id/51205/?s_cid=con_FURL_giganews"&gt;BT had closed support for the server back in
December last year&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;A quick search around the web and I stumbled on &lt;a href="http://www.eternal-september.org/"&gt;Eternal September&lt;/a&gt;.
Given all I was interested in was the good old text groups this looked perfect.
I quickly registered an account, ran up Unison again and plugged in my details
and....&lt;/p&gt;
&lt;p&gt;&lt;img alt="Is the server there?" src="/attachments/2015/11/13/Screen Shot 2015-11-13 at 15.19.17.png"&gt;&lt;/p&gt;
&lt;p&gt;Now that's all sorted I should try again with &lt;code&gt;slrn&lt;/code&gt;. At which point I'll need
to drag out and tidy up &lt;code&gt;post.el&lt;/code&gt; (&lt;a href="http://post-mode.sourceforge.net/"&gt;the version that was being maintained
by some other people seems to have gone very stale&lt;/a&gt;, sadly).&lt;/p&gt;</content><category term="misc"></category><category term="OS X"></category><category term="iMac"></category><category term="NNTP"></category><category term="usenet"></category><category term="Homebrew"></category></entry><entry><title>I miss "Until next alarm"</title><link href="https://blog.davep.org/2015/11/12/i-miss-until-next-alarm.html" rel="alternate"></link><published>2015-11-12T14:20:23+00:00</published><updated>2015-11-12T14:20:23+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-11-12:/2015/11/12/i-miss-until-next-alarm.html</id><summary type="html">&lt;p&gt;I actually can't remember when the change was now, it was either Android 5.0
or one of the 5.x point releases, but I can recall the frustration of Google
having changed how you make an Android device silent, or not. The idea seemed
clever enough but it was …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I actually can't remember when the change was now, it was either Android 5.0
or one of the 5.x point releases, but I can recall the frustration of Google
having changed how you make an Android device silent, or not. The idea seemed
clever enough but it was a real pain to switch to and use. Previously there'd
simply been this neat system of setting he volume to either be some non-off
value, vibrate or totally silent. I even had a neat little widget on the home
screen of my phone to allow me to toggle between these 3 states.&lt;/p&gt;
&lt;p&gt;It was simple, and worked well.&lt;/p&gt;
&lt;p&gt;The new system though.... ugh. It was confusing and so much more long-winded
to work with.&lt;/p&gt;
&lt;p&gt;At some point though they added one big redeeming feature: "Until next alarm".
When I got into bed I could tell my tablet to go totally silent until my
alarm went off in the morning, and then it would all work as normal. That was
an utterly brilliant idea.&lt;/p&gt;
&lt;p&gt;So it made sense that if they changed anything about this in Marshmallow they'd
keep that in and make it even more awesome, right? Right?!?&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nope" src="/attachments/2015/11/12/Screenshot_20151112-140600.png"&gt;&lt;/p&gt;
&lt;p&gt;Well fuck!&lt;/p&gt;
&lt;p&gt;Why? Just..... why?!? I actually prefer how the new one works. They've more or
less solved the problem of how it was more faff to deal with, they've solved
the problem of having to cock about with the volume rocker to get at the
settings and then set the settings. I like all that.&lt;/p&gt;
&lt;p&gt;But taking "Until next alarm" away? That's just nuts.&lt;/p&gt;
&lt;p&gt;Sometimes I really get the impression that the Android developers are like the
Chrome OS developers: they're having a ton of fun improving and onward developing
the system but they have little connection to how people actually use this stuff.&lt;/p&gt;</content><category term="misc"></category><category term="Android"></category><category term="Google"></category><category term="Marshmallow"></category></entry><entry><title>Voice search failing on Nexus 6</title><link href="https://blog.davep.org/2015/11/11/voice-search-failing-on-nexus-6.html" rel="alternate"></link><published>2015-11-11T16:07:25+00:00</published><updated>2015-11-11T16:07:25+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-11-11:/2015/11/11/voice-search-failing-on-nexus-6.html</id><summary type="html">&lt;p&gt;It's been quite a while since I used voiced search on my Nexus 6. Ever since
I got the Moto 360 I've not really had a need to say "OK Google" to my phone
because I could simply say it to my wrist. Today though, because I wanted to
quickly …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's been quite a while since I used voiced search on my Nexus 6. Ever since
I got the Moto 360 I've not really had a need to say "OK Google" to my phone
because I could simply say it to my wrist. Today though, because I wanted to
quickly look something up and my phone was to hand, I spoke to it and got this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Voice search fail" src="/attachments/2015/11/11/Screenshot_20151111-154157.png"&gt;&lt;/p&gt;
&lt;p&gt;Brilliant.&lt;/p&gt;
&lt;p&gt;I've been here before. I had &lt;a href="https://plus.google.com/+DavePearson/posts/fP9kdADZPQ9"&gt;exactly this sort of problem with my Xperia Z
at one point&lt;/a&gt;.
The problem appeared to go away eventually (actually, it sort of came and
went a few times over a matter of weeks, if I recall correctly), although I
never really got to the bottom of the cause.&lt;/p&gt;
&lt;p&gt;I've tried rebooting the phone and that hasn't helped at all. While it's more
of a vague annoyance than anything else (like I say above, my Android Wear
device is my goto tool for talking to Google these days) it does frustrate a
little when fairly expensive tools don't "just work".&lt;/p&gt;</content><category term="misc"></category><category term="Google"></category><category term="Android"></category><category term="Nexus"></category></entry><entry><title>Usenet spam, still a thing</title><link href="https://blog.davep.org/2015/11/06/usenet-spam-still-a-thing.html" rel="alternate"></link><published>2015-11-06T13:28:17+00:00</published><updated>2015-11-06T13:28:17+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-11-06:/2015/11/06/usenet-spam-still-a-thing.html</id><summary type="html">&lt;p&gt;This just turned up in email a little earlier:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Yay! Spam!" src="/attachments/2015/11/06/Screen Shot 2015-11-06 at 13.16.30.png"&gt;&lt;/p&gt;
&lt;p&gt;What's of particular interest is the email address this was sent to. It was
one that I only ever (to my knowledge) used for posts to Usenet. While my
gmail spam folder is filled with emails to that and other addresses …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This just turned up in email a little earlier:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Yay! Spam!" src="/attachments/2015/11/06/Screen Shot 2015-11-06 at 13.16.30.png"&gt;&lt;/p&gt;
&lt;p&gt;What's of particular interest is the email address this was sent to. It was
one that I only ever (to my knowledge) used for posts to Usenet. While my
gmail spam folder is filled with emails to that and other addresses I used
for Usenet over the years this is the first bit of "proper" spam I've had
to it in a long time.&lt;/p&gt;
&lt;p&gt;It's signficant that it's some sort of &lt;a href="https://en.wikipedia.org/wiki/XBase"&gt;Xbase&lt;/a&gt;-related
thing too. I think the Usenet group I posted to more than any other will have
been &lt;a href="news:comp.lang.clipper"&gt;comp.lang.clipper&lt;/a&gt;. Unless I had some lapse of
judgement at some point in the late 1990s or early 2000s (I think I only got
the davep.org domain in 1999, now I think about it) the address this was sent
to was used nowhere else.&lt;/p&gt;
&lt;p&gt;I've also never been a "Visual Objects and/or Vulcan.NET user". While I did
once own a copy of Visual Objects (two copies actually -- a beta and then a
final release) it wasn't in a way that I'd have been on some mailing list and
even if I had the address in question wouldn't have been the one used.&lt;/p&gt;
&lt;p&gt;So, yeah, great way to impress me with a new product: make your first contact
with me look exactly like some old Usenet spam.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Edit to add:&lt;/strong&gt; I've since had it confrimed by the sender of the email that
my address was indeed pulled from &lt;a href="news:comp.lang.clipper"&gt;comp.lang.clipper&lt;/a&gt;.&lt;/p&gt;</content><category term="misc"></category><category term="Clipper"></category><category term="Xbase"></category><category term="Spam"></category></entry><entry><title>How to kill OS X's HelpViewer</title><link href="https://blog.davep.org/2015/11/02/how-to-kill-os-xs-helpviewer.html" rel="alternate"></link><published>2015-11-02T15:38:26+00:00</published><updated>2015-11-02T15:38:26+00:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-11-02:/2015/11/02/how-to-kill-os-xs-helpviewer.html</id><summary type="html">&lt;p&gt;A little earlier today I decided it was time that I read up a little more about
the abilities of OS X's Spotlight facility. I use it a little -- it's a handy
tool to get at some often-used applications that I don't really need laying
around in the dock -- but …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A little earlier today I decided it was time that I read up a little more about
the abilities of OS X's Spotlight facility. I use it a little -- it's a handy
tool to get at some often-used applications that I don't really need laying
around in the dock -- but I was starting to wonder if I could get more out of
it.&lt;/p&gt;
&lt;p&gt;The obvious first place to look was in the HelpViewer; all the information I'm
ever going to need will be on the local machine, right?&lt;/p&gt;
&lt;p&gt;So I open the HelpViewer, from the Spotlight bar, and type in that I want
information about Spotlight. The page comes up blank. The page was pretty small
so, while I pondered why it might be blank, I resized it and it disappeared!
I tried to open it again and.... nothing. Nothing I did would make the
HelpViewer show again.&lt;/p&gt;
&lt;p&gt;I then tried following the advice
&lt;a href="http://guides.macrumors.com/Troubleshooting_Help_Viewer"&gt;on this page&lt;/a&gt; but
none of that appeared to help. I then looked for the HelpViewer in the
Activity Monitor and killed it with that.&lt;/p&gt;
&lt;p&gt;Running it again after that got me back to where I started. I tried the while
process again and, sure enough, trying to resize the window made it disappear.
I can make it happen every single time:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;iframe width="480" height="360" src="https://www.youtube.com/embed/id9Gb8SDYrg" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;So it looks like another fine example of the Apple "it just works" thing.
For "doesn't always just work" values of "just works".&lt;/p&gt;</content><category term="misc"></category><category term="Apple"></category><category term="iMac"></category><category term="OS X"></category></entry><entry><title>Apple Accounts</title><link href="https://blog.davep.org/2015/10/21/apple-accounts.html" rel="alternate"></link><published>2015-10-21T15:36:19+01:00</published><updated>2015-10-21T15:36:19+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-10-21:/2015/10/21/apple-accounts.html</id><summary type="html">&lt;p&gt;As much as I like my iMac, and as much as I am generally impressed with OS X
the more I use it, I'm constantly frustrated by the little issues I run into
that make life so much more interesting and which fly in the face of the
"it just …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As much as I like my iMac, and as much as I am generally impressed with OS X
the more I use it, I'm constantly frustrated by the little issues I run into
that make life so much more interesting and which fly in the face of the
"it just works with Apple" fandom thing. The more I use the iMac, the more I
appreciate that Macs and OS X are just as "fun" as anything running Windows.&lt;/p&gt;
&lt;p&gt;A little earlier was a good example. I wanted to share part of the iMac's
filesystem using &lt;a href="https://en.wikipedia.org/wiki/Server_Message_Block"&gt;SMB&lt;/a&gt;.
This seemed easy enough, the instructions on how to do it were clear and,
after following them, it utterly failed.&lt;/p&gt;
&lt;p&gt;Brilliant.&lt;/p&gt;
&lt;p&gt;So I Googled the issue a bit and ran into
&lt;a href="https://discussions.apple.com/thread/6629743?start=0&amp;amp;tstart=0"&gt;this handy forum post&lt;/a&gt;.
Apparently you can't actually connect with SMB if the account you're going to
be using to connect with is using iCloud login rather than a separate login.&lt;/p&gt;
&lt;p&gt;Brilliant.&lt;/p&gt;
&lt;p&gt;Not an obvious thing. Nothing said this was the case. According to the forum
post even Apple couldn't help the person who'd been trying to make it work.
But at least there was a workaround. All I'd need to do is split the password,
have a login for the machine that &lt;em&gt;wasn't&lt;/em&gt; the iCloud login and I'd be all good.&lt;/p&gt;
&lt;p&gt;I did it, it worked. I could browse the iMac's filesystem from my Windows
machine and all was good (I'd been able to do this the other way around
for ages and with no problems whatsoever).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Finally got to allow SMB for me" src="/attachments/2015/10/21/Screen Shot 2015-10-21 at 15.29.11.png"&gt;&lt;/p&gt;
&lt;p&gt;Then I got curious.&lt;/p&gt;
&lt;p&gt;What would happen if, once I had this set up, I "unsplit" the password and
went back to using the iCloud password to log in? That's when it got really fun.&lt;/p&gt;
&lt;p&gt;To do this it asks you for the current password and also your iCloud password.
I entered both and...&lt;/p&gt;
&lt;p&gt;&lt;img alt="Finally got to allow SMB for me" src="/attachments/2015/10/21/Screen Shot 2015-10-21 at 15.28.46.png"&gt;&lt;/p&gt;
&lt;p&gt;Yup. It refuses, every single time, to accept that the iCloud password I'm
entering is valid. Trust me, it is. I'm entering the correct password. I can
log in to the iCloud website with it just fine. But when I use it to try and
"unsplit" my password.... nope.&lt;/p&gt;
&lt;p&gt;Brilliant.&lt;/p&gt;
&lt;p&gt;I've even tried disabling SMB sharing for my account, and even turning off
SMB sharing altogether. This doesn't seem to make any difference. Right now,
as far as I can see, now that I've split the password I can't go back
despite the fact that there's a method of doing it made available.&lt;/p&gt;
&lt;p&gt;Brilliant.&lt;/p&gt;</content><category term="misc"></category><category term="Apple"></category><category term="OS X"></category><category term="iMac"></category><category term="SMB"></category></entry><entry><title>Microsoft accounts</title><link href="https://blog.davep.org/2015/10/19/microsoft-accounts.html" rel="alternate"></link><published>2015-10-19T12:14:27+01:00</published><updated>2015-10-19T12:14:27+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-10-19:/2015/10/19/microsoft-accounts.html</id><summary type="html">&lt;p&gt;I have too many Microsoft accounts. Far too many. And they still confuse
the hell out of me.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Too many MS logins" src="/attachments/2015/10/19/Screen Shot 2015-10-19 at 12.05.30.png"&gt;&lt;/p&gt;
&lt;p&gt;I found out over the weekend that the office was closing down the old internal
email server. Everything moving to Office365. I use Gmail for my email (I have
a freebie Google …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have too many Microsoft accounts. Far too many. And they still confuse
the hell out of me.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Too many MS logins" src="/attachments/2015/10/19/Screen Shot 2015-10-19 at 12.05.30.png"&gt;&lt;/p&gt;
&lt;p&gt;I found out over the weekend that the office was closing down the old internal
email server. Everything moving to Office365. I use Gmail for my email (I have
a freebie Google Apps account that I use as the front end for it -- when it
comes to things like email I'm Gmail all the way). So, as of today, I have
a new work-oriented Microsoft account.&lt;/p&gt;
&lt;p&gt;Problem is, I already had a work-oriented Microsoft account because that's how
I use MSDN and download stuff from that.&lt;/p&gt;
&lt;p&gt;I also have a personal outlook.com account for reasons I can't remember now.&lt;/p&gt;
&lt;p&gt;And then there's the Windows gaming login, which might or might not be related
the the one above.&lt;/p&gt;
&lt;p&gt;And then there's the old Xbox live account that I think has nothing to do with
the above.&lt;/p&gt;
&lt;p&gt;And then...&lt;/p&gt;
&lt;p&gt;The problem I have is that I never seem to be able to log in with an existing
MS account any time something new crops up, and so I somehow seem to end up
having to make a new one. And now I have too many and there's no obvious way
to merge them or kill them off without losing some service I don't even know
I need to use any more.&lt;/p&gt;
&lt;p&gt;And then there's my two Skype accounts (personal and work)...&lt;/p&gt;
&lt;p&gt;Make it stop! Please! And give me a merge facility!&lt;/p&gt;</content><category term="misc"></category><category term="Microsoft"></category></entry><entry><title>Labour want more money</title><link href="https://blog.davep.org/2015/10/08/labour-want-more-money.html" rel="alternate"></link><published>2015-10-08T10:08:02+01:00</published><updated>2015-10-08T10:08:02+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-10-08:/2015/10/08/labour-want-more-money.html</id><summary type="html">&lt;p&gt;I woke up this morning to see &lt;a href="https://twitter.com/MarkRobotArm/status/651811143284076544"&gt;this&lt;/a&gt; being retweeted by a few people I follow:&lt;/p&gt;
&lt;p&gt;&lt;img alt="An effect of sanctions" src="/attachments/2015/10/08/ToryUK.png"&gt;&lt;/p&gt;
&lt;p&gt;Even if I was to let my usual net-cynic side take over and decide there's a
good chance it's a made-up story there's no getting away from the fact that
this is a story …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I woke up this morning to see &lt;a href="https://twitter.com/MarkRobotArm/status/651811143284076544"&gt;this&lt;/a&gt; being retweeted by a few people I follow:&lt;/p&gt;
&lt;p&gt;&lt;img alt="An effect of sanctions" src="/attachments/2015/10/08/ToryUK.png"&gt;&lt;/p&gt;
&lt;p&gt;Even if I was to let my usual net-cynic side take over and decide there's a
good chance it's a made-up story there's no getting away from the fact that
this is a story that isn't in isolation. I hear this sort of thing time and
again; especially from people who have to deal with the fallout from this
first hand.&lt;/p&gt;
&lt;p&gt;This is something that is happening, in 2015, in the country I live in.&lt;/p&gt;
&lt;p&gt;I wish it wasn't.&lt;/p&gt;
&lt;p&gt;This is why I find
&lt;a href="/2015/09/07/labour-said-no-thanks-to-my-support.html"&gt;Labour's accusation of lying&lt;/a&gt;
so damn annoying and frustrating. For a short while I simply decided that
that was that. They're as corrupt as the rest of them and only in it for the
money. This was made even more clear by how often they kept trumpeting the
new member numbers. It's all about the numbers -- all about the money.&lt;/p&gt;
&lt;p&gt;But then I saw &lt;a href="https://www.youtube.com/watch?v=RYNPzJgV8TI"&gt;this video&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;iframe width="480" height="270" src="https://www.youtube.com/embed/RYNPzJgV8TI" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;and got to thinking that perhaps, just perhaps, some change for the better
is actually happening inside Labour. Perhaps I should give the organisation
the benefit of the doubt. Perhaps, if I contacted the membership team and
asked &lt;em&gt;why&lt;/em&gt; they'd decided I was lying, they'd give me the information and I
could sort things out.&lt;/p&gt;
&lt;p&gt;So I did. I wrote to them. I sent this to them, via the form on their
website, on 2015-09-28:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On September 5th 2015 I received an email from you accusing me of
having lied when I sought to become a supporter, with a view to
applying to be a member after seeing the results of the leadership
election. This was a rather hurtful event and one I wrote about here:
http://blog.davep.org/2015/09/07/labour-said-no-thanks-to-my-support.html&lt;/p&gt;
&lt;p&gt;Having watched https://www.youtube.com/watch?v=RYNPzJgV8TI I find
myself in the odd position of liking the message of a party that, at
the same time, accused me of something without evidence.&lt;/p&gt;
&lt;p&gt;Given this I'd like to get to the bottom of what happened, hopefully
find out what evidence was used to make the accusation and, perhaps,
get an apology so that I can seriously consider joining and supporting
what is happening.&lt;/p&gt;
&lt;p&gt;I look forward to your reply.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I, of course, gave all my full details -- the email address I'd used, my home
address, my full name, etc. All the information that I'd given when I signed
up as a supporter. From what I could tell they had everything they needed to
be able to check and give an adequate reply.&lt;/p&gt;
&lt;p&gt;It took a while but I finally got a reply. This email came through on
2015-10-06:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Labour wants another tenner" src="/attachments/2015/10/08/Screen Shot 2015-10-08 at 10.26.19.png"&gt;&lt;/p&gt;
&lt;p&gt;So that seems pretty clear: a non-answer to my question and they're asking
for another £10 on top of the £3 they already have off me to find out what
evidence they have that meant it was okay for them to take my £3 and then
accuse me of lying.&lt;/p&gt;
&lt;p&gt;What's the betting that I'll spend that £10 and get a non-answer?&lt;/p&gt;
&lt;p&gt;What's even more infuriating is that I'm not actually asking for information
they have on file about me, I'm asking for clarification for something they've
already told me.&lt;/p&gt;
&lt;p&gt;It's really hard not to view this as a simple bait and switch.&lt;/p&gt;
&lt;p&gt;So now I'm left wondering what to do next; trying to decide if I just give it
up as a bad job and accept that, really, nothing has changed and they're as
bad as ever. Corbyn might well be talking a good game but, under that cover,
it's still just another money-grabbing organisation that wants power and
very little change.&lt;/p&gt;</content><category term="misc"></category><category term="Politics"></category><category term="Labour"></category><category term="Labour Purge"></category></entry><entry><title>Change of watch face</title><link href="https://blog.davep.org/2015/10/07/change-of-watch-face.html" rel="alternate"></link><published>2015-10-07T14:57:07+01:00</published><updated>2015-10-07T14:57:07+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-10-07:/2015/10/07/change-of-watch-face.html</id><summary type="html">&lt;p&gt;I'll be the first to admit that I'm a creature of habit. Once I get used to
something I find it hard to change. In many areas of my life there has to be
really compelling reasons to change something. I've found that this is the
case with my Android …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'll be the first to admit that I'm a creature of habit. Once I get used to
something I find it hard to change. In many areas of my life there has to be
really compelling reasons to change something. I've found that this is the
case with my Android Wear watch.&lt;/p&gt;
&lt;p&gt;When I first got it it took me a couple or so days to find a face that I was
happy with and, in the end, I went with &lt;a href="http://www.pujiewear.com/"&gt;Pujie Black&lt;/a&gt;,
along with a colour scheme I set up myself (called &lt;em&gt;RGB&lt;/em&gt;, for obvious reasons).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pujie Black with RGB face" src="/attachments/2015/10/07/Pujie Black.png"&gt;&lt;/p&gt;
&lt;p&gt;Today though I stumbled on &lt;a href="https://play.google.com/store/apps/details?id=net.marscity.sunlight&amp;amp;hl=en_GB"&gt;Krona Sunlight&lt;/a&gt;.
This face really got my interest. Part of the reason is that, while what I'm
wearing is normally called a "watch", I don't see it as a watch (just like
my phone isn't really a phone). It's a wearable Android device that gives me
handy info at a glance and lets me set reminders and things without even
having to reach for my phone, tablet, Chromebook or desktop machine.&lt;/p&gt;
&lt;p&gt;This face fits perfectly into that.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Krona Sunlight face" src="/attachments/2015/10/07/Krona Sunlight.png"&gt;&lt;/p&gt;
&lt;p&gt;While it lacks the battery information (edit to add: it doesn't lack battery
information, it's just an option that is off by default), and second time display, that Pujie
Black has, it more than makes up for it with the rather fantastic display
of weather and sunrise/set information -- especially how it displays temperature.&lt;/p&gt;
&lt;p&gt;This was enough to not only have me buy a copy, but also to switch to it. I'm
going to be sticking with it for the next couple of days to see how I feel
about it and see if I miss any of the other information.&lt;/p&gt;
&lt;p&gt;This might be a little bit of change I can cope with.&lt;/p&gt;</content><category term="misc"></category><category term="Android Wear"></category><category term="Moto360"></category></entry><entry><title>iMac Time Wiggle</title><link href="https://blog.davep.org/2015/10/07/imac-time-wiggle.html" rel="alternate"></link><published>2015-10-07T11:38:55+01:00</published><updated>2015-10-07T11:38:55+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-10-07:/2015/10/07/imac-time-wiggle.html</id><summary type="html">&lt;p&gt;Apparently that famous Apple obsession with design doesn't apply to the time
display on the OS X login screen (the wake-from-sleep password confirmation
one anyway):&lt;/p&gt;
&lt;p&gt;&lt;img alt="Time wiggle" src="/attachments/2015/10/07/iMac-Login-Screen-Time-Wiggle.gif"&gt;&lt;/p&gt;
&lt;p&gt;I've never noticed it before. I'm not sure if this came about with
&lt;a href="/2015/10/06/el-capitan.html"&gt;the upgrade to El Capitan&lt;/a&gt; or not.
But now I've seen it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Apparently that famous Apple obsession with design doesn't apply to the time
display on the OS X login screen (the wake-from-sleep password confirmation
one anyway):&lt;/p&gt;
&lt;p&gt;&lt;img alt="Time wiggle" src="/attachments/2015/10/07/iMac-Login-Screen-Time-Wiggle.gif"&gt;&lt;/p&gt;
&lt;p&gt;I've never noticed it before. I'm not sure if this came about with
&lt;a href="/2015/10/06/el-capitan.html"&gt;the upgrade to El Capitan&lt;/a&gt; or not.
But now I've seen it I can't unsee it.&lt;/p&gt;</content><category term="misc"></category><category term="iMac"></category><category term="Apple"></category><category term="OS X"></category></entry><entry><title>El Capitan</title><link href="https://blog.davep.org/2015/10/06/el-capitan.html" rel="alternate"></link><published>2015-10-06T13:53:12+01:00</published><updated>2015-10-06T13:53:12+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-10-06:/2015/10/06/el-capitan.html</id><summary type="html">&lt;p&gt;Almost a week ago (yes, I have being meaning to write something down about
this and have kept failing to do so) my iMac told me that there was a new
version of the OS waiting for me. While this is doubtless no big deal for
most Mac owners, this …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Almost a week ago (yes, I have being meaning to write something down about
this and have kept failing to do so) my iMac told me that there was a new
version of the OS waiting for me. While this is doubtless no big deal for
most Mac owners, this was interesting to me because it's the first time
I've experienced an OSX upgrade since &lt;a href="/2015/06/27/my-first-couple-of-weeks-with-an-imac.html"&gt;I got the iMac&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="El Capitan downloading" src="/attachments/2015/10/06/Screen Shot 2015-10-01 at 12.01.37.png"&gt;&lt;/p&gt;
&lt;p&gt;The download took a while and, while the install had a couple of curious
bumps along the way, nothing seemed to actually go wrong.&lt;/p&gt;
&lt;p&gt;&lt;img alt="About to get going" src="/attachments/2015/10/06/Screen Shot 2015-10-01 at 12.27.18.png"&gt;&lt;/p&gt;
&lt;p&gt;The two main things I noticed were that it seemed to take the installer an
absolute age to close down all running apps before it got to doing the
installation. The other was that Mac progress bars seem to have a very odd
way of calculating things. Often it would tell me that there was (for example)
28 minutes to go, it'd stay like that for 20 minutes, then drop 5 minutes,
then appear to finish very soon after.&lt;/p&gt;
&lt;p&gt;&lt;img alt="The final countdown" src="/attachments/2015/10/06/Screen Shot 2015-10-01 at 12.27.43.png"&gt;&lt;/p&gt;
&lt;p&gt;Mostly though I just left it alone and let it do its own thing. While the whole
process took quite a while, it came back just fine (if I'm fair I'm not sure
it took much more time than when I upgraded my laptop from Windows 8.1 to
Windows 10).&lt;/p&gt;
&lt;p&gt;The changes and improvements aren't really that obvious. I think I would say
that the machine feels a little quicker in places, but nothing I can really
put my finger on. One of the things I do like is the new split-screen facility
for full-screen apps. While I don't use the full-screen facility &lt;em&gt;that&lt;/em&gt; much
I have found the need to split the screen before.&lt;/p&gt;
&lt;p&gt;Some of the other improvements I've read about seem to involve things I'm
never going to use: either improvements to Safari (Chrome all the way for
me), the Mac Mail app (Gmail all the way for me, with &lt;a href="http://www.kiwiforgmail.com/"&gt;Kiwi for Gmail&lt;/a&gt;
being my client of choice on the iMac) or various iOS-oriented things which
are of little use (while &lt;a href="/2015/06/23/and-now-for-some-ios.html"&gt;I do own an iOS device&lt;/a&gt; it's not one I use much).&lt;/p&gt;
&lt;p&gt;Overall the thing I'm taking away from this is that the upgrade was smooth,
nothing was obviously broken or changed in a way that was confusing (unlike
some Windows or ChromeOS updates I've experienced in the past) and I didn't
have to do anything that required much in the way of knowledge to keep it
all going.&lt;/p&gt;
&lt;p&gt;Doubtless that won't always be the case, such is the nature of OS upgrades.&lt;/p&gt;</content><category term="misc"></category><category term="Mac"></category><category term="Apple"></category><category term="iMac"></category><category term="OS X"></category></entry><entry><title>My iMac thinks I'm in Spain</title><link href="https://blog.davep.org/2015/09/10/my-imac-thinks-im-in-spain.html" rel="alternate"></link><published>2015-09-10T14:44:01+01:00</published><updated>2015-09-10T14:44:01+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-09-10:/2015/09/10/my-imac-thinks-im-in-spain.html</id><summary type="html">&lt;p&gt;While on the phone earlier I was doing that thing you often do when chatting
with someone where you don't have to concentrate on something in front of you:
I was randomly clicking around stuff on a machine. In this case I was
faffing around on &lt;a href="/2015/06/27/my-first-couple-of-weeks-with-an-imac.html"&gt;my iMac&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;While on the phone earlier I was doing that thing you often do when chatting
with someone where you don't have to concentrate on something in front of you:
I was randomly clicking around stuff on a machine. In this case I was
faffing around on &lt;a href="/2015/06/27/my-first-couple-of-weeks-with-an-imac.html"&gt;my iMac&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One of the places I landed was in the About dialog, looking at the support
details:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Support details of the iMac" src="/attachments/2015/09/10/Screen Shot 2015-09-10 at 14.29.14.png"&gt;&lt;/p&gt;
&lt;p&gt;Out if idle curiosity I clicked the "OS X Support" link, which opened my
browser and took me to Apple's website. Only.... it didn't take me to a part
of the site that was that useful to me:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Seems I read Spanish" src="/attachments/2015/09/10/Screen Shot 2015-09-10 at 14.29.23.png"&gt;&lt;/p&gt;
&lt;p&gt;Yes, for reasons best known to Apple or my iMac, I apparently need my help to
be in Spanish. O_o&lt;/p&gt;
&lt;p&gt;I could understand this if I had my system set to Spanish, which I don't:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Seems I read Spanish" src="/attachments/2015/09/10/Screen Shot 2015-09-10 at 14.30.55.png"&gt;&lt;/p&gt;
&lt;p&gt;About the only "non-standard" thing I have in my setup is the date, which I've
set to &lt;a href="https://en.wikipedia.org/wiki/ISO_8601"&gt;ISO 8601&lt;/a&gt; style rather than
the usual UK style. I even experimented with changing that to the default on
the remote chance that it was tickling some sort of odd bug in OS X.&lt;/p&gt;
&lt;p&gt;So, yes, another wonderful example of Apple stuff "just working" and being
good for mortals. Well, for interesting values of "working" anyway.&lt;/p&gt;</content><category term="misc"></category><category term="Mac"></category><category term="Apple"></category><category term="iMac"></category></entry><entry><title>Labour said no thanks to my support</title><link href="https://blog.davep.org/2015/09/07/labour-said-no-thanks-to-my-support.html" rel="alternate"></link><published>2015-09-07T12:16:30+01:00</published><updated>2015-09-07T12:16:30+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-09-07:/2015/09/07/labour-said-no-thanks-to-my-support.html</id><summary type="html">&lt;p&gt;I've never been a member of a political party. Ever. The main reason is I'm not
that much of a "joiner" and I tend to dislike making compromises on subjects
that actually matter. I have been a member of political causes in the past
but even those I've had to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've never been a member of a political party. Ever. The main reason is I'm not
that much of a "joiner" and I tend to dislike making compromises on subjects
that actually matter. I have been a member of political causes in the past
but even those I've had to leave because of the struggle I felt when it came
to being associated with actions I disagreed with (yes, I am looking at you
&lt;a href="http://www.secularism.org.uk/"&gt;National Secular Society&lt;/a&gt;). While there are
plenty of causes that I support, either in spirit or in actual donations, I
almost never actually join up.&lt;/p&gt;
&lt;p&gt;I've also been a fairly flexible supporter of candidates in general elections.
While my politics are very much what you'd call "left" my voting patterns
tend to be related to how suitable I find a candidate from the parties that
I find I have a lot of overlap with in terms of stated aims. Unsurprisingly,
for all of my voting life, this has been a case of selecting from Labour
or LibDem candidates (with the odd look at the Green candidate). When doing so
one of the major factors in making the choice has been tactical voting given
that, for most of my life, I've lived in (what normally appeared to be) Tory
safe seats.&lt;/p&gt;
&lt;p&gt;But, for many reasons, I've always felt an important connection to Labour.&lt;/p&gt;
&lt;p&gt;Possibly one of the best moments, in political terms, was that night in
&lt;a href="https://en.wikipedia.org/wiki/United_Kingdom_general_election,_1997"&gt;1997&lt;/a&gt;,
as I drove back home, down the M3 from London, listening to the radio, hearing
Tory after Tory fall and realising that, for the first time in my (politically
concious) life, I was going to enjoy the benefits, we were all going to enjoy
the benefits, of a Labour government. This was such a sweet victory after
having really felt the defeat of
&lt;a href="https://en.wikipedia.org/wiki/United_Kingdom_general_election,_1992"&gt;1992&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Blair horror show that followed was.... horrific. I don't think I've ever
felt as let down by an organisation as I did by that Labour government.&lt;/p&gt;
&lt;p&gt;Fast forward to this year and I was really hopeful that, perhaps, Labour would
be back in government, and this time, lessons would have been learnt. I wasn't
as enthusiastic as before but I was cautiously optimistic.&lt;/p&gt;
&lt;p&gt;Sadly, it wasn't to be.&lt;/p&gt;
&lt;p&gt;After this happened, and looking around me and seeing where we were now and
where we were heading, I found myself thinking that, perhaps, this time, it
was time to break my "no joining" rule. I started to seriously consider joining
Labour, lending some sort of support, somehow being involved and taking part.&lt;/p&gt;
&lt;p&gt;That's when I first noticed the whole business of being able to take part in
the Labour leadership election by being a supporter. This seemed like the
perfect way to dip my toe in, see how I felt about being associated in some
way, get a feel for how things worked and, perhaps, depending on how it all
went, actually join.&lt;/p&gt;
&lt;p&gt;So I paid my £3.00 and looked forward to the process that was to follow.&lt;/p&gt;
&lt;p&gt;I then waited, and waited, and waited, and then on Saturday this happened:&lt;/p&gt;
&lt;p&gt;&lt;img alt="I got purged" src="/attachments/2015/09/07/IGotPurged.png"&gt;&lt;/p&gt;
&lt;p&gt;In other words.... I got &lt;a href="https://twitter.com/hashtag/labourpurge"&gt;purged&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And a couple of events before this have me wondering and a little suspicious
of how this went down.&lt;/p&gt;
&lt;p&gt;I'll make clear here though: my application to be a supporter was 100%
genuine. As I say above, this was a first step on a road that I felt might
actually end up with me joining a party -- something I've never done before.
It wasn't something I did lightly. It was something I did after conversations
with a couple of other people where the conversations were about genuine
concern with how our country is shaping up right now.&lt;/p&gt;
&lt;p&gt;Even as late as a week before I got the above email I was having a conversation
with my nephew who, I'm deeply proud to say, is a very politically-aware
teenager (far more than I was at his age) and is actually a member of the
Labour Party. The conversation was about how I was starting to trust the party
again and how I was even considering joining depending on how events went.&lt;/p&gt;
&lt;p&gt;My application wasn't some joke thing, wasn't done on a whim, wasn't done to
try and skew any result. It was done because it was something I cared about
and wanted to explore further.&lt;/p&gt;
&lt;p&gt;Anyway, come late on last week I'd had no sort of ballot email and, prompted
by a couple of emails from a couple of the leadership campaign groups, I
filled in the form to ask them to hurry it up. I think it was late on Thursday
evening (2015-09-03) or early Friday morning (2015-09-04).&lt;/p&gt;
&lt;p&gt;A little later on Friday this happened (Anroid twitter):&lt;/p&gt;
&lt;p&gt;&lt;img alt="A follow from someone involved in Labour" src="/attachments/2015/09/07/Screenshot_2015-09-07-11-07-16.png"&gt;&lt;/p&gt;
&lt;p&gt;Same follow as seen from Tweetdeck:&lt;/p&gt;
&lt;p&gt;&lt;img alt="A follow from someone involved in Labour" src="/attachments/2015/09/07/Screen Shot 2015-09-07 at 16.17.06.png"&gt;&lt;/p&gt;
&lt;p&gt;I've no idea who &lt;a href="https://twitter.com/polycarponkundi"&gt;@polycarponkundi&lt;/a&gt; is
but it seemed clear from their timeline that they are a Labour supporter or
even member and that they are a strong supporter of the Liz Kendall leadership
campaign.&lt;/p&gt;
&lt;p&gt;I didn't think too much of the follow; it seemed like an unusual coincidence
that I'd chase up my ballot email and then someone apparently involved in
the party would follow me, but coincidences happen.&lt;/p&gt;
&lt;p&gt;Then, the following day, I get the letter telling me to sod off. Suddenly the
coincidence seems less of a coincidence. I go and check the profile and notice
that they've even unfollowed me, just a couple of days after the follow.&lt;/p&gt;
&lt;p&gt;&lt;img alt="That account no longer follows me" src="/attachments/2015/09/07/Screen Shot 2015-09-07 at 16.21.45.png"&gt;&lt;/p&gt;
&lt;p&gt;Note the lack of "follows @davepdotorg" in the profile?&lt;/p&gt;
&lt;p&gt;Very odd.&lt;/p&gt;
&lt;p&gt;Right now I'm not drawing any firm conclusions about what happened, and I have
&lt;a href="https://twitter.com/davepdotorg/status/640829279966765056"&gt;asked them what the follow and unfollow was all about&lt;/a&gt;.
It would be unfair of me to decide the events were connected without asking
first.&lt;/p&gt;
&lt;p&gt;All of this though has made something clear to me. Labour have decided that
they never want my support, ever again. I have it in writing. Well, sort of.&lt;/p&gt;
&lt;p&gt;What I actually have in writing is an email that says &lt;em&gt;"we're taking and keeping
your £3.00 and we're calling you a liar while we do this. If you want to
prove that you're not a liar you need to actually join us, actually send us
even more money. Oh, and by the way, we're not going to tell you what evidence
we have that you're a liar, so ner."&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Thank you Labour. At least I know where I stand now. You can safely assume
that you'll never have my support ever again.&lt;/p&gt;</content><category term="misc"></category><category term="Politics"></category><category term="Labour"></category><category term="Labour Purge"></category></entry><entry><title>Unknown promo</title><link href="https://blog.davep.org/2015/09/04/unknown-promo.html" rel="alternate"></link><published>2015-09-04T08:53:39+01:00</published><updated>2015-09-04T08:53:39+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-09-04:/2015/09/04/unknown-promo.html</id><summary type="html">&lt;p&gt;Ahh, Google, knower of all things that can be known about me, tracker of all
things that can be tracked about me, controller of my phone and even my
watch, able to use Now to suggest stuff I need to know even before I need to
know it.&lt;/p&gt;
&lt;p&gt;Tell me …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ahh, Google, knower of all things that can be known about me, tracker of all
things that can be tracked about me, controller of my phone and even my
watch, able to use Now to suggest stuff I need to know even before I need to
know it.&lt;/p&gt;
&lt;p&gt;Tell me again what promo that 10GB was from...&lt;/p&gt;
&lt;p&gt;&lt;img alt="Unknown Promo" src="/attachments/2015/09/04/UnknownPromo.png"&gt;&lt;/p&gt;</content><category term="misc"></category><category term="Google"></category><category term="Google Drive"></category></entry><entry><title>Full Apple keyboard on Windows machine</title><link href="https://blog.davep.org/2015/08/17/full-apple-keyboard-on-windows-machine.html" rel="alternate"></link><published>2015-08-17T11:31:15+01:00</published><updated>2015-08-17T11:31:15+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-08-17:/2015/08/17/full-apple-keyboard-on-windows-machine.html</id><summary type="html">&lt;p&gt;I seem to have somehow messed up my left hand. I'm not sure what the problem is
yet, I'm speaking to the doctor and have had an x-ray to check out one possible
cause, but the simple fact is that my left hand has an issue. Sometimes the
arm is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I seem to have somehow messed up my left hand. I'm not sure what the problem is
yet, I'm speaking to the doctor and have had an x-ray to check out one possible
cause, but the simple fact is that my left hand has an issue. Sometimes the
arm is painful, pretty much all the time a couple of fingers are near-numb.
One unfortunate side-effect of this is that I'm finding typing rather
uncomfortable. Except, that is, when I'm typing in my
&lt;a href="/2015/06/27/my-first-couple-of-weeks-with-an-imac.html"&gt;iMac&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Given that the vast majority of the typing I do is on my Windows 7 desktop
machine I decided it was time to look at getting a new keyboard, one that
was as comfortable to type on as the Apple keyboard. Given that I really needed
to be in a position where I could actually try the keyboards out I headed
off to the local PC World.&lt;/p&gt;
&lt;p&gt;Long story short: none of the Windows-oriented keyboards I tried did it for me.
None were as comfortable as the Mac keyboard. I tried a few a couple of times
and then suddenly had an idea... Apple do a full-size keyboard and, from what
I've seen in the past, it does work with Windows, after a fashion. So I went
to talk to the Apple guy, checked they had one in stock, handed over £40 and
headed home again.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Apple Keyboard" src="/attachments/2015/08/17/Apple-Keyboard.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Having now worked with it for a couple of days I think this might be one of
the best keyboard purchases I've ever made.&lt;/p&gt;
&lt;p&gt;It's not ideal, of course. The keyboard isn't designed to work with Windows,
it's designed for the Mac. But for the most part I'm finding that it's not
confusing and I'm adapting just fine.&lt;/p&gt;
&lt;p&gt;I had to go searching for an unofficial layout that I could install (one
that's actually old enough that it doesn't even say it supports Windows 7)
and installing that seems to have cured a few issues. The issues I do have
remaining are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Depending on the application I'm in, @ and " are swapped. Really, I'm not
kidding. In SublimeText @ and " are the right way round; in Skype they're the
wrong way round. I suspect that this might be down to the fact that I need
to restart applications so they take up the new mapping (a reboot of the machine
might be in order here).&lt;/li&gt;
&lt;li&gt;The keyboard has no marked insert toggle key. There is one, it's the 0 on
the numeric keyboard if you have (also missing, but with a mapping) numlock
turned off.&lt;/li&gt;
&lt;li&gt;Alt and Win are the wrong way round. The Cmd key acts as the Win key and it
is in the same position as Alt is normally in. I'm actually adapting to this
pretty quickly.&lt;/li&gt;
&lt;li&gt;Apple hates the # key. Much like I have problems typing # on the iMac, the
same issue exists when typing on Windows too. Whereas on the iMac I have to
use Alt-3 to get a #, on the Windows machine I have to use Ctrl-Alt-3. Not
ideal but it works.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They're the main issues I've discovered so far. It's possible that there are
other niggles waiting for me but, hopefully, there's workarounds for them too.
Mostly though I'm finding that the small adjustments I have to make to how I
work are worth it given just how comfortable this keyboard is to type on.&lt;/p&gt;
&lt;p&gt;I really do wish there was a Windows-oriented keyboard that had the exact same
build quality.&lt;/p&gt;</content><category term="misc"></category><category term="Apple"></category><category term="keyboard"></category><category term="Windows"></category></entry><entry><title>Bloody Facebook</title><link href="https://blog.davep.org/2015/08/13/bloody-facebook.html" rel="alternate"></link><published>2015-08-13T09:15:45+01:00</published><updated>2015-08-13T09:15:45+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-08-13:/2015/08/13/bloody-facebook.html</id><summary type="html">&lt;p&gt;I've never really liked Facebook. I forget exactly when I ended up on there --
perhaps 2009 or so -- but I can remember exactly who to blame. It was all the
fault of &lt;a href="http://richd.me/"&gt;Rich Daley&lt;/a&gt;. On an atheism-oriented BB that has
long since fallen off the net he convinced me that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've never really liked Facebook. I forget exactly when I ended up on there --
perhaps 2009 or so -- but I can remember exactly who to blame. It was all the
fault of &lt;a href="http://richd.me/"&gt;Rich Daley&lt;/a&gt;. On an atheism-oriented BB that has
long since fallen off the net he convinced me that it was "&lt;em&gt;X&lt;/em&gt; for adults"
(where &lt;em&gt;X&lt;/em&gt; was a popular early social network whose name totally escapes me
now) and I fell for it.&lt;/p&gt;
&lt;p&gt;And I hated it.&lt;/p&gt;
&lt;p&gt;But I stuck with it.&lt;/p&gt;
&lt;p&gt;I stuck with it until September 2011. I realised that after
a few years of using it I still found the site confusing, ugly, unfriendly
(in terms of design) and somewhat invasive too. On top of that I'd made the
common mistake of allowing anyone I'd ever run unto on the net add me there
and so the contact list was huge and out of control -- I didn't really know
who most of the people were. So &lt;a href="https://plus.google.com/+DavePearson/posts/jPqNPhg7idp"&gt;I deleted the account&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Back then there was, as I recall, no explicit delete option, or to do the
delete thing you had to deactive and wait 14 days, or some such thing. I know
that I followed the advice in the docs and did whatever was required to have my
account totally deleted.&lt;/p&gt;
&lt;p&gt;This week, at the urging of friends, I finally decided to create an account
again. I initially tried to create the account using the old email address
(well, actually, a variation on it that would appear to be the same to
systems that understand the significance of a + in an email address) but it
told me that the address was in use. Which was a worry.&lt;/p&gt;
&lt;p&gt;So I created the account using a different address (my actual "main" address
this time, as opposed to my Google address) and set about setting it up.&lt;/p&gt;
&lt;p&gt;&lt;img alt="So I'm on Facebook again" src="/attachments/2015/08/13/Screen Shot 2015-08-13 at 08.46.26.png"&gt;&lt;/p&gt;
&lt;p&gt;In doing so I tried to tell it that I wanted to associate my old address with this
new account and, again, it refused, telling me there was an active account for
that address.&lt;/p&gt;
&lt;p&gt;I then went and checked and, sure enough, there was my old account, still
there, all the data, nothing had changed!&lt;/p&gt;
&lt;p&gt;Fucking Facebook!&lt;/p&gt;
&lt;p&gt;These days, however, it does look like &lt;a href="https://www.facebook.com/help/224562897555674"&gt;there are very clear instructions on
how to actually fully delete an account&lt;/a&gt;, so I've tried again for the old
account. It's another 14 days of deactivation but with an actual promise that,
yes, this time, they'll delete all my shit.&lt;/p&gt;
&lt;p&gt;They better.&lt;/p&gt;
&lt;p&gt;Meanwhile... I have a shiny new Facebook account. And I still find it confusing,
ugly, unfriendly (in terms of design) and somewhat invasive.&lt;/p&gt;</content><category term="misc"></category><category term="Facebook"></category></entry><entry><title>Best update ever</title><link href="https://blog.davep.org/2015/08/03/best-update-ever.html" rel="alternate"></link><published>2015-08-03T12:46:12+01:00</published><updated>2015-08-03T12:46:12+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-08-03:/2015/08/03/best-update-ever.html</id><content type="html">&lt;p&gt;Oh goodie! An update for Adobe Creative Cloud on the iMac!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Got an update" src="/attachments/2015/08/03/Screen Shot 2015-08-03 at 12.40.57.png"&gt;&lt;/p&gt;
&lt;p&gt;Oh! Improved update experience too! I really must install this then...&lt;/p&gt;
&lt;p&gt;&lt;img alt="Got an update" src="/attachments/2015/08/03/Screen Shot 2015-08-03 at 12.41.30.png"&gt;&lt;/p&gt;
&lt;p&gt;Well fuck.&lt;/p&gt;</content><category term="misc"></category><category term="Adobe"></category><category term="iMac"></category><category term="OS X"></category><category term="Creative Cloud"></category></entry><entry><title>Evernote discovers pop-up advertising</title><link href="https://blog.davep.org/2015/07/09/evernote-discovers-pop-up-advertising.html" rel="alternate"></link><published>2015-07-09T16:47:20+01:00</published><updated>2015-07-09T16:47:20+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-07-09:/2015/07/09/evernote-discovers-pop-up-advertising.html</id><summary type="html">&lt;p&gt;By the looks of things, with the recent updates to their desktop applications,
Evernote have discovered the joys of pop-ups for advertising purposes. I'm
finding it just as annoying as it was back in the days when people thought it
was the smart way to make you buy things on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;By the looks of things, with the recent updates to their desktop applications,
Evernote have discovered the joys of pop-ups for advertising purposes. I'm
finding it just as annoying as it was back in the days when people thought it
was the smart way to make you buy things on the web.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Yay! Pop-up advertising!" src="/attachments/2015/07/09/Screen Shot 2015-07-09 at 16.15.25.png"&gt;&lt;/p&gt;
&lt;p&gt;Now, to be fair, the pop-up you see above is the one on my iMac and that at
least has the good taste to only pop up &lt;em&gt;within&lt;/em&gt; the application itself
(although the Evernote icon in the dock at the bottom of the screen kept
jumping around like it &lt;em&gt;really&lt;/em&gt; wanted attention when this happened). The
Windows one, however, is much worse.&lt;/p&gt;
&lt;p&gt;I've actually not had a chance to capture a copy yet as it normally has the
habit of getting in the way while I'm actually trying to do something; but
the Windows version has the bad taste to actually pop up over my desktop. Yes,
that's right, over my bloody desktop!&lt;/p&gt;
&lt;p&gt;In both cases it's advertising Evernote's paid-for tiers in a way that it never
has before. It's seriously annoying.&lt;/p&gt;
&lt;p&gt;Now, before anyone pipes up that it's a company that needs money to keep things
going... I know. I don't mind that. I don't mind the odd nag here and there.
More to the point I actually don't mind paying for software and services. I
actually do pay for software and services. There's a handful of different tools
and the like that I make good use of every month which I pay for because they're
worth paying for.&lt;/p&gt;
&lt;p&gt;Evernote is one that I've been considering paying for too. The problem is, what
they offer in the paid versions isn't really anything I need. Everything I use
Evernote for can be done in the free version; I have no &lt;em&gt;need&lt;/em&gt; to pay for it.&lt;/p&gt;
&lt;p&gt;There is, of course, a good argument to be made in favour of the idea that if
you benefit from a service you should pay for it anyway so that it doesn't go
away. Having watched the likes of Catch and
&lt;a href="https://en.wikipedia.org/wiki/Springpad"&gt;Springpad&lt;/a&gt; disappear I think that's
a very compelling argument and one that has had me, in recent months, thinking
I should buy some paid-for Evernote tier.&lt;/p&gt;
&lt;p&gt;The problem I face now though is this: this move by Evernote to go with a
pop-up nagware model, especially one that's willing to pop up nagging windows
on my desktop, gives me the feeling that the company is struggling and getting
desperate. While this &lt;em&gt;should&lt;/em&gt; have me thinking that now is a really good time
to pay for something I appreciate it's actually having the opposite effect.
It's having me wonder if, in fact, I should be looking for an alternative that
isn't giving this impression.&lt;/p&gt;
&lt;p&gt;Yes, even one that I'd need to pay for.&lt;/p&gt;</content><category term="misc"></category><category term="Evernote"></category></entry><entry><title>Odd iPod update</title><link href="https://blog.davep.org/2015/07/01/odd-ipod-update.html" rel="alternate"></link><published>2015-07-01T20:31:26+01:00</published><updated>2015-07-01T20:31:26+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-07-01:/2015/07/01/odd-ipod-update.html</id><summary type="html">&lt;p&gt;Last night, before heading for bed, I noticed that there was an update available
for OS X on the iMac, and also for iTunes. Despite the late hour I decided
to do the update anyway. OS X updated pretty smoothly (albeit with some rather
unhelpful progress bars that appear to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last night, before heading for bed, I noticed that there was an update available
for OS X on the iMac, and also for iTunes. Despite the late hour I decided
to do the update anyway. OS X updated pretty smoothly (albeit with some rather
unhelpful progress bars that appear to give estimated times that have no
relation to reality), as did iTunes.&lt;/p&gt;
&lt;p&gt;I was then told that there was an update for my iPod as well (all part of this
new thing where Apple have invented Spotify, obviously). I let that start doing
its thing and that's where things got odd. First it started the update and the
iPod appeared to insist that it wasn't plugged into the iMac, even though it
was. Then I gave it a second go (after unplugging it and plugging it in
again) and it all seemed to go through just fine, only...&lt;/p&gt;
&lt;p&gt;&lt;img alt="When is 8.4 not 8.4, iPod?" src="/attachments/2015/07/01/Photo 01-07-2015 10 21 56.png"&gt;&lt;/p&gt;
&lt;p&gt;...while the iPod was pretty sure it was now running iOS 8.4, iTunes on the iMac
had other ideas:&lt;/p&gt;
&lt;p&gt;&lt;img alt="When is 8.4 not 8.4, iTunes?" src="/attachments/2015/07/01/Screen Shot 2015-07-01 at 10.22.16.png"&gt;&lt;/p&gt;
&lt;p&gt;The following morning iTunes kept insisting that it needed to do the update
so, even though the iPod was obviously up to date, I let it do it anyway. After
it'd gone through the update process again it still insisted that the iPod
was running 8.3 rather than 8.4. Until, that is, I unplgged it and plugged it
back in again.&lt;/p&gt;
&lt;p&gt;&lt;img alt="When is 8.4 not 8.4, iTunes?" src="/attachments/2015/07/01/Screen Shot 2015-07-01 at 10.26.20.png"&gt;&lt;/p&gt;
&lt;p&gt;So now it all seems fine. I just had to do a variation on "have you tried
turning it off and on again?"&lt;/p&gt;
&lt;p&gt;Once again I find myself running into things on a Mac that are very common
elsewhere, on other operating systems, and which Mac owners would often have
you believe weren't an issue.&lt;/p&gt;</content><category term="misc"></category><category term="Apple"></category><category term="Mac"></category><category term="iMac"></category><category term="iTunes"></category><category term="iPod"></category><category term="OS X"></category></entry><entry><title>My first couple of weeks with an iMac</title><link href="https://blog.davep.org/2015/06/27/my-first-couple-of-weeks-with-an-imac.html" rel="alternate"></link><published>2015-06-27T18:41:57+01:00</published><updated>2015-06-27T18:41:57+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-06-27:/2015/06/27/my-first-couple-of-weeks-with-an-imac.html</id><summary type="html">&lt;p&gt;My history with computers starts with a Sinclair ZX81 in the early 1980s,
followed shortly by a Vic20, then on to the BBC B and fairly quickly on to
very early IBM PC compatible machines. In the early 1990s I added OS/2 (during
the introduction of Warp) and not …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My history with computers starts with a Sinclair ZX81 in the early 1980s,
followed shortly by a Vic20, then on to the BBC B and fairly quickly on to
very early IBM PC compatible machines. In the early 1990s I added OS/2 (during
the introduction of Warp) and not too long after that GNU/Linux. Along the way
I've also used the odd Unix here and there as well as CP/M, RSTS and VMS.&lt;/p&gt;
&lt;p&gt;Aside from an inherited Mac whose model name escapes me, and whose operating
system version also escapes me, I've never really had too much exposure to
the world of Apple.&lt;/p&gt;
&lt;p&gt;A couple of weeks back all of that changed.&lt;/p&gt;
&lt;p&gt;It's quite a long time since I had a Unix of some form as a desktop machine
and I was starting to get the urge to have one again. During all of this time
I've had a GNU/Linux box or two available but for the past few years I've
always used them from the (dis)comfort of my Windows desktop. Generally that
was fine because the uses I had were not desktop.&lt;/p&gt;
&lt;p&gt;Anyway, long story short: I started out thinking that I wanted some form of
Unix on my desk again and, somehow, ended up walking out of a shop with
an iMac.&lt;/p&gt;
&lt;p&gt;Given the above history I thought it might be fun to jot down my experiences
in the first couple of weeks. This will be a vaguely random wander through my
experiences. It's not a review. It's not even really intended as a judgement
of the machine and the operating system. It's nothing more than a collection
of notes of what I found and my reaction to what I found.&lt;/p&gt;
&lt;h1&gt;The keyboard&lt;/h1&gt;
&lt;p&gt;The first strong reaction I had to the machine was regarding the keyboard. I
thought I was going to hate it. I've had the misfortune of using various
chiclet keyboards over the years and I've hated every single one. I find that I
can't type on them, that it doesn't feel right, and that it makes my fingers
ache badly if I spend too much time using them. My history and experiences
has always been such that I've generally preferred very mechanical-feeling
keyboards.&lt;/p&gt;
&lt;p&gt;This just wasn't the case with the iMac keyboard. I don't know why, I still
don't know why, but this feels like one of the most comfortable keyboards
I've ever typed on. Despite the keys being chiclet style they move in a very
positive way that really surprised me. It doesn't hurt to type, at all, and
I'm finding I can type faster on this keyboard than any other I've typed on
before.&lt;/p&gt;
&lt;p&gt;There is a flipside though. I find the whole design far too cramped. Even now,
a couple of weeks later, as I type this on it, I wish the keys were just a little
bigger and just a little more spaced out. I'm adjusting, of course -- much of
this is about muscle memory -- but it does mean that it's in a constant fight
with my "knowledge" of my other main keyboards.&lt;/p&gt;
&lt;p&gt;And then there's the keys that it lacks.&lt;/p&gt;
&lt;p&gt;I'm still finding that this is a terrible keyboard for a programmer. For one
thing, here on the UK version of the keyboard, there's no # key. At least,
there's no simple, comfortable, direct access to the # key. Any time I want
to type a # I have to shift my left hand to find the (I think it's called
the) option key and hit 3. Shift 3 is £. And it gets even worse. This setup
doesn't work at all in GNU emacs so I then have to put the keyboard in
Australian mode so I can use shift-3 to get a #.&lt;/p&gt;
&lt;p&gt;Why there isn't a proper # key is beyond me.&lt;/p&gt;
&lt;p&gt;And then there's the (on the version that came with this iMac) complete lack
of page keys as well as home and end. Overall this makes the whole keyboard
feel very unfriendly to programmers and also to writers in general.&lt;/p&gt;
&lt;p&gt;This, of course, is my bias and muscle memory from PCs showing. I'm still not
convinced that that bias and muscle memory is wrong.&lt;/p&gt;
&lt;h1&gt;The mouse&lt;/h1&gt;
&lt;p&gt;When I first started with it I hated the mouse. I should be fair and point out
that, overall, I hate mice anyway. For a good 20 years I've thrown away every
mouse I've ever had turn up with a machine and have made use of a trackball
instead. I find that a trackball gives me far more control and is far more
comfortable. So, initially, I put the Apple mouse to one side and plugged
in a trackball instead.&lt;/p&gt;
&lt;p&gt;For reasons I forget now I found myself needed to use the Apple mouse again.
Once I did that I decided to "force" myself to give it a fair shot and, now,
I'm glad I did. Much like with the keyboard, despite me having a bias against
what it is, this has turned out to be one of the most comfortable mice I've
ever used. It sits right in the hand, the lack of actual buttons means I don't
have to shape my hand to fit the design but, instead, the design allows for
how my hand rests. I also rather like the gestures too.&lt;/p&gt;
&lt;p&gt;This is the first mouse that has stayed on my desktop. I'm surprised.&lt;/p&gt;
&lt;p&gt;By the way, whoever thought that the "natural" scroll option, which is on by
default, was "natural", is barking mad.&lt;/p&gt;
&lt;h1&gt;The GUI&lt;/h1&gt;
&lt;p&gt;One of the main intended uses for this machine is the Unix shell, working
inside the terminal. Given that the actual UI of the OS doesn't matter so
much to me. That said, I'm finding it pretty pleasant. I find it a lot
tidier-looking than Windows, although I also find it more frustrating in
some places.&lt;/p&gt;
&lt;p&gt;One good example is in the Finder, when I have a folder open. I find that it's
quite common for me, on Windows, when I have an Explorer window open, to want
to copy the path of the folder for use elsewhere. That's very easy to do
because the path is in an edit field at the top of the window and can be
edited and copied. If there's a way to do this with the OS X Finder I've
yet to figure that one one.&lt;/p&gt;
&lt;p&gt;Another thing I'm still not getting used to, and I'm still very unconvinced by,
as a design decision, is the business of having an application's menus always
appear at the top of the screen disconnected from the application windows
themselves. I appreciate that this is a very Apple/Mac way of doing things
but I really can't get used to the idea -- especially given that it gives
the (incorrect) impression that the whole GUI is really single tasking.&lt;/p&gt;
&lt;p&gt;On the whole though most of this doesn't matter too much to me. Large parts
of what I'm doing is in the terminal window, with other parts of it being
in my editors of choice (either SublimeText or GNU emacs, depending on what
I'm doing) or inside Google Chrome. In other words the general experience is
one that carries over most of the main operating systems I've used on
desktop machines.&lt;/p&gt;
&lt;h1&gt;Installing software&lt;/h1&gt;
&lt;p&gt;For an operating system that prides itself on being simple to use and easy
to understand, and especially one whose bigger fans sell as being simple to
use and easy to understand (especially in relation to Windows), the whole
business of installing software seems very confusing and very scrappy.&lt;/p&gt;
&lt;p&gt;So far I've found a few different ways of installing software and none of it
makes a whole lot of sense to me without going and searching about it and
reading up on it. Sometimes I download an app and all I need to do is drag
it into the Applications folder. Other times I get a zip which I have to open
and then... it can go a couple of different ways. Sometimes I get a 'dmg' and
when I open that up I get a window where I have to drag one icon onto another
icon in that window to do the install. Sometimes I get something like the last
one I mention but instead I have to double-click on an icon that's in the
window.&lt;/p&gt;
&lt;p&gt;There might even be other options I've had to follow. I forget now.&lt;/p&gt;
&lt;p&gt;And then there's the business of removing software! That seems to be complete
chaos. In some cases you delete the app and it's all good. In other cases
you need to do that and hunt down some other bits and remove them too. In
other cases it seems like the author has supplied their own uninstaller.&lt;/p&gt;
&lt;p&gt;We've been here before. I know this setup rather well. This is exactly the
sort of world we lived in back when Windows 3.1 was a new thing. This came as
and still is a massive surprise to me: OS X is as sophisticated as a fancy
shell that ran on top of MS DOS when it comes to software management.&lt;/p&gt;
&lt;h1&gt;Doing the right thing, except when not&lt;/h1&gt;
&lt;p&gt;While I'm on the subject of the famous great design of the Mac... what's up
with the business of seeing the time format? The system preferences seem
very flexible when it comes to setting date and time formats. I really like
the dialog that provides this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Setting the date format" src="/attachments/2015/06/27/Screen Shot 2015-06-27 at 19.23.39.png"&gt;&lt;/p&gt;
&lt;p&gt;As you might see above, my preference when it comes to date formats is to have
everything in &lt;a href="https://en.wikipedia.org/wiki/ISO_8601"&gt;ISO 8601&lt;/a&gt; format.
Having set that I then noticed that the time shown in the menu bar on the
desktop was.... whatever the hell Apple appear to have decided for me!&lt;/p&gt;
&lt;p&gt;&lt;img alt="This is not the date format I asked for" src="/attachments/2015/06/27/Screen Shot 2015-06-27 at 19.26.18.png"&gt;&lt;/p&gt;
&lt;p&gt;Even Windows lets me set the date format as I want it in the desktop time
display. Apple, meanwhile, seem to provide a great method of letting you
set your date and time formats "just so" and then they seem to just go right
ahead and ignore your preference in the one place you'll see it the most.&lt;/p&gt;
&lt;h1&gt;If you have a Mac, you have software I wrote on it (I think)&lt;/h1&gt;
&lt;p&gt;From what I could tell every Mac has a copy of GNU emacs installed, out of the
box. That actually kind of impressed me. Sure, it's a rather out of date
version of GNU emacs, but it's a copy of GNU emacs and that's all that matters.&lt;/p&gt;
&lt;p&gt;&lt;img alt="It's a GNU emacs!" src="/attachments/2015/06/27/Screen Shot 2015-06-27 at 19.31.18.png"&gt;&lt;/p&gt;
&lt;p&gt;That fact actually means something rather interesting, to me. See, there's
two small packages that are part of GNU emacs that I originally wrote. One is
called 5x5, the other quickurl.&lt;/p&gt;
&lt;p&gt;&lt;img alt="My rubbish claim to fame" src="/attachments/2015/06/27/Screen Shot 2015-06-27 at 19.32.58.png"&gt;&lt;/p&gt;
&lt;p&gt;So, yeah, from what I can see, on every new Mac you'll find two bodies of
code that I originally wrote, pre-installed.&lt;/p&gt;
&lt;p&gt;Yeah, I know, shitty claim to fame. I'll take it anyway. ;)&lt;/p&gt;
&lt;h1&gt;Overall initial impression&lt;/h1&gt;
&lt;p&gt;Overall my initial impression is a good one. The Apple iMac seems to make for
a pretty good Unix workstation. The keyboard layout could do with some work
to make it more friendly to programmers (well, to this programmer) but
overall it all makes sense and is easy to navigate.&lt;/p&gt;
&lt;p&gt;If most of what you do is actually online then I'd say that an iMac would be
a huge waste of money. If you want a desktop machine for web browsing and
generally working "in the cloud" then you'd do a lot better to buy a Chromebase
(or, of course, a Chromebook if you're looking at Macbooks). On top of this,
if most of what you're doing is online but you want to do some client-side
stuff such as image/video editing and gaming then I struggle to see how an iMac
would be a good choice too. For the money it's hilariously underpowered
when compared to a reasonably equivalent Windows PC (or, of course, GNU/Linux
machine if what you want to do can be done there).&lt;/p&gt;
&lt;p&gt;My own reasons for purchase were about having a desktop Unix workstation that
I could install various compilers on so I could muck about and work on some
fun projects I want to get done. It was an unusual extravagance that I don't
regret and, so far, I've been pleased with.&lt;/p&gt;
&lt;p&gt;There's very few people I'd actually recommend one to though as it seems
pretty clear to me that, generally, their money could buy them so much more.&lt;/p&gt;
&lt;p&gt;But it's a nice new shiny toy. ;)&lt;/p&gt;</content><category term="misc"></category><category term="Mac"></category><category term="Apple"></category><category term="iMac"></category><category term="Unix"></category><category term="Emacs"></category></entry><entry><title>Wear timer issue fixed, sort of</title><link href="https://blog.davep.org/2015/06/26/wear-timer-issue-fixed-sort-of.html" rel="alternate"></link><published>2015-06-26T12:02:31+01:00</published><updated>2015-06-26T12:02:31+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-06-26:/2015/06/26/wear-timer-issue-fixed-sort-of.html</id><summary type="html">&lt;p&gt;Following on from
&lt;a href="http://127.0.0.1:4000/2015/06/25/did-google-just-break-wear-timers.html"&gt;yesterday's problem with the Android Wear timer&lt;/a&gt;
I think I now have a solution. It came up
&lt;a href="https://plus.google.com/+DavePearson/posts/RZujypG7EyF"&gt;while chatting with Mike McLoughlin about the issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I got to thinking that this problem felt like one that I've seen a number of
times before with Google stuff. One …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Following on from
&lt;a href="http://127.0.0.1:4000/2015/06/25/did-google-just-break-wear-timers.html"&gt;yesterday's problem with the Android Wear timer&lt;/a&gt;
I think I now have a solution. It came up
&lt;a href="https://plus.google.com/+DavePearson/posts/RZujypG7EyF"&gt;while chatting with Mike McLoughlin about the issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I got to thinking that this problem felt like one that I've seen a number of
times before with Google stuff. One thing that's rather common (in many cases
for very obvious reasons -- you can't cover the whole world in one go) with
Google is how they struggle to get languages and localisation right. This
felt like it was a similar issue. Mike had reported that his watch appeared
to be unaffected by the issue (I'm guessing he's on the latest version of
Wear -- the conversation headed off in a different direction before that
became necessary) so I checked what his language was on his phone. Turns out
he was the same as me: British English.&lt;/p&gt;
&lt;p&gt;So much for that idea.&lt;/p&gt;
&lt;p&gt;But then he suggested switching to US English and back again.&lt;/p&gt;
&lt;p&gt;Happy enough to apply a very Microsoft "turn it off and on again" approach to
a Google device (really, all big tech companies really are the same and
really do suffer the same issues) I switched to en-US on the phone and tried
setting a timer in voice on the watch.&lt;/p&gt;
&lt;p&gt;It worked!&lt;/p&gt;
&lt;p&gt;So then I switched back to en-GB on the phone and...&lt;/p&gt;
&lt;p&gt;&lt;img alt="I appear to have timers working again" src="/attachments/2015/06/26/Timer Running on Watch.png"&gt;&lt;/p&gt;
&lt;p&gt;...it still worked!&lt;/p&gt;
&lt;p&gt;I've tried setting timers in voice on the watch a few times since and it's yet
to fail.&lt;/p&gt;
&lt;p&gt;It would appear, as odd as it is, that this is the fix. Well, a fix.&lt;/p&gt;</content><category term="misc"></category><category term="Google"></category><category term="Android"></category><category term="Wear"></category><category term="Android Wear"></category><category term="Watch"></category><category term="Moto360"></category></entry><entry><title>Did Google just break Wear timers?</title><link href="https://blog.davep.org/2015/06/25/did-google-just-break-wear-timers.html" rel="alternate"></link><published>2015-06-25T22:27:02+01:00</published><updated>2015-06-25T22:27:02+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-06-25:/2015/06/25/did-google-just-break-wear-timers.html</id><summary type="html">&lt;p&gt;I didn't pay too much attention to it when it happened but it looks like
Android Wear, on the phone side, got an update in the last 24 hours. Only
this evening did I notice that this seems to have broken something I heavily
use on my watch: timers.&lt;/p&gt;
&lt;p&gt;I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I didn't pay too much attention to it when it happened but it looks like
Android Wear, on the phone side, got an update in the last 24 hours. Only
this evening did I notice that this seems to have broken something I heavily
use on my watch: timers.&lt;/p&gt;
&lt;p&gt;I find the timer facility on Wear especially useful when I'm cooking, either
to ensure that different parts of the cooking process come together at a
sensible time, or when I put something on and need to go off and do something
else (perhaps come back to the office while and get on with some work as
something bakes, etc).&lt;/p&gt;
&lt;p&gt;To be clear, the timer app is still there and, if I select to start a timer
"by hand" on the watch, it works as it always has done. Also, if I say
"OK Google, set a timer for five minutes" it still does the voice recognition
thing:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Google still understands the request" src="/attachments/2015/06/25/Android Wear Screenshot.png"&gt;&lt;/p&gt;
&lt;p&gt;It's what happens next that's the problem. Before it would have started a
countdown timer. As well as vibrating the watch when the timer runs down the
timer app also has the very useful feature of showing the countdown on the watch
face. This means you can glance every so often and see how long is left to go.&lt;/p&gt;
&lt;p&gt;Instead, as of today (well, this evening when I made dinner was when I first
noticed it), it starts an on-watch alarm app instead! This is utterly useless.
Sure, it does still vibrate the watch when the alarm time arrives, and the
alarm time is the right offset from when the timer was requested, but it
lacks the on-face countdown.&lt;/p&gt;
&lt;p&gt;It's an alarm.&lt;/p&gt;
&lt;p&gt;It's not a timer!&lt;/p&gt;
&lt;p&gt;Looking in the Wear app it would appear that the correct application is
assigned to the correct action:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Google still understands the request" src="/attachments/2015/06/25/Screenshot_2015-06-25-22-22-03.png"&gt;&lt;/p&gt;
&lt;p&gt;As such, I'm at a loss on how to fix this. I can't find anything on the watch
itself that could be done to change this, and I've tried restarting the
watch on the off chance that something went a bit odd.&lt;/p&gt;
&lt;p&gt;It turns out too that I'm not alone. I
&lt;a href="https://www.reddit.com/r/AndroidWear/comments/3b3cu8/i_cant_set_a_timer_via_voice/"&gt;found a thread on reddit where others have the same problem&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What really bugs me about this is that this is very Google. I've run into this
sort of thing so many times before, be it on Android, ChromeOS or in their
apps in general. They'll change (or screw up) something that's very simple and
straightforward and in common use, something that &lt;em&gt;should&lt;/em&gt; show up in
testing pretty easily. Surely there has to be some way of pushing out an update
without screwing up the apps that are assigned to actions?&lt;/p&gt;
&lt;p&gt;As much as I really like what Google offer, as much as I value their services
and global platform over the other choices, this sort of thing frustrates the
hell out of me.&lt;/p&gt;</content><category term="misc"></category><category term="Google"></category><category term="Android"></category><category term="Wear"></category><category term="Android Wear"></category><category term="Watch"></category><category term="Moto360"></category></entry><entry><title>Medium login on Android and iOS</title><link href="https://blog.davep.org/2015/06/25/medium-login-on-android-and-ios.html" rel="alternate"></link><published>2015-06-25T15:39:26+01:00</published><updated>2015-06-25T15:39:26+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-06-25:/2015/06/25/medium-login-on-android-and-ios.html</id><summary type="html">&lt;p&gt;I woke up this morning to find that one of my more recent favourite websites,
&lt;a href="http://medium.com"&gt;Medium&lt;/a&gt;, had finally released an Android application.
I'm more of an avid reader than a writer on there (I've only ever written
2 articles on there, and have toyed with the import facility too) so …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I woke up this morning to find that one of my more recent favourite websites,
&lt;a href="http://medium.com"&gt;Medium&lt;/a&gt;, had finally released an Android application.
I'm more of an avid reader than a writer on there (I've only ever written
2 articles on there, and have toyed with the import facility too) so I imagine
the app won't make too much of a difference to me, but it was nice to see
that something that had been iOS-only was now on Android too.&lt;/p&gt;
&lt;p&gt;I installed it on my Nexus 7 and Nexus 6 and then, given that
&lt;a href="http://blog.davep.org/2015/06/23/and-now-for-some-ios.html"&gt;I have an iOS device now&lt;/a&gt;,
I installed it on that too. In doing so I noticed a very curious difference:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Medium login on Android" src="/attachments/2015/06/25/Screenshot_2015-06-25-11-24-11.png"&gt;&lt;/p&gt;
&lt;p&gt;vs:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Medium login on iOS" src="/attachments/2015/06/25/Photo 25-06-2015 09 38 02.png"&gt;&lt;/p&gt;
&lt;p&gt;Notice how Android has Google as an option whereas that's not an option on
iOS? The curious thing is, when I installed it on my Android devices,
I logged in with my Google account and it all just worked. I was into my
account, there were the sorts of stories I'd be interested in, and there were
the couple of stories I'd written.&lt;/p&gt;
&lt;p&gt;On iOS I logged in with my Twitter account and the same thing happened (I
don't use and don't have an account on Facebook).&lt;/p&gt;
&lt;p&gt;It was than that I had to think about how I even logged into Medium normally
(via the web, which is what I'd always used up until now). Seems I'd always
used the Twitter login (which would make sense).&lt;/p&gt;
&lt;p&gt;So here's the thing that's got me wondering now: when I logged in with my
Google account, how did it make the connection to my Twitter account? I mean,
sure, there's got to be enough data kicking around to actually make the
connection and it seems like a safe enough one to make but... huh? I must be
missing something here though, it's as unexpected as it is handy.&lt;/p&gt;
&lt;p&gt;It's also worth noting that if you go to log in to the website Google accounts
are not an option (there is a sub-option for "Android Users" where you have
to create an account based off your email address, from what I can see).&lt;/p&gt;
&lt;p&gt;I'm left trying to decide if I missed a step here, if this is clever, or if this
is just plain creepy (and who's responsible for having made the connection).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Edit to add:&lt;/em&gt; &lt;a href="https://twitter.com/caramev"&gt;Cara&lt;/a&gt; from Medium was kind enough
to notice my tweet pointing to this post and &lt;a href="https://twitter.com/caramev/status/614098764450496512"&gt;let me know the how and why of
the above&lt;/a&gt;. Turns out
it's what Rich suggested in the comments.&lt;/p&gt;</content><category term="misc"></category><category term="iOS"></category><category term="Android"></category><category term="Medium"></category></entry><entry><title>And now for some iOS</title><link href="https://blog.davep.org/2015/06/23/and-now-for-some-ios.html" rel="alternate"></link><published>2015-06-23T23:09:32+01:00</published><updated>2015-06-23T23:09:32+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-06-23:/2015/06/23/and-now-for-some-ios.html</id><summary type="html">&lt;p&gt;I'm on a bit of a "explore other universes" trip at the moment, it would seem.
The other weekend I finally cracked and purchased my first ever OS X device
and, earlier today, I purchased my first ever iOS device.&lt;/p&gt;
&lt;p&gt;Don't worry, I'm not abandoning the world of Android; far …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm on a bit of a "explore other universes" trip at the moment, it would seem.
The other weekend I finally cracked and purchased my first ever OS X device
and, earlier today, I purchased my first ever iOS device.&lt;/p&gt;
&lt;p&gt;Don't worry, I'm not abandoning the world of Android; far from it if my
experiences of iOS so far are anything to go by. However, having started
slowly working through a book that teaches Cocoa and Swift I thought it might
be interesting to be in a position, at some point in the future, to be able
to make and throw an app at an iOS device and it seemed the most affordable
way of doing that was to grab an iPod.&lt;/p&gt;
&lt;p&gt;So I did.&lt;/p&gt;
&lt;p&gt;&lt;img alt="I now own an iPod" src="/attachments/2015/06/23/Photo 23-06-2015 22 50 51.png"&gt;&lt;/p&gt;
&lt;p&gt;One of the first things I did, and I'm glad to find it was possible, was to
load it up with apps that make it into a reasonable Google device (so, so far,
I've got Gmail, Google+, Google Calendar and Google Music on there -- need
to sort Google Drive too, at least). Next up was to get some music on it too --
might as well actually use it to listen to music, I guess.&lt;/p&gt;
&lt;p&gt;That actually turned out to be more fun than I was expecting. See, I gave up
on iTunes many years ago, back when it was pretty much the only legit method
of buying music online. Since then I've tended to work with ripped copies of
my CD collection or I've listened to music I've bought on Google Play (the
latter bulked out with the former thanks to Google's music uploader).&lt;/p&gt;
&lt;p&gt;And here's the fun part: if you use the recent Google Music Chrome app (which,
it seems, allows unlimited downloads of your albums) to pull the music down,
and drop them into iTune's import folder, magic happens and iTunes gets
nearly populated with music. Even better, music that I'd originally ripped as
WMAs comes back own as mp3s, so solving the problem of iTunes not doing WMAs.&lt;/p&gt;
&lt;p&gt;Handy!&lt;/p&gt;
&lt;p&gt;So, anyway, that's the iPod set up as a generally useful device.&lt;/p&gt;
&lt;p&gt;As for iOS itself.... Ugh. I'm far from impressed. Compared to Android it
feels old and clunky and very constraining. For example, I can't &lt;em&gt;really&lt;/em&gt;
control what's on the home page. Sure, I can move things about, and I can
even remove apps I've installed, but I can't remove/hide Apple's own apps
at all. The best I've managed to do is drop all of them in a folder together
and ignore that folder.&lt;/p&gt;
&lt;p&gt;I'm finding the whole navigation thing kind of frustrating too. The back of
a standard back button -- as you have on Android -- means that different apps
seem to do different things in terms of allowing back navigation. I'm also
still unsure how you can easily task switch (if there is a way of doing that
it's not obvious to me).&lt;/p&gt;
&lt;p&gt;Another thing that's frustrating me is "AirDrop". I tried to use it to get
the screenshot you see above onto my iMac but nothing I did would make it work.
The iPod would see the iMac and the iMac would see the iPod but the filed
didn't appear to want to move at all.&lt;/p&gt;
&lt;p&gt;Yet another thing that seems rather unstable is the whole business of WiFi
sync. That seems like a sensible idea -- let iTunes on the Mac know that
the iPod lives on the same network and have them sync that way. Problem is
that I'm finding that it drop out during a sync more often than not. The only
reliable method of doing a sync that I've found is to use the USB cable.&lt;/p&gt;
&lt;p&gt;I've yet to write the blog post about my experiences with the Mac so far
but what I'm finding here fits in with what I've found with the Mac: some
of the ideas are really rather clever but they just don't quite work as
well as people would seem to want to have you believe. Apple gear has this
reputation of "just working" and I'm finding that this really doesn't seem
to be the case at all.&lt;/p&gt;
&lt;p&gt;Still, it's all a learning process and I know far more about Apple gear now
than I did a week or so back, and I'm learning more as I go.&lt;/p&gt;</content><category term="misc"></category><category term="Mac"></category><category term="Apple"></category><category term="iOS"></category><category term="iPod"></category></entry><entry><title>ChromeOS file manager got better</title><link href="https://blog.davep.org/2015/06/22/chromeos-file-manager-got-better.html" rel="alternate"></link><published>2015-06-22T17:04:15+01:00</published><updated>2015-06-22T17:04:15+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-06-22:/2015/06/22/chromeos-file-manager-got-better.html</id><summary type="html">&lt;p&gt;The ChromeOS file manager has always been a bit.... rubbish. Kind of. Back
in the very early days it only let you work with the Chromebook's (very
small) local file system. Then, some time later, they added Google Drive
integration, which was seriously handy. But it still lacked some important …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The ChromeOS file manager has always been a bit.... rubbish. Kind of. Back
in the very early days it only let you work with the Chromebook's (very
small) local file system. Then, some time later, they added Google Drive
integration, which was seriously handy. But it still lacked some important
stuff, like the ability to mount filesystems from Windows machines, or to use
sftp, or the like.&lt;/p&gt;
&lt;p&gt;That seems to have all changed with the addition of the "Add new services"
button:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Now I can add more stuff!" src="/attachments/2015/06/22/Screenshot 2015-06-22 at 16.48.11.png"&gt;&lt;/p&gt;
&lt;p&gt;As is often the way with Chromebooks, unless you're closely following forums
or Google+ communities (I don't), you tend not to know when this stuff is going
to turn up or even when it does (I mean, really, is it too much to ask that
the device alert you to handy new features? I mean,
&lt;a href="/2015/06/20/moto360-updated.html"&gt;my watch did&lt;/a&gt;!). For all I know this has
been there a while and it's the first time I've noticed.&lt;/p&gt;
&lt;p&gt;No mater how long it's been there, it's really rather handy. I've already
been able to hook it up to my Dropbox account, there's an SMB filesystem
handler (that I've not had a chance to test yet) and an sftp service
(which I have tested and seem to work well enough for my needs). There's
more too:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Handlers for all" src="/attachments/2015/06/22/Screenshot 2015-06-22 at 16.48.52.png"&gt;&lt;/p&gt;
&lt;p&gt;I'm guessing there's an API out there now that people can work with so I guess
the list of services you can install will grow over time.&lt;/p&gt;
&lt;p&gt;For people who want to do a little more than just browse the web, Chromebooks
(and other Chrome* devices for that matter) just got a little more useful.&lt;/p&gt;</content><category term="misc"></category><category term="ChromeOS"></category><category term="Chromebook"></category></entry><entry><title>A ChromeOS issue</title><link href="https://blog.davep.org/2015/06/21/a-chromeos-issue.html" rel="alternate"></link><published>2015-06-21T20:05:44+01:00</published><updated>2015-06-21T20:05:44+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-06-21:/2015/06/21/a-chromeos-issue.html</id><summary type="html">&lt;p&gt;Since the last update I've being having a rather odd issue on my old Chromebook.
This is my Samsung Series 5, the "original" commercial Chromebook to be released
(in the UK anyway). I first noticed it in TweetDeck but have since noticed that
it's affecting any browser tab. Simply put …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Since the last update I've being having a rather odd issue on my old Chromebook.
This is my Samsung Series 5, the "original" commercial Chromebook to be released
(in the UK anyway). I first noticed it in TweetDeck but have since noticed that
it's affecting any browser tab. Simply put, sections of the display either
"lag" in their content or they simply show up empty.&lt;/p&gt;
&lt;p&gt;First I tried to get a screenshot of what was going on but it didn't work. I
did get to show that there was a problem, but what was grabbed by the screenshot
wasn't what I saw seeing on the screen. Here's the screenshot:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot of new ChromeOS issue" src="/attachments/2015/06/21/Screenshot 2015-06-21 at 18.27.55.png"&gt;&lt;/p&gt;
&lt;p&gt;The only way I can show how it looked to me on the screen is with a (rather
horrible I'm afraid) photo:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo of what the screen actually looked like" src="/attachments/2015/06/21/IMG_20150621_183146.jpg"&gt;&lt;/p&gt;
&lt;p&gt;It's unclear to me if this is something wrong with the Chromebook itself, or
in this release of the OS. It is running the beta channel -- currently on
44.0.2403.54 -- so, of course, this sort of thing is to be expected.&lt;/p&gt;
&lt;p&gt;If it is the case that that Chromebook is on its way out -- either in terms of
that actual machine dying or support for it at the OS level going away -- it
won't be a terrible loss. It's been a great machine and has served me well
and wasn't terribly expensive to begin with (the
&lt;a href="https://www.youtube.com/watch?v=TVqe8ieqz10"&gt;lack of expense&lt;/a&gt; is one of
the things I really like about Chromebooks, which is why the Pixel continues
to perplex me), replacing it with one of the newer crop of Chromebooks won't
break the bank.&lt;/p&gt;
&lt;p&gt;But I'd be a little sad to see it go, I've done some pretty significant things
on it and it is, in some ways, a little bit of computer history.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Edit to add:&lt;/em&gt; I've now moved it back over to the stable channel, with a
powerwash on the way (of course) and this seems to have done the trick. I'm
no longer seeing any problems. The switch to stable even had the problem
showing. Here's a video of stable downloading:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;iframe width="480" height="270" src="https://www.youtube.com/embed/dKURvastEAA" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;That's pretty much the sort of thing I was seeing all over the place, and it
appeared to be getting worse as time went on.&lt;/p&gt;
&lt;p&gt;Hopefully this was a one-off and the problem isn't simply up in the beta
cannel and waiting to head down to stable.&lt;/p&gt;</content><category term="misc"></category><category term="ChromeOS"></category><category term="ChromeBook"></category><category term="Samsung"></category></entry><entry><title>Moto360 updated</title><link href="https://blog.davep.org/2015/06/20/moto360-updated.html" rel="alternate"></link><published>2015-06-20T14:14:09+01:00</published><updated>2015-06-20T14:14:09+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-06-20:/2015/06/20/moto360-updated.html</id><summary type="html">&lt;p&gt;Yesterday evening I finally got the following notification on my Moto360:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Moto360 Update Notification" src="/attachments/2015/06/20/Moto360Update.png"&gt;&lt;/p&gt;
&lt;p&gt;Given the charge was quite a way below that I took the watch off and put it
on charge and then did the update later.&lt;/p&gt;
&lt;p&gt;From what I could tell it all went pretty smooth. After updating it even …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Yesterday evening I finally got the following notification on my Moto360:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Moto360 Update Notification" src="/attachments/2015/06/20/Moto360Update.png"&gt;&lt;/p&gt;
&lt;p&gt;Given the charge was quite a way below that I took the watch off and put it
on charge and then did the update later.&lt;/p&gt;
&lt;p&gt;From what I could tell it all went pretty smooth. After updating it even
offered me a little tutorial on some of the new things it's added. So far
I've used (or set up) the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The much better "launcher"
  Finding and running apps on the watch was always a bit of a pain, so much so
  that others had even written special launchers for Android Wear. This seems
  to be pretty much solved now. Pressing and holding the watch's side button
  will pop up application list, from here you can swipe right to your
  contacts (them letting you send messages, start calls, etc) and right again
  for the usual list of actions that you used to go straight into.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The way it's done now makes a lot more sense and seems far cleaner.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WiFi
  I've yet to notice the benefit of this, but I've not paid too much attention
  yet either. The watch now does WiFi. This is supposed to mean that it can
  still work with my phone when it's out of Bluetooth range. I say I don't know
  if it's working yet because I use &lt;a href="https://play.google.com/store/apps/details?id=com.derfreimann.wear.widgets.miniconnectionnotifier&amp;amp;hl=en_GB"&gt;an app to tell me if my phone is out of
  range&lt;/a&gt;
  and it still keeps tripping as normal -- but I'm unsure if that means
  it's simply telling me it's out of BT range but really the watch is now
  doing its thing over WiFi, or perhaps the phone connection really has been
  lost despite me having set up the WiFi connection. More testing needs to
  happen here.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Setting this up was curious: I had to turn it on on the watch and then
  select the access points I wanted to work with, again on the watch. But to
  actually connect I had to switch back to my phone to enter the AP passwords
  (which makes perfect sense of course, nobody wants to type passwords into
  a watch face).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gestures
  These needed to be turned on in settings. I've being using them this morning
  to navigate cards on the watch and it's really well done and really natural.
  Simply put, you flick your wrist up, or down, to "flick" from one card to
  another. All it seems to be missing is some method of gesturing that I want
  to swipe a card out of the way.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other than the above it's pretty much business as usual. Hopefully there's
been some work to improve battery life and all that sort of stuff, and only
time will tell if a difference has been made there.&lt;/p&gt;</content><category term="misc"></category><category term="Android Wear"></category><category term="Moto360"></category><category term="Android"></category></entry><entry><title>ChromeOS ssh has gone! (sort of)</title><link href="https://blog.davep.org/2015/06/19/chromeos-ssh-has-gone-sort-of.html" rel="alternate"></link><published>2015-06-19T09:10:06+01:00</published><updated>2015-06-19T09:10:06+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-06-19:/2015/06/19/chromeos-ssh-has-gone-sort-of.html</id><summary type="html">&lt;p&gt;I've no idea when this happened, and I'll admit that the advice it gives is
advice I've mostly being following anyway for quite a long time, but it seems
that ssh in the ChromeOS terminal has been removed. This is what just happened
when I tried to use it just …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've no idea when this happened, and I'll admit that the advice it gives is
advice I've mostly being following anyway for quite a long time, but it seems
that ssh in the ChromeOS terminal has been removed. This is what just happened
when I tried to use it just now:&lt;/p&gt;
&lt;p&gt;&lt;img alt="ChromeOS ssh no longer working" src="/attachments/2015/06/19/Screenshot 2015-06-19 at 09.03.58.png"&gt;&lt;/p&gt;
&lt;p&gt;To be fair, &lt;a href="https://chrome.google.com/webstore/detail/secure-shell/pnhechapfaindjhompbnflcldabbghjo?hl=en"&gt;Chrome Secure Shell&lt;/a&gt;
is pretty damn good and has served me well for the past couple or so years,
working well on the Chromebook and on Windows 7 and 8 (and also now on the Mac,
although I'm tending to use ssh in its native terminal more).&lt;/p&gt;
&lt;p&gt;I wonder if any other of the limited features of the ChromeOS terminal (in
non-dev mode anyway) are going to go the same way?&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;As an aside to the above, something kind of ironic happened as I was writing
this. I opened Chrome so I could preview the post as I was writing it and
I suffered one of Chrome's rather common extension crashes. Look what one of
those extensions was (and I wasn't even using it at the time):&lt;/p&gt;
&lt;p&gt;&lt;img alt="Chrome ssh extension crashes for no reason" src="/attachments/2015/06/19/Screen Shot 2015-06-19 at 09.12.34.png"&gt;&lt;/p&gt;
&lt;p&gt;Not exactly the best advert for the non-optional replacement.&lt;/p&gt;</content><category term="misc"></category><category term="chrome"></category><category term="chromeos"></category><category term="chromebook"></category><category term="ssh"></category></entry><entry><title>A mild Chrome annoyance</title><link href="https://blog.davep.org/2015/06/18/a-mild-chrome-annoyance.html" rel="alternate"></link><published>2015-06-18T16:49:24+01:00</published><updated>2015-06-18T16:49:24+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-06-18:/2015/06/18/a-mild-chrome-annoyance.html</id><summary type="html">&lt;p&gt;For a long time now Chrome has been my web browser of choice. It has, to some
degree, become my "other emacs" (ignoring for a moment that my use of GNU
emacs has sort of lapsed the last few years). By that I mean that it's a
portable environment that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For a long time now Chrome has been my web browser of choice. It has, to some
degree, become my "other emacs" (ignoring for a moment that my use of GNU
emacs has sort of lapsed the last few years). By that I mean that it's a
portable environment that serves me well on many operating systems and, for
one of my machines, actually &lt;em&gt;is&lt;/em&gt; the operating system. I really appreciate how
Chrome's sync lets me feel right at home no matter which machine I'm on.&lt;/p&gt;
&lt;p&gt;But I've run into one small issue that's kind of annoying.&lt;/p&gt;
&lt;p&gt;In some situations I find it pleasing, and I find it makes sense, that some
web "apps" open in a window of their own rather than in a Chrome tab. On Windows
and on ChromeOS this is simple enough, all I need to do is find the "app" in
the Chrome app launcher, pull up the content menu, and tell it to open as a
window.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Chrome app context menu on Windows 7" src="/attachments/2015/06/18/GmailContextWin.png"&gt;&lt;/p&gt;
&lt;p&gt;Nice and simple&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Now, the Mac, so well known for doing everything every other OS does but doing
it better and being easier to use.... you'd expect it's at least the same there,
right?&lt;/p&gt;
&lt;p&gt;Nope.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Chrome app context menu on OS X" src="/attachments/2015/06/18/GmailContextMac.png"&gt;&lt;/p&gt;
&lt;p&gt;There's no option at all to open as a window!&lt;/p&gt;
&lt;p&gt;So, on the Mac, while I'd love to be able to open Gmail as a window/app in its
own right, I'm totally out of luck, it seems. I've no idea whose "fault" this
is. It's not clear to me if this is a Chrome/Google decision or if it's about
how things have to work on a Mac. Thing is, I find it hard to believe that
it's the latter given that Google Keep runs in its own window on the Mac and
I can happily pin it to the dock.&lt;/p&gt;
&lt;hr&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;It's that simple on ChromeOS too. In case you're wondering why I didn't
also illustrate that, it's because you can't take a screenshot on ChromeOS
while you've got a context menu open. O_o&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="misc"></category><category term="Google"></category><category term="Chrome"></category><category term="Mac"></category><category term="Windows"></category></entry><entry><title>Hello, World!</title><link href="https://blog.davep.org/2015/06/18/hello-world.html" rel="alternate"></link><published>2015-06-18T14:53:00+01:00</published><updated>2015-06-18T14:53:00+01:00</updated><author><name>Dave Pearson</name></author><id>tag:blog.davep.org,2015-06-18:/2015/06/18/hello-world.html</id><summary type="html">&lt;p&gt;Hello, world.&lt;/p&gt;
&lt;p&gt;So I've decided that it's time I had a blog again. An actual blog. Not a set
of posts on &lt;a href="https://plus.google.com/+DavePearson/posts"&gt;Google+&lt;/a&gt; or a torrent
of 140-character thoughts on &lt;a href="https://twitter.com/davepdotorg"&gt;twitter&lt;/a&gt; but
an actual blog.&lt;/p&gt;
&lt;p&gt;Part of the reason for this is that there's a couple of personal coding projects …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello, world.&lt;/p&gt;
&lt;p&gt;So I've decided that it's time I had a blog again. An actual blog. Not a set
of posts on &lt;a href="https://plus.google.com/+DavePearson/posts"&gt;Google+&lt;/a&gt; or a torrent
of 140-character thoughts on &lt;a href="https://twitter.com/davepdotorg"&gt;twitter&lt;/a&gt; but
an actual blog.&lt;/p&gt;
&lt;p&gt;Part of the reason for this is that there's a couple of personal coding projects
I want to have a go at over the next few months and writing about them as I
work on them might be fun. Another reason is that I've being wanting to explore
the business of hosting a blog on GitHub pages for quite some time and now's
the perfect time to do it.&lt;/p&gt;
&lt;p&gt;So how am I doing this? Well, for starters, I recently acquired an iMac. The
reasons for how and why I chose to do this are varied and mostly uninteresting
but what it does mean is that, for the first time in quite a long time, I
have a Unix desktop machine again. This fact alone means it's nice and easy
for me to play with the likes of Git (or, at the moment more
&lt;a href="https://mac.github.com/"&gt;GitHub for Mac&lt;/a&gt; than the command line git), ruby,
&lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; and
&lt;a href="http://www.sublimetext.com/"&gt;SublimeText&lt;/a&gt; (along with
&lt;a href="https://packagecontrol.io/packages/Jekyll"&gt;a rather nifty package for quickly kicking off a blog post&lt;/a&gt;).
So that's how I'm doing it. Writing it all locally and pushing it up to
GitHub and hosting it with &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As this goes on I imagine much will change. I've started out with a basic
setup, created by simply using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;davep@Ariel:~/blogging$&lt;span class="w"&gt; &lt;/span&gt;jekyll&lt;span class="w"&gt; &lt;/span&gt;new&lt;span class="w"&gt; &lt;/span&gt;davep.github.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;From now on I'll be playing with styles and my own layouts to see what I can
come up with and what I like (although, I most say, for the most part I'm
actually liking the clean look it delivers out of the box).&lt;/p&gt;
&lt;p&gt;One thing that's obviously missing right now is a facility for commenting.
That's something I'll look into should I feel it's necessary -- from what I've
seen elsewhere it's easy enough to make use of something like
&lt;a href="https://disqus.com/"&gt;disqus&lt;/a&gt;. &lt;strong&gt;Update:&lt;/strong&gt; This has now happened.&lt;/p&gt;
&lt;p&gt;One other thing I might look at doing is putting this behind my own domain.
For the moment it's only available via github.io and I guess it might look
nicer if it was actually available via a URL that looks like the name I've
attached to the blog. &lt;strong&gt;Update:&lt;/strong&gt; This has now happened.&lt;/p&gt;
&lt;p&gt;Anyway, that's it for now. Time to push this up and think some more about
where it'll go from here.&lt;/p&gt;</content><category term="misc"></category><category term="blog"></category><category term="mac"></category></entry></feed>